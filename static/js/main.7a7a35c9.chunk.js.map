{"version":3,"sources":["API/SequrityAPI.tsx","redux/reducers/auth-reducer.ts","API/AuthAPI.tsx","API/UsersAPI.tsx","components/Profile/Posts/Post/Post.module.css","components/NavBar/sideBar/sideBar.module.css","components/common/customElements/Inputs.module.css","components/Users/users.module.css","components/Profile/Profile.module.css","utils/validators.tsx","components/Users/User/User.module.css","components/NavBar/sideBar/friend/friend.module.css","components/Users/SearchUsers/SearchUsers.module.css","components/Profile/Profile-info/DescriptionForm.module.css","components/Profile/Posts/Posts.module.css","components/Profile/Posts/AddPost/AddPost.module.css","API/API.tsx","redux/reducers/dialogs-reducer.ts","Images/like.png","Images/addPostBack.png","Images/91.svg","components/common/Preloader/Preloader.module.css","Images/Light.png","Images/Dark.png","Images/starOfDeath.png","Images/background.png","Images/kosmos.jpg","components/StartPage/StartPage.module.css","redux/reducers/profile-reducer.ts","components/NavBar/NavBar.module.css","components/common/customElements/Inputs.tsx","serviceWorker.js","components/NavBar/sideBar/friend/friend.tsx","components/NavBar/sideBar/sideBar.tsx","components/NavBar/sideBar/sideBarContainer.tsx","components/NavBar/NavBar.tsx","components/Music/Music.tsx","components/News/News.tsx","components/common/AvatarGenerator/AvatarGenerator.tsx","components/CreateAvatar/CreateAvatar.tsx","components/Users/User/User.tsx","components/Users/Users.tsx","components/Users/SearchUsers/SearchUsers.tsx","components/Users/UsersContainer.tsx","components/Profile/Profile-info/Status.tsx","components/Profile/Profile-info/DescriptionForm.tsx","components/Profile/Profile-info/Description.tsx","components/Profile/Profile-info/Profile-info.tsx","components/Profile/Posts/Post/Post.tsx","components/Profile/Posts/AddPost/AddPost.tsx","components/Profile/Posts/Posts.tsx","components/Profile/Posts/PostsContainer.tsx","components/common/Preloader/Preloader.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","redux/reducers/app-reducer.ts","components/Header/Head.tsx","components/Header/HeadContainer.tsx","HOC/withSuspense.tsx","components/StartPage/StartPage.tsx","App.tsx","redux/redux-store.ts","index.tsx","Images/scalable-vector-graphics-avatar-learning-icon-customer-login-avatar.jpg","components/Profile/Profile-info/Profile-Info.module.css","components/common/AvatarGenerator/AvatarGenerator.module.css","API/ProfileAPI.tsx","redux/reducers/users-reducer.ts","components/Header/Head.module.css"],"names":["SequrityAPI","instance","get","then","response","data","SET_USER_AUTH_DATA","SET_LOGO_SRC","SET_CAPTCHA","initialState","id","login","email","isFetching","logoSrc","captchaUrl","loginError","type","message","setLoginErrorMessage","loginErrorMessage","toggleFetching","setCaptchaUrl","url","setUserAuthData","authMe","dispatch","a","AuthAPI","AuthMe","ProfileAPI","getProfile","profile","photos","small","UsersAPI","getUsers","friends","setUserFriends","items","console","error","AuthLogin","res","resultCode","resultCodes","Success","CaptchaIsRequired","getCaptcha","messages","length","logout","AuthLogout","captcha","authReducer","state","action","SET_PHOTO","post","delete","currentPage","pageSize","friend","term","unfollowUser","followUser","module","exports","required","value","maxLengthCreator","max","axios","create","withCredentials","baseURL","headers","MessagesData","DialogsData","name","sendMessageActionCreator","dialogsReducer","messageId","newMessage","CLEAR_PROFILE","ADD_POST","SET_USER_PROFILE","SET_STATUS","TOGGLE_FETCHING","SET_USER_FRIENDS","postData","likesCount","userFriends","status","isProfileFetching","setUserProfile","addPostActionCreator","clearProfile","getUserProfile","userId","getUserStatus","getMyProfile","getStatus","savePhoto","file","saveProfile","stopSubmit","_error","profileReducer","postId","newPost","FOLLOW","user","UNFOLLOW","index","findIndex","slice","CustomTextarea","input","meta","props","hasError","touched","className","styles","formControl","CustomInput","Boolean","window","location","hostname","match","Friend","to","src","userLogo","alt","friendName","theme","SideBar","useState","shuffled","setShuffled","useEffect","interval","setInterval","sort","Math","random","clearInterval","sideBar","bordered","title","friendsList","map","key","connect","profilePage","useSelector","app","NavBar","hoverable","Item","activeClassName","active","Music","style","color","News","TabPane","Tabs","AvatarGenerator","avatarRef","useRef","selectedStyle","setSelectedStyle","loading","setLoading","selectedIndex","setSelectedIndex","useDispatch","optionsContext","OptionContext","allOptions","tabNames","tabs","Array","from","current","options","option","label","currentAvatar","avatarStyle","accessoriesType","topType","hairColor","facialHairType","clotheType","clotheColor","eyeType","eyebrowType","mouthType","skinColor","avatarStyles","hatColor","facialHairColor","graphicType","hairColorDisabled","includes","hatColorDisabled","facialHairDisabled","facialHairColorDisabled","accessoriesDisabled","clothesColorDisabled","graphicDisabled","gutter","justify","height","avatarGenerator","presentationCol","xs","sm","md","avatarPresentation","avatarFull","ref","width","avatarControl","disabled","Object","keys","onClick","svgString","XMLSerializer","serializeToString","ReactDOM","svg","Blob","File","htmlType","avatarGeneration","tabBarGutter","defaultActiveKey","animated","tab","disabledTabs","autoHeight","autoHeightMax","renderTrackHorizontal","display","renderThumbHorizontal","hideTracksWhenNotNeeded","OptionKey","selectFromKeys","item","lg","property","selectItem","avatarSelect","selected","join","CreateAvatar","auth","User","bodyStyle","photo","large","align","userName","currentAuthUserId","followButtonContainer","followingInProgress","some","followed","Users","users","usersContainer","follow","unfollow","SearchUsers","searchOptions","inputValue","setInputValue","debounced","useDebouncedCallback","setSearchOptions","page","searchInputContainer","spiner","indicator","LoadingOutlined","fontSize","spin","placeholder","onChange","e","target","callback","mapDispatchToProps","usersPage","totalUsersCount","history","useHistory","parsedQuery","queryString","search","substr","querySearch","String","push","pathname","setSearchOptionsCallback","useCallback","paginator","size","total","scrollTo","top","behavior","pageSizeOptions","defaultCurrent","onShowSizeChange","hideOnSinglePage","showSizeChanger","showQuickJumper","Status","setStatus","editMode","setEditMode","padding","autoFocus","onBlur","onDoubleClick","reduxForm","form","onSubmit","handleSubmit","Field","component","validate","Contacts","Description","fullName","about","lookingForAJob","lookingForAJobDescription","aboutMe","contacts","ProfileInfo","span","Avatar","isMyProfile","textAlign","showUploadList","beforeUpload","icon","UploadOutlined","editButton","initialValues","Post","avatar","Message","Like","like","heart","TextArea","Input","AddPost","setNewPost","addPostContainer","addPostBack","autoSize","minRows","maxRows","addPost","Posts","postElements","profileFullName","PostsContainer","Preloader","preloader","Profile","compose","withRouter","lottieOptions","autoplay","animationData","userAvatar","params","Number","container","SWITCH_THEME","initialized","switchTheme","appReducer","Header","logo","document","getElementById","opacity","starOfDeath","header","star","themeOpacityDark","dark","light","loginBlock","Head","withSuspense","Component","Suspense","fallback","StartPage","Login","React","lazy","Dialogs","NotFound","initializeApp","background","kosmos","exact","path","render","offset","maxWidth","marginLeft","rootReducer","combineReducers","dialogsPage","usersReducer","formReducer","store","createStore","applyMiddleware","thunkMiddleware","navigator","serviceWorker","ready","registration","unregister","catch","put","formData","FormData","append","SET_USERS","toggleFollowingInProgress","inProgress","followAction","unfollowAction","usersCount","totalCount","filter"],"mappings":"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,OAITrC,mBAAS,MAJA,mBAI5CsC,EAJ4C,KAI7BC,EAJ6B,OAKPvC,mBAAS,IALF,mBAM7CF,GAN6C,UAMrCoB,aAAY,SAACvG,GAAD,OAAyBA,EAAMwG,IAAIrB,UACvDhH,EAAW0J,cACXC,EAAiBR,iBAAO,IAAIS,gBAAcC,eAC1CC,EAAW,CAAC,OAAQ,cAAe,YAAa,aAClD,cAAe,oBAAqB,UAAW,gBAC/C,kBAAmB,OAAQ,WAAY,QAAS,cAC9CC,EAAOZ,iBAAOa,MAAMC,KAAKN,EAAeO,QAAQC,SACjDnC,KAAI,SAACoC,EAAa5E,GACf,MAAO,CACHyC,IAAKmC,EAAOnC,IACZoC,MAAOP,EAAStE,QAkCtB8E,EAAa,2BAdG,CAClBC,YAAa,cACbC,gBAAiB,QACjBC,QAAS,SACTC,UAAW,SACXC,eAAgB,QAChBC,WAAY,iBACZC,YAAa,SACbC,QAAS,UACTC,YAAa,UACbC,UAAW,UACXC,UAAW,UAG6B7B,GAGtC8B,EAAe,CACjBT,QAAS,CACL,SACA,WACA,MACA,QACA,SACA,aACA,aACA,aACA,aACA,kBACA,cACA,cACA,gBACA,gBACA,iBACA,gBACA,cACA,kBACA,qBACA,sBACA,qBACA,mBACA,oBACA,yBACA,oBACA,oBACA,mBACA,wBACA,sBACA,qBACA,sBACA,sBACA,iBACA,qBACA,8BAEJD,gBAAiB,CACb,QACA,OACA,iBACA,iBACA,QACA,aACA,aAEJW,SAAU,CACN,QACA,SACA,SACA,SACA,SACA,SACA,UACA,aACA,cACA,eACA,YACA,eACA,OACA,MACA,SAEJT,UAAW,CACP,SACA,QACA,SACA,eACA,QACA,YACA,aACA,WACA,MACA,cAEJC,eAAgB,CACZ,QACA,cACA,aACA,gBACA,iBACA,mBAEJS,gBAAiB,CACb,SACA,QACA,SACA,eACA,QACA,YACA,WACA,OAEJR,WAAY,CACR,cACA,gBACA,gBACA,eACA,SACA,UACA,gBACA,iBACA,cAEJC,YAAa,CACT,QACA,SACA,SACA,SACA,SACA,SACA,UACA,aACA,cACA,eACA,YACA,eACA,OACA,MACA,SA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","file":"static/js/main.7a7a35c9.chunk.js","sourcesContent":["import {instance} from \"./API\";\r\n\r\n\r\ntype GetCaptchaResponseType = {\r\n    url: string\r\n}\r\n\r\nexport const SequrityAPI = {\r\n\r\n    getCaptcha() {\r\n        return instance.get<GetCaptchaResponseType>('security/get-captcha-url')\r\n            .then(response => response.data)\r\n    }\r\n};","import {resultCodes} from '../../API/API';\nimport {FormAction} from 'redux-form';\nimport {SetPhotoActionType, SET_PHOTO, setUserFriends} from \"./profile-reducer\";\nimport {ThunkAction} from \"redux-thunk\";\nimport {AppStateType} from \"../redux-store\";\nimport {ProfileAPI} from \"../../API/ProfileAPI\";\nimport {AuthAPI, LoginRequestType} from \"../../API/AuthAPI\";\nimport {SequrityAPI} from \"../../API/SequrityAPI\";\nimport {UsersAPI} from \"../../API/UsersAPI\";\n\n\nexport const SET_USER_AUTH_DATA = 'auth_reducer/SET_USER_AUTH_DATA';\nconst TOGGLE_FETCHING_AUTH = 'auth_reducer/TOGGLE_FETCHING_AUTH';\nconst SET_LOGO_SRC = 'auth_reducer/SET_LOGO_SRC';\nconst SET_CAPTCHA = 'auth_reducer/SET_CAPTCHA';\nconst SET_LOGIN_ERROR_MESSAGE = 'auth_reducer/SET_LOGIN_ERROR_MESSAGE';\n\n\nexport type InitialAuthStateType = {\n    id: number | null,\n    login: string | null,\n    email: string | null,\n    isFetching: boolean,\n    logoSrc: string | null,\n    captchaUrl: string\n    loginError: loginErrorType\n};\n\nconst initialState: InitialAuthStateType = {\n    id: null,\n    login: null,\n    email: null,\n    isFetching: false,\n    logoSrc: null,\n    captchaUrl: '',\n    loginError: {type:'error', message: ''}\n};\n\nconst authReducer = (state = initialState, action: ActionsTypes): InitialAuthStateType => {\n\n    switch (action.type) {\n        case SET_USER_AUTH_DATA:\n            return {...state, ...action.data};\n        case TOGGLE_FETCHING_AUTH:\n            return {...state, isFetching: action.isFetching};\n        case SET_LOGO_SRC:\n            return {...state, logoSrc: action.logoSrc};\n        case SET_PHOTO:\n            return {...state, logoSrc: action.photos.small};\n        case SET_CAPTCHA:\n            return {...state, captchaUrl: action.url};\n        case SET_LOGIN_ERROR_MESSAGE:\n            return {...state, loginError: action.loginError};\n        default:\n            return state;\n    }\n\n};\n\ntype ActionsTypes = SetLogoSrcType | ToggleFetchingType |\n                    SetCaptchaUrlType | SetUserAuthDataType |\n                    SetPhotoActionType | SetLoginErrorMessageType;\n\ntype SetLoginErrorMessageType = {\n    type: typeof SET_LOGIN_ERROR_MESSAGE\n    loginError: loginErrorType\n}\n\nexport type loginErrorType = {\n    type: 'error'\n    message: string\n}\n\nexport const setLoginErrorMessage = (loginErrorMessage: string): SetLoginErrorMessageType => {\n    return {\n        type: SET_LOGIN_ERROR_MESSAGE,\n        loginError: {type: 'error', message: loginErrorMessage}\n    }\n};\n\ntype SetLogoSrcType = {\n    type: typeof SET_LOGO_SRC,\n    logoSrc: string | null\n}\n\nexport const setLogoSrc = (logoSrc: string | null): SetLogoSrcType => {\n    return {type: SET_LOGO_SRC, logoSrc};\n};\n\ntype ToggleFetchingType = {\n    type: typeof TOGGLE_FETCHING_AUTH,\n    isFetching: boolean\n}\n\nexport const toggleFetching = (isFetching: boolean): ToggleFetchingType => {\n    return {\n        type: TOGGLE_FETCHING_AUTH,\n        isFetching: isFetching,\n    };\n};\n\ntype SetCaptchaUrlType = {\n    type: typeof SET_CAPTCHA,\n    url: string\n}\n\nexport const setCaptchaUrl = (url: string): SetCaptchaUrlType => {\n    return {type: SET_CAPTCHA, url}\n};\n\ntype AuthDataType = {\n    id: number | null\n    login: string | null\n    email: string | null\n}\nexport type SetUserAuthDataType = {\n    type: typeof SET_USER_AUTH_DATA,\n    data: AuthDataType\n}\n\nexport const setUserAuthData = (id: number | null, login: string | null, email: string | null): SetUserAuthDataType => {\n    return {type: SET_USER_AUTH_DATA, data: {id, login, email}};\n};\n\nexport type ProfileContactsType = {\n    [key : string] : string\n    github: string\n    vk: string\n    facebook: string\n    instagram: string\n    twitter: string\n    website: string\n    youtube: string\n    mainLink: string\n}\nexport type PhotosType = {\n    small: string | null\n    large: string | null\n}\nexport type ProfileType = {\n    userId: number\n    lookingForAJob: boolean\n    lookingForAJobDescription: string\n    fullName: string\n    photos: PhotosType\n    aboutMe: string\n    contacts: ProfileContactsType\n}\n\n\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionsTypes | FormAction>;\n\nexport const authMe = (): ThunkType => async dispatch => {\n    try {\n        dispatch(toggleFetching(true));\n        const data = await AuthAPI.AuthMe();\n\n        const {id, login, email} = data.data;\n        dispatch(setUserAuthData(id, login, email));\n\n        const profile = id && await ProfileAPI.getProfile(id);\n        profile && dispatch(setLogoSrc(profile.photos.small));\n        const friends = await UsersAPI.getUsers(1,5,true);\n        friends && dispatch(setUserFriends(friends.items));\n    } catch (e) {\n        console.error(e);\n    } finally {\n        dispatch(toggleFetching(false));\n    }\n};\n\n\nexport const login = (data: LoginRequestType): ThunkType => async dispatch => {\n    const res = await AuthAPI.AuthLogin(data);\n    if (res.resultCode === resultCodes.Success) {\n        dispatch(setCaptchaUrl(''));\n        dispatch(setLoginErrorMessage(''));\n        return dispatch(authMe());\n    } else {\n        if (res.resultCode === resultCodes.CaptchaIsRequired) {\n            await dispatch(getCaptcha());\n        }\n        const message = res.messages && res.messages.length > 0 ? res.messages[0] : 'some error';\n        dispatch(setLoginErrorMessage(message));\n    }\n};\n\nexport const logout = (): ThunkType => async dispatch => {\n    await AuthAPI.AuthLogout();\n    dispatch(setUserAuthData(null, null, null));\n    dispatch(setUserFriends([]));\n};\n\n\nexport const getCaptcha = (): ThunkType => async dispatch => {\n    try {\n        const captcha = await SequrityAPI.getCaptcha();\n        dispatch(setCaptchaUrl(captcha.url))\n    } catch (e) {\n        console.error(e)\n    }\n};\n\nexport default authReducer;","import {instance, RegularResponseType} from \"./API\";\r\n\r\ntype LoginResponseBodyType = {\r\n    data: { userId: number }\r\n}\r\n\r\ntype AuthMeResponseBodyType = {\r\n    id: number\r\n    email: string\r\n    login: string\r\n}\r\n\r\nexport type LoginRequestType = {\r\n    email: string,\r\n    password: string,\r\n    rememberMe: boolean,\r\n    captcha?: string\r\n}\r\n\r\n\r\nexport const AuthAPI = {\r\n\r\n    AuthMe() {\r\n        return instance.get<RegularResponseType<AuthMeResponseBodyType>>(`auth/me`)\r\n            .then(response => response.data)\r\n    },\r\n\r\n    AuthLogin(data: LoginRequestType) {\r\n        return instance.post<RegularResponseType<LoginResponseBodyType>>('auth/login', data)\r\n            .then(response => response.data)\r\n    },\r\n\r\n    AuthLogout() {\r\n        return instance.delete<RegularResponseType>('auth/login')\r\n    }\r\n\r\n};","import {instance, RegularResponseType} from \"./API\";\r\nimport {UserType} from \"../redux/reducers/users-reducer\";\r\n\r\nexport type GetUsersResponseType = {\r\n    items: Array<UserType>\r\n    totalCount: number\r\n    error: string | null\r\n}\r\n\r\nexport const UsersAPI = {\r\n\r\n    getUsers(currentPage: number, pageSize: number, friend?: boolean, term?: string) {\r\n        return instance.get<GetUsersResponseType>(`users?page=${currentPage}&count=${pageSize}` + (friend ? `&friend=true`:'') +(term ? `&term=${term}`:''))\r\n            .then(response => response.data)\r\n    },\r\n\r\n    unfollowUser(id: number) {\r\n        return instance.delete<RegularResponseType>(`follow/${id}`)\r\n            .then(response => response.data)\r\n    },\r\n\r\n    followUser(id: number) {\r\n        return instance.post<RegularResponseType>(`follow/${id}`, {})\r\n            .then(response => response.data)\r\n    }\r\n\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Post\":\"Post_Post__cRRaa\",\"avatar\":\"Post_avatar__3abDU\",\"Like\":\"Post_Like__1Ou17\",\"heart\":\"Post_heart__az2u0\",\"Message\":\"Post_Message__xfMhO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sideBar\":\"sideBar_sideBar__1PBEh\",\"bordered\":\"sideBar_bordered__28ze2\",\"title\":\"sideBar_title__DnGe1\",\"friendsList\":\"sideBar_friendsList__3-Dud\",\"show\":\"sideBar_show__btw_E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"Inputs_formControl__2rsW4\",\"error\":\"Inputs_error__2RxS6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersContainer\":\"users_usersContainer__2EFDU\",\"paginator\":\"users_paginator__13mwc\",\"searchBack\":\"users_searchBack__2NpMm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Profile\":\"Profile_Profile__2ENRy\",\"container\":\"Profile_container__29t-S\"};","\r\nexport const required = (value: string) => {\r\n    if (value) return undefined;\r\n    return 'required field';\r\n};\r\n\r\nexport const maxLengthCreator = (max: number) => (value: string) => {\r\n  if (value.length > max) return `max length is ${max} symbols`;\r\n  return undefined;\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photo\":\"User_photo__1EtTr\",\"followButtonContainer\":\"User_followButtonContainer__3Mjhr\",\"userName\":\"User_userName__2NiP_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend\":\"friend_friend__2X0g2\",\"friendName\":\"friend_friendName__3b_9P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInputContainer\":\"SearchUsers_searchInputContainer__OpCI9\",\"spiner\":\"SearchUsers_spiner__3Pzzq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"DescriptionForm_form__3-tkH\",\"error\":\"DescriptionForm_error__3GLX7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Posts\":\"Posts_Posts__3akOg\",\"title\":\"Posts_title__3Bxxu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addPostContainer\":\"AddPost_addPostContainer__1SUwa\",\"addPostBack\":\"AddPost_addPostBack__3AonL\"};","import axios from \"axios\";\r\n\r\nexport const instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    headers: {\r\n        'API-KEY': '8db7e860-79e2-4316-a7a6-e54ca669f748'\r\n    }\r\n});\r\n\r\nexport enum resultCodes {\r\n    Success = 0,\r\n    Error = 1,\r\n    CaptchaIsRequired = 10\r\n}\r\n\r\nexport type RegularResponseType<D = {}> = {\r\n    resultCode: resultCodes\r\n    messages: Array<string>\r\n    data: D\r\n}\r\n\r\n\r\n\r\n\r\n","const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nexport type MessageType = {\r\n    id: number\r\n    message: string\r\n}\r\nexport type DialogType = {\r\n    id: number\r\n    name: string\r\n    logoSrc: string\r\n}\r\n\r\nexport type InitialStateType = typeof initialState;\r\n\r\nconst initialState = {\r\n    MessagesData: [\r\n        {id: 1, message: 'Hi!'},\r\n        {id: 2, message: 'How are u?'},\r\n        {id: 3, message: 'Fine'},\r\n    ] as Array<MessageType>,\r\n    DialogsData: [\r\n        {\r\n            id: 1,\r\n            name: 'Dima',\r\n            logoSrc: 'https://i.pinimg.com/280x280_RS/91/a3/2c/91a32c5d5d8fd2a5c81c6874a65a4fb4.jpg'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Alex',\r\n            logoSrc: 'https://www.autoalloys.com/content/images/thumbs/0003760_19-ava-memphis-hyper-silver-alloy-wheels_550.png'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Vanya',\r\n            logoSrc: 'https://whatsism.com/uploads/posts/2018-07/1530546770_rmk_vdjbx10.jpg'\r\n        },\r\n        {id: 4, name: 'Viktor', logoSrc: 'https://archilab.online/images/1/123.jpg'},\r\n        {id: 5, name: 'Andrew', logoSrc: 'https://cs16planet.ru/steam-avatars/images/avatar2700.jpg'}\r\n    ] as Array<DialogType>\r\n};\r\n\r\n\r\nconst dialogsReducer = (state = initialState, action: SendMessageType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case SEND_MESSAGE: {\r\n            const messageId = state.MessagesData.length + 1;\r\n            const newMessage = {\r\n                id: messageId,\r\n                message: action.message\r\n            };\r\n            return {...state, MessagesData: [...state.MessagesData, newMessage]};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n\r\ntype SendMessageType = {\r\n    type: typeof SEND_MESSAGE\r\n    message: string\r\n}\r\n\r\nexport const sendMessageActionCreator = (message:string): SendMessageType => {\r\n    return {type: SEND_MESSAGE, message};\r\n};\r\n\r\nexport default dialogsReducer;","module.exports = __webpack_public_path__ + \"static/media/like.c2ba4745.png\";","module.exports = __webpack_public_path__ + \"static/media/addPostBack.d67502f3.png\";","module.exports = __webpack_public_path__ + \"static/media/91.32dab0f3.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__1E3-0\"};","module.exports = __webpack_public_path__ + \"static/media/Light.3f273896.png\";","module.exports = __webpack_public_path__ + \"static/media/Dark.968888fd.png\";","module.exports = __webpack_public_path__ + \"static/media/starOfDeath.59687f21.png\";","module.exports = __webpack_public_path__ + \"static/media/background.e9b8b6bb.png\";","module.exports = __webpack_public_path__ + \"static/media/kosmos.c8e84a45.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"StartPage_container__3IkJg\"};","import {resultCodes} from \"../../API/API\";\nimport {stopSubmit} from \"redux-form\";\nimport {PhotosType, ProfileType} from \"./auth-reducer\";\nimport {ThunkAction} from \"redux-thunk\";\nimport {AppStateType} from \"../redux-store\";\nimport {DescriptionFormDataType} from \"../../components/Profile/Profile-info/DescriptionForm\";\nimport {ProfileAPI} from \"../../API/ProfileAPI\";\nimport {AuthAPI} from \"../../API/AuthAPI\";\nimport {FOLLOW, FollowActionType, UNFOLLOW, UnfollowActionType, UserType} from \"./users-reducer\";\n\nexport const SET_PHOTO = 'profile_reducer/SET_PHOTO';\nconst CLEAR_PROFILE = 'profile_reducer/CLEAR_PROFILE';\nconst ADD_POST = 'profile_reducer/ADD_POST';\nconst SET_USER_PROFILE = 'profile_reducer/SET_USER_PROFILE';\nconst SET_STATUS = 'profile_reducer/SET_STATUS';\nconst TOGGLE_FETCHING = 'profile_reducer/TOGGLE_FETCHING';\nconst SET_USER_FRIENDS = 'profile_reducer/SET_USER_FRIENDS';\n\nexport type PostType = {\n    id: number\n    post: string\n    likesCount: number\n}\n\ntype InitialProfileState = typeof initialState;\n\nconst initialState = {\n    postData: [\n        {id: 1, post: 'Hi, how are you?', likesCount: 9},\n        {id: 2, post: 'Working hard.', likesCount: 15}\n    ] as Array<PostType>,\n    profile: null as ProfileType|null,\n    userFriends: [] as Array<UserType>,\n    status: '',\n    isProfileFetching: false,\n};\n\nconst profileReducer = (state = initialState, action: ActionsTypes): InitialProfileState => {\n\n    switch (action.type) {\n        case ADD_POST: {\n            let postId = state.postData.length + 1;\n            let newPost = {\n                id: postId,\n                post: action.post,\n                likesCount: 0\n            };\n            return {...state, postData: [newPost, ...state.postData]};\n        }\n        case FOLLOW: {\n            return {...state, userFriends: [...state.userFriends, action.user]}\n        }\n        case UNFOLLOW: {\n            const index = state.userFriends.findIndex(user => user.id === action.user.id);\n            if ( index === -1 ) {return state}\n            return {...state, userFriends: [...state.userFriends.slice(0,index), ...state.userFriends.slice(index+1)]}\n        }\n        case TOGGLE_FETCHING: {\n            return {...state, isProfileFetching: action.isProfileFetching};\n        }\n        case SET_USER_PROFILE: {\n            return {...state, profile: action.profile}\n        }\n        case CLEAR_PROFILE: {\n            return {...state, profile: null}\n        }\n        case SET_STATUS: {\n            return {...state, status: action.status}\n        }\n        case SET_PHOTO: {\n            return {...state, profile: {...state.profile, photos: action.photos} as ProfileType}\n        }\n        case SET_USER_FRIENDS: {\n            return {...state, userFriends: action.friends}\n        }\n        default:\n            return state;\n    }\n\n};\n\ntype ActionsTypes = ToggleFetchingType | SetStatusActionType | SetUserProfileActionType |\n    AddPostActionType | ClearProfileActionType | SetPhotoActionType | SetUserFriends |\n    FollowActionType | UnfollowActionType;\n\ntype SetUserFriends = {\n    type: typeof SET_USER_FRIENDS\n    friends: Array<UserType>\n}\n\nexport const setUserFriends = (friends: Array<UserType>):SetUserFriends => {\n    return {\n        type: SET_USER_FRIENDS,\n        friends\n    }\n};\n\ntype ToggleFetchingType = {\n    type: typeof TOGGLE_FETCHING\n    isProfileFetching: boolean\n}\n\nexport const toggleFetching = (isProfileFetching: boolean): ToggleFetchingType => {\n    return {\n        type: TOGGLE_FETCHING,\n        isProfileFetching: isProfileFetching\n    }\n};\n\ntype SetStatusActionType = {\n    type: typeof SET_STATUS\n    status: string\n}\n\nexport const setStatusAC = (status: string): SetStatusActionType => {\n    return {type: SET_STATUS, status}\n};\n\ntype SetUserProfileActionType = {\n    type: typeof SET_USER_PROFILE\n    profile: ProfileType|null\n}\n\nexport const setUserProfile = (profile: ProfileType|null): SetUserProfileActionType => {\n    return {type: SET_USER_PROFILE, profile}\n};\n\ntype AddPostActionType = {\n    type: typeof ADD_POST\n    post: string\n}\n\nexport const addPostActionCreator = (post: string): AddPostActionType => {\n    return {type: ADD_POST, post};\n};\n\ntype ClearProfileActionType = {\n    type: typeof CLEAR_PROFILE\n}\n\nexport const clearProfile = (): ClearProfileActionType => {\n    return {type: CLEAR_PROFILE};\n};\n\nexport type SetPhotoActionType = {\n    type: typeof SET_PHOTO\n    photos: PhotosType\n}\n\nexport const setPhoto = (photos: PhotosType): SetPhotoActionType => {\n    return {type: SET_PHOTO, photos}\n};\n\n\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionsTypes>\n\nexport const getUserProfile = (userId: number): ThunkType => async dispatch => {\n    dispatch(toggleFetching(true));\n    try {\n        const data: ProfileType = await ProfileAPI.getProfile(userId);\n        dispatch(setUserProfile(data));\n        dispatch(getUserStatus(userId));\n    } catch (e) {\n        console.error(e)\n    } finally {\n        dispatch(toggleFetching(false))\n    }\n};\n\nexport const getMyProfile = (): ThunkType => async dispatch => {\n    try {\n        dispatch(toggleFetching(true));\n        const data = await AuthAPI.AuthMe();\n        if (data.resultCode === resultCodes.Success) {\n            dispatch(getUserProfile(data.data.id));\n        } else dispatch(toggleFetching(false));\n    } catch (e) {\n        console.error(e)\n    }\n};\n\nexport const getUserStatus = (userId: number): ThunkType => async dispatch => {\n    try {\n        const data = await ProfileAPI.getStatus(userId);\n        dispatch(setStatusAC(data));\n    } catch (e) {\n        console.error(e)\n    }\n};\n\n\nexport const savePhoto = (file: File): ThunkType => async dispatch => {\n  try {\n     const data = await ProfileAPI.savePhoto(file);\n     dispatch(setPhoto(data.data.photos));\n  }  catch (e){\n      console.error(e)\n  }\n};\n\nexport const saveProfile = (data: DescriptionFormDataType): ThunkType => async dispatch => {\n    try{\n        const res = await ProfileAPI.saveProfile(data);\n        if (res.resultCode === resultCodes.Success)\n            return dispatch(getMyProfile());\n        const message = res.messages.length > 0 ? res.messages[0] : 'some error';\n        dispatch(stopSubmit('description', { _error: message }));\n    } catch (e) {\n        console.error(e)\n    }\n};\n\nexport default profileReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavBar\":\"NavBar_NavBar__3Uex_\",\"bordered\":\"NavBar_bordered__m8mjV\",\"Item\":\"NavBar_Item__2SJE8\",\"active\":\"NavBar_active__3qbGS\"};","import React from 'react';\r\nimport styles from './Inputs.module.css';\r\nimport {WrappedFieldProps} from \"redux-form\";\r\n\r\nexport const CustomTextarea: React.FC<WrappedFieldProps> = ({input, meta, ...props}) => {\r\n\r\n    const hasError = meta.touched && meta.error;\r\n\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError? styles.error : '')}>\r\n            <div>\r\n                <textarea {...input} {...props}/>\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const CustomInput: React.FC<WrappedFieldProps>  = ({input, meta, ...props}) => {\r\n\r\n    const hasError = meta.touched && meta.error;\r\n\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError? styles.error : '')}>\r\n            <div>\r\n                <input {...input} {...props}/>\r\n            </div>\r\n            {hasError &&<span>{meta.error}</span>}\r\n        </div>\r\n    );\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport styles from './friend.module.css'\r\nimport userLogo from '../../../../Images/scalable-vector-graphics-avatar-learning-icon-customer-login-avatar.jpg'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\ntype PropsType = {\r\n    logoSrc: string | null\r\n    name: string\r\n    id: number\r\n    theme: 'Dark' | null\r\n}\r\n\r\nconst Friend: React.FC<PropsType> = (props) => {\r\n    return(\r\n        <div className={styles.friend}>\r\n            <NavLink to={`/profile/${props.id}`}>\r\n            <img src={props.logoSrc || userLogo} alt={''}/>\r\n            </NavLink>\r\n            <div className={`${styles.friendName} ${props.theme ? 'dark' : ''}`}>{props.name}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Friend;","import React, {useEffect, useState} from 'react';\r\nimport styles from './sideBar.module.css';\r\nimport Friend from './friend/friend';\r\nimport {UserType} from \"../../../redux/reducers/users-reducer\";\r\nimport {Card} from \"antd\";\r\n\r\ntype PropsType = {\r\n    userFriends: Array<UserType>\r\n    theme: 'Dark' | null\r\n}\r\n\r\nconst SideBar: React.FC<PropsType> = (props) => {\r\n\r\n    const [shuffled, setShuffled] = useState(props.userFriends);\r\n\r\n    useEffect(()=>{\r\n\r\n        setShuffled(props.userFriends);\r\n\r\n        const interval = setInterval(()=> {\r\n            setShuffled([...props.userFriends].sort(() => 0.5 - Math.random()));\r\n        }, 20000);\r\n\r\n        return () => clearInterval(interval)\r\n\r\n    },[props.userFriends]);\r\n\r\n\r\n\r\n\r\n    return (<>\r\n            {!!shuffled.length &&\r\n            <div className={styles.sideBar}>\r\n                <Card bordered={!!props.theme} className={props.theme ? `dark ${styles.bordered}` : ''}>\r\n                <div className={styles.title}>Friends:</div>\r\n                <div className={styles.friendsList}>\r\n                    {shuffled.slice(0,5).map(friend => <Friend theme={props.theme} key={Math.random()} id={friend.id} name={friend.name}\r\n                                                         logoSrc={friend.photos.small}/>)}\r\n                </div>\r\n                </Card>\r\n            </div>}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SideBar;","import React from 'react';\r\nimport {connect, useSelector} from \"react-redux\";\r\nimport SideBar from \"./sideBar\";\r\nimport {AppStateType} from \"../../../redux/redux-store\";\r\nimport {UserType} from \"../../../redux/reducers/users-reducer\";\r\n\r\n\r\ntype PropsType = MapStatePropsType;\r\ntype MapStatePropsType = {\r\n    userFriends: Array<UserType>\r\n}\r\n\r\nconst SideBarContainer: React.FC<PropsType> = (props) => {\r\n\r\n    const theme = useSelector((state: AppStateType) => state.app.theme);\r\n\r\n    return (\r\n        <SideBar theme={theme} userFriends={props.userFriends}/>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n   return {\r\n       userFriends : state.profilePage.userFriends\r\n   }\r\n};\r\n\r\nexport default connect<MapStatePropsType,{},{},AppStateType>(mapStateToProps)(SideBarContainer);\r\n\r\n","import React from 'react';\r\nimport styles from './NavBar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport SideBarContainer from \"./sideBar/sideBarContainer\";\r\nimport {Card} from \"antd\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\n\r\nconst NavBar = () => {\r\n\r\n    const theme = useSelector((state:AppStateType) => state.app.theme);\r\n\r\n    return (\r\n        <nav className={styles.NavBar}>\r\n            <Card hoverable bordered={Boolean(theme)} className={ `${styles.bordered} ${theme ? 'dark darkA' : ''}`}>\r\n\r\n            <div className={styles.Item}>\r\n                <NavLink activeClassName={styles.active} to='/profile'>Profile</NavLink>\r\n            </div>\r\n            <div className={styles.Item}>\r\n                <NavLink activeClassName={styles.active} to='/dialogs'>Messages</NavLink>\r\n            </div>\r\n            <div className={styles.Item}>\r\n                <NavLink activeClassName={styles.active} to='/news'>News</NavLink>\r\n            </div>\r\n            <div className={styles.Item}>\r\n                <NavLink activeClassName={styles.active} to='/music'>Music</NavLink>\r\n            </div>\r\n            <div className={styles.Item}>\r\n                <NavLink activeClassName={styles.active} to='/avatar'>Avatar</NavLink>\r\n            </div>\r\n            <div className={styles.Item}>\r\n                <NavLink activeClassName={styles.active} to='/users'>Users</NavLink>\r\n            </div>\r\n\r\n            <SideBarContainer/>\r\n\r\n            </Card>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default NavBar;","import React from 'react';\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>\r\n            <div style={{color: '#c9d1d9'}}>\r\n            Music\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Music;","import React from 'react';\r\n\r\nconst News = () => {\r\n    return (\r\n        <div style={{color: '#c9d1d9'}}>\r\n            News\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default News;","import {Scrollbars} from 'react-custom-scrollbars';\r\nimport React, {useRef, useState} from \"react\"\r\nimport {Button, Col, Row, Tabs} from \"antd\"\r\nimport styles from \"./AvatarGenerator.module.css\"\r\nimport Avatar, {allOptions, OptionContext} from \"avataaars\"\r\nimport * as ReactDOM from \"react-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {savePhoto} from \"../../../redux/reducers/profile-reducer\";\r\nimport {AppStateType} from \"../../../redux/redux-store\";\r\n\r\n\r\nconst {TabPane} = Tabs;\r\n\r\ntype PropsType = {\r\n    id: number | null\r\n}\r\n\r\nconst AvatarGenerator: React.FC<PropsType> = ({id}) => {\r\n    const avatarRef = useRef(null);\r\n    const [selectedStyle, setSelectedStyle] = useState({} as avatarType);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selectedIndex, setSelectedIndex] = useState(null);\r\n    const [avatarImageSrc, setAvatarImageSrc] = useState('');\r\n    const theme = useSelector((state: AppStateType) => state.app.theme);\r\n    const dispatch = useDispatch();\r\n    const optionsContext = useRef(new OptionContext(allOptions));\r\n    const tabNames = ['Hair', 'Accessories', 'Hat Color', 'Hair Color',\r\n        'Facial Hair', 'Facial Hair Color', 'Clothes', 'Clothes Color',\r\n        'Clothes Graphic', 'Eyes', 'Eyebrows', 'Mouth', 'Skin Color'];\r\n    const tabs = useRef(Array.from(optionsContext.current.options)\r\n        .map((option: any, index) => {\r\n            return {\r\n                key: option.key,\r\n                label: tabNames[index]\r\n            }\r\n        }));\r\n\r\n    type avatarType = {\r\n        avatarStyle?: string\r\n        topType?: string\r\n        accessoriesType?: string\r\n        hatColor?: string\r\n        hairColor?: string\r\n        facialHairType?: string\r\n        facialHairColor?: string\r\n        clotheType?: string\r\n        clotheColor?: string\r\n        eyeType?: string\r\n        eyebrowType?: string\r\n        mouthType?: string\r\n        skinColor?: string\r\n        graphicType?: string\r\n    }\r\n    const defaultAvatar = {\r\n        avatarStyle: 'Transparent',\r\n        accessoriesType: 'Blank',\r\n        topType: 'NoHair',\r\n        hairColor: 'Auburn',\r\n        facialHairType: 'Blank',\r\n        clotheType: 'ShirtScoopNeck',\r\n        clotheColor: 'Gray01',\r\n        eyeType: 'Default',\r\n        eyebrowType: 'Default',\r\n        mouthType: 'Default',\r\n        skinColor: 'Brown'\r\n    };\r\n\r\n    const currentAvatar = {...defaultAvatar, ...selectedStyle};\r\n\r\n    type avatarStylesType = typeof avatarStyles;\r\n    const avatarStyles = {\r\n        topType: [\r\n            \"NoHair\",\r\n            \"Eyepatch\",\r\n            \"Hat\",\r\n            \"Hijab\",\r\n            \"Turban\",\r\n            \"WinterHat1\",\r\n            \"WinterHat2\",\r\n            \"WinterHat3\",\r\n            \"WinterHat4\",\r\n            \"LongHairBigHair\",\r\n            \"LongHairBob\",\r\n            \"LongHairBun\",\r\n            \"LongHairCurly\",\r\n            \"LongHairCurvy\",\r\n            \"LongHairDreads\",\r\n            \"LongHairFrida\",\r\n            \"LongHairFro\",\r\n            \"LongHairFroBand\",\r\n            \"LongHairNotTooLong\",\r\n            \"LongHairShavedSides\",\r\n            \"LongHairMiaWallace\",\r\n            \"LongHairStraight\",\r\n            \"LongHairStraight2\",\r\n            \"LongHairStraightStrand\",\r\n            \"ShortHairDreads01\",\r\n            \"ShortHairDreads02\",\r\n            \"ShortHairFrizzle\",\r\n            \"ShortHairShaggyMullet\",\r\n            \"ShortHairShortCurly\",\r\n            \"ShortHairShortFlat\",\r\n            \"ShortHairShortRound\",\r\n            \"ShortHairShortWaved\",\r\n            \"ShortHairSides\",\r\n            \"ShortHairTheCaesar\",\r\n            \"ShortHairTheCaesarSidePart\"\r\n        ],\r\n        accessoriesType: [\r\n            \"Blank\",\r\n            \"Kurt\",\r\n            \"Prescription01\",\r\n            \"Prescription02\",\r\n            \"Round\",\r\n            \"Sunglasses\",\r\n            \"Wayfarers\"\r\n        ],\r\n        hatColor: [\r\n            \"Black\",\r\n            \"Blue01\",\r\n            \"Blue02\",\r\n            \"Blue03\",\r\n            \"Gray01\",\r\n            \"Gray02\",\r\n            \"Heather\",\r\n            \"PastelBlue\",\r\n            \"PastelGreen\",\r\n            \"PastelOrange\",\r\n            \"PastelRed\",\r\n            \"PastelYellow\",\r\n            \"Pink\",\r\n            \"Red\",\r\n            \"White\"\r\n        ],\r\n        hairColor: [\r\n            \"Auburn\",\r\n            \"Black\",\r\n            \"Blonde\",\r\n            \"BlondeGolden\",\r\n            \"Brown\",\r\n            \"BrownDark\",\r\n            \"PastelPink\",\r\n            \"Platinum\",\r\n            \"Red\",\r\n            \"SilverGray\"\r\n        ],\r\n        facialHairType: [\r\n            \"Blank\",\r\n            \"BeardMedium\",\r\n            \"BeardLight\",\r\n            \"BeardMajestic\",\r\n            \"MoustacheFancy\",\r\n            \"MoustacheMagnum\"\r\n        ],\r\n        facialHairColor: [\r\n            \"Auburn\",\r\n            \"Black\",\r\n            \"Blonde\",\r\n            \"BlondeGolden\",\r\n            \"Brown\",\r\n            \"BrownDark\",\r\n            \"Platinum\",\r\n            \"Red\"\r\n        ],\r\n        clotheType: [\r\n            \"BlazerShirt\",\r\n            \"BlazerSweater\",\r\n            \"CollarSweater\",\r\n            \"GraphicShirt\",\r\n            \"Hoodie\",\r\n            \"Overall\",\r\n            \"ShirtCrewNeck\",\r\n            \"ShirtScoopNeck\",\r\n            \"ShirtVNeck\"\r\n        ],\r\n        clotheColor: [\r\n            \"Black\",\r\n            \"Blue01\",\r\n            \"Blue02\",\r\n            \"Blue03\",\r\n            \"Gray01\",\r\n            \"Gray02\",\r\n            \"Heather\",\r\n            \"PastelBlue\",\r\n            \"PastelGreen\",\r\n            \"PastelOrange\",\r\n            \"PastelRed\",\r\n            \"PastelYellow\",\r\n            \"Pink\",\r\n            \"Red\",\r\n            \"White\"\r\n        ],\r\n        eyeType: [\r\n            \"Close\",\r\n            \"Cry\",\r\n            \"Default\",\r\n            \"Dizzy\",\r\n            \"EyeRoll\",\r\n            \"Happy\",\r\n            \"Hearts\",\r\n            \"Side\",\r\n            \"Squint\",\r\n            \"Surprised\",\r\n            \"Wink\",\r\n            \"WinkWacky\"\r\n        ],\r\n        eyebrowType: [\r\n            \"Angry\",\r\n            \"AngryNatural\",\r\n            \"Default\",\r\n            \"DefaultNatural\",\r\n            \"FlatNatural\",\r\n            \"RaisedExcited\",\r\n            \"RaisedExcitedNatural\",\r\n            \"SadConcerned\",\r\n            \"SadConcernedNatural\",\r\n            \"UnibrowNatural\",\r\n            \"UpDown\",\r\n            \"UpDownNatural\"\r\n        ],\r\n        mouthType: [\r\n            \"Concerned\",\r\n            \"Default\",\r\n            \"Disbelief\",\r\n            \"Eating\",\r\n            \"Grimace\",\r\n            \"Sad\",\r\n            \"ScreamOpen\",\r\n            \"Serious\",\r\n            \"Smile\",\r\n            \"Tongue\",\r\n            \"Twinkle\",\r\n            \"Vomit\"\r\n        ],\r\n        skinColor: [\r\n            \"Tanned\",\r\n            \"Yellow\",\r\n            \"Pale\",\r\n            \"Light\",\r\n            \"Brown\",\r\n            \"DarkBrown\",\r\n            \"Black\"\r\n        ],\r\n        graphicType: [\r\n            \"Bat\",\r\n            \"Cumbia\",\r\n            \"Deer\",\r\n            \"Diamond\",\r\n            \"Hola\",\r\n            \"Pizza\",\r\n            \"Resist\",\r\n            \"Selena\",\r\n            \"Bear\",\r\n            \"SkullOutline\",\r\n            \"Skull\"\r\n        ],\r\n    };\r\n\r\n\r\n    const selectFromKeys = (OptionKey: any) => {\r\n        for (let key in avatarStyles) {\r\n            if (OptionKey === key) {\r\n                // @ts-ignore\r\n                return avatarStyles[key];\r\n            }\r\n        }\r\n    };\r\n\r\n    // const dataURLtoFile = (dataurl: string, filename: string) => {\r\n    //\r\n    //     let arr = dataurl.split(',');\r\n    //     // @ts-ignore\r\n    //     let mime = arr[0].match(/:(.*?);/)[1],\r\n    //         bstr = atob(arr[1]),\r\n    //         n = bstr.length,\r\n    //         u8arr = new Uint8Array(n);\r\n    //\r\n    //     while(n--){\r\n    //         u8arr[n] = bstr.charCodeAt(n);\r\n    //     }\r\n    //\r\n    //     return new File([u8arr], filename, {type:mime});\r\n    // }\r\n\r\n    const avatarSaveHandler = () => {\r\n\r\n        if (!Object.keys(selectedStyle).length) return;\r\n\r\n        setLoading(true);\r\n\r\n        // @ts-ignore\r\n        const svgString = new XMLSerializer().serializeToString(ReactDOM.findDOMNode(avatarRef.current));\r\n        // const canvas = document.createElement(\"canvas\");\r\n        // // @ts-ignore\r\n        // canvas.height = Number(ReactDOM.findDOMNode(avatarRef.current).getAttribute('height').slice(0, -2));\r\n        // // @ts-ignore\r\n        // canvas.width = Number(ReactDOM.findDOMNode(avatarRef.current).getAttribute('width').slice(0, -2));\r\n        // const ctx = canvas.getContext(\"2d\");\r\n        // const DOMURL = window.URL || window.webkitURL || window;\r\n        // const img = new Image();\r\n        const svg = new Blob([svgString], {type: \"image/svg+xml;charset=utf-8\"});\r\n\r\n        const file = new File([svg], \"avatar.png\", {type: 'image/png'});\r\n        dispatch(savePhoto(file));\r\n\r\n        // const url = DOMURL.createObjectURL(svg);\r\n        // img.onload = function () {\r\n        //     ctx?.drawImage(img, 0, 0);\r\n        //     let png = canvas.toDataURL(\"image/jpeg\");\r\n        //     // const file = new File([png], 'avatar.png');\r\n        //     // debugger\r\n        //     // dispatch(savePhoto(file));\r\n        //     // const file = dataURLtoFile(png, 'avatar.png');\r\n        //     fetch(png)\r\n        //         .then(res => res.blob())\r\n        //         .then(blob => {\r\n        //             const file = new File([blob], \"avatar.jpeg\");\r\n        //             debugger\r\n        //             dispatch(savePhoto(file));\r\n        //         })\r\n        //\r\n        //     DOMURL.revokeObjectURL(png);\r\n        // };\r\n        // img.src = url;\r\n\r\n        setLoading(false);\r\n    };\r\n\r\n    const selectItem = (index: any, property: any) => {\r\n        setSelectedIndex(index);\r\n        setSelectedStyle({...selectedStyle, ...property});\r\n    }\r\n\r\n    const removeAvatar = () => {\r\n        setSelectedIndex(null);\r\n        setSelectedStyle({});\r\n    }\r\n\r\n    // @ts-ignore\r\n    const hairColorDisabled = selectedStyle.topType && ['Hat', \"LongHairFrida\", \"LongHairShavedSides\", 'WinterHat1', 'WinterHat2', 'WinterHat3',\r\n        'WinterHat4', 'NoHair', 'Eyepatch', 'Turban', 'Hijab'].includes(selectedStyle.topType);\r\n    const hatColorDisabled = !selectedStyle.topType || !(['WinterHat1', 'WinterHat2', 'WinterHat3', 'WinterHat4', 'Turban', 'Hijab'].includes(selectedStyle.topType));\r\n    const facialHairDisabled = 'Hijab' === selectedStyle.topType;\r\n    const facialHairColorDisabled = facialHairDisabled || !selectedStyle.facialHairType || !([\"BeardMedium\", \"BeardLight\", \"BeardMajestic\",\r\n        \"MoustacheFancy\", \"MoustacheMagnum\"].includes(selectedStyle.facialHairType));\r\n    const accessoriesDisabled = 'Eyepatch' === selectedStyle.topType;\r\n    const clothesColorDisabled = selectedStyle.clotheType && [\"BlazerShirt\", \"BlazerSweater\"].includes(selectedStyle.clotheType);\r\n    const graphicDisabled = !(\"GraphicShirt\" === selectedStyle.clotheType);\r\n\r\n    return (\r\n        <Row gutter={10} justify=\"center\" style={{height: 765}} className={styles.avatarGenerator}>\r\n            <Col className={styles.presentationCol} xs={22} sm={18} md={8}>\r\n                <div className={`${styles.avatarPresentation} ${theme ? 'dark' : ''}`}>\r\n                    <h2>Create your own Avatar</h2>\r\n                    <div className={styles.avatarFull}>\r\n                        <Avatar ref={avatarRef} {...currentAvatar} avatarStyle={'Circle'}\r\n                                style={{width: '305px', height: '324px'}}/>\r\n                    </div>\r\n\r\n                    <div className={styles.avatarControl}>\r\n                        <Button\r\n                            disabled={!Boolean(id && Object.keys(selectedStyle).length)}\r\n                            loading={loading}\r\n                            onClick={avatarSaveHandler}\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\">\r\n                            Set as profile picture!\r\n                        </Button>\r\n                        <Button type=\"primary\" onClick={removeAvatar}>\r\n                            Remove Avatar\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </Col>\r\n            <Col className=\"gutter-row\" xs={22} sm={16} md={16}>\r\n                <div className={`${styles.avatarGeneration} ${theme ? 'dark' : ''}`}>\r\n                    <Tabs tabBarGutter={0} className={styles.tabs} defaultActiveKey=\"topType\" style={{height: '100%'}}\r\n                          animated={true} >\r\n                        {tabs.current.map(tab => {\r\n\r\n                            const disabledTabs = (graphicDisabled && tab.key === 'graphicType') ||\r\n                                (clothesColorDisabled && tab.key === 'clotheColor') || (accessoriesDisabled && tab.key === 'accessoriesType') ||\r\n                                (facialHairColorDisabled && tab.key === 'facialHairColor') || (hairColorDisabled && tab.key === 'hairColor') ||\r\n                                (hatColorDisabled && tab.key === 'hatColor') || (facialHairDisabled && tab.key === 'facialHairType');\r\n\r\n                            return (\r\n\r\n                                <TabPane disabled={disabledTabs} tab={tab.label} key={tab.key}>\r\n                                    <Scrollbars\r\n                                        autoHeight\r\n                                        autoHeightMax={640}\r\n                                        className=\"scrollbar\"\r\n                                        renderTrackHorizontal={(props :any) => <div {...props} className=\"track-horizontal\"\r\n                                                                             style={{display: \"none\"}}/>}\r\n                                        renderThumbHorizontal={(props :any) => <div {...props} className=\"thumb-horizontal\"\r\n                                                                             style={{display: \"none\"}}/>}\r\n                                        hideTracksWhenNotNeeded={true}>\r\n                                        <Row style={{height: \"100%\"}}>\r\n                                            {\r\n                                                selectFromKeys(tab.key).map((item:any, index:any) => (\r\n                                                    <Col xs={24}\r\n                                                         sm={12}\r\n                                                         md={8}\r\n                                                         lg={6} style={{height: '30%'}} key={index}>\r\n                                                        <div onClick={() => selectItem(index, {[tab.key]: item})}\r\n                                                             className={[styles.avatarSelect, index === selectedIndex ? styles.selected : ''].join(' ')}>\r\n                                                            <Avatar {...{...currentAvatar, [tab.key]: item}}\r\n                                                                    style={{height: '100%'}}/>\r\n                                                        </div>\r\n                                                    </Col>\r\n                                                ))}\r\n                                        </Row>\r\n                                    </Scrollbars>\r\n                                </TabPane>\r\n                            )\r\n                        })}\r\n\r\n                    </Tabs>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default AvatarGenerator","import * as React from 'react';\r\nimport AvatarGenerator from \"../common/AvatarGenerator/AvatarGenerator\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\n\r\n\r\nconst CreateAvatar = () => {\r\n\r\n    const id = useSelector((state: AppStateType) => state.auth.id);\r\n\r\n    return (\r\n        <>\r\n           <AvatarGenerator id={id}/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CreateAvatar;","import React from 'react';\r\nimport styles from './User.module.css';\r\nimport userLogo from '../../../Images/scalable-vector-graphics-avatar-learning-icon-customer-login-avatar.jpg'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Button, Card, Row} from \"antd\";\r\nimport {UserType} from \"../../../redux/reducers/users-reducer\";\r\n\r\n\r\ntype PropsType = {\r\n    followingInProgress: Array<number>\r\n    follow: (user: UserType) => void\r\n    unfollow: (user: UserType) => void\r\n    currentAuthUserId: null|number\r\n    user: UserType\r\n    theme: 'Dark' | null\r\n}\r\n\r\nconst User: React.FC<PropsType> = (props) => {\r\n    return (\r\n\r\n        <Card bodyStyle={{height: '280px'}} className={props.theme ? 'dark bordered' : ''} bordered={!!props.theme} hoverable>\r\n            <Row style={{height: '170px'}}>\r\n            <div className={styles.photo}>\r\n                <NavLink to={`/profile/${props.user.id}`}>\r\n                  <img src={props.user.photos.large || userLogo} alt={''}/>\r\n                 </NavLink>\r\n                 </div>\r\n            </Row>\r\n            <Row justify='center' align='middle'>\r\n                <div className={styles.userName}>\r\n                    <b>{props.user.name}</b>\r\n             </div>\r\n            </Row>\r\n             {props.currentAuthUserId &&\r\n            <div className={styles.followButtonContainer}>\r\n              <Button disabled={props.followingInProgress.some(id => id === props.user.id)}\r\n                       onClick={() => {\r\n                          props[props.user.followed ? 'unfollow' : 'follow'](props.user)\r\n                       }}>{props.user.followed ? 'Unfollow' : 'Follow'}</Button>\r\n              </div>}\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default User;","import React from 'react';\r\nimport {UserType} from '../../redux/reducers/users-reducer';\r\nimport User from \"./User/User\";\r\nimport styles from './users.module.css';\r\n\r\n\r\ntype PropsType = {\r\n    users: Array<UserType>\r\n    follow: (user: UserType) => void\r\n    unfollow: (user: UserType) => void\r\n    followingInProgress: Array<number>\r\n    currentAuthUserId: null | number\r\n    theme: 'Dark' | null\r\n}\r\n\r\nconst Users: React.FC<PropsType> = (props) => {\r\n\r\n    return (\r\n        <>\r\n            {!!props.users.length &&\r\n            <div className={`${styles.usersContainer} ${props.theme ? 'dark' : ''}`}>\r\n                {props.users.map(user => (\r\n                    <User key={user.id}\r\n                          follow={props.follow}\r\n                          unfollow={props.unfollow}\r\n                          user={user}\r\n                          theme={props.theme}\r\n                          followingInProgress={props.followingInProgress}\r\n                          currentAuthUserId={props.currentAuthUserId}/>))}\r\n            </div>}\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default Users;","import {Button, Input} from \"antd\";\r\nimport React, {ChangeEvent, useEffect, useState} from \"react\";\r\nimport styles from './SearchUsers.module.css'\r\nimport useDebouncedCallback from \"use-debounce/lib/useDebouncedCallback\";\r\nimport {Spin} from 'antd';\r\nimport {LoadingOutlined} from '@ant-design/icons';\r\nimport {SearchOptionsType} from \"../UsersContainer\";\r\n\r\ntype PropsType = {\r\n    setSearchOptions: (value: SearchOptionsType) => void\r\n    searchOptions: SearchOptionsType\r\n    isFetching: boolean\r\n}\r\n\r\nexport const SearchUsers: React.FC<PropsType> = (props) => {\r\n\r\n    const [inputValue, setInputValue] = useState(props.searchOptions.term);\r\n\r\n    useEffect(() => {\r\n        setInputValue(props.searchOptions.term);\r\n    }, [props.searchOptions.term]);\r\n\r\n    const onSearch = () => {\r\n        props.setSearchOptions({...props.searchOptions, term: inputValue, page: 1});\r\n    };\r\n\r\n    const debounced = useDebouncedCallback(onSearch, 1000);\r\n\r\n    const onInputChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setInputValue(e.target.value);\r\n        debounced.callback();\r\n    };\r\n\r\n    const onSearchAll = () => {\r\n        props.setSearchOptions({...props.searchOptions, term: '', page: 1});\r\n    };\r\n\r\n    const disabled = props.searchOptions.page === 1 && !inputValue;\r\n\r\n    return (\r\n        <>\r\n            <div className={styles.searchInputContainer} >\r\n\r\n                {props.isFetching && <div className={styles.spiner}>\r\n                    <Spin indicator={<LoadingOutlined style={{fontSize: 24}} spin/>}/>\r\n                </div>}\r\n\r\n                <Input placeholder='search users here...' value={inputValue}\r\n                       onChange={onInputChange}/>\r\n                <Button type='primary' disabled={disabled} onClick={onSearchAll}>Clear filters</Button>\r\n            </div>\r\n        </>\r\n    );\r\n};","import React, {useCallback, useEffect, useState} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Users from \"./Users\";\r\nimport {\r\n    follow, getUsers,\r\n    unfollow, UserType\r\n} from \"../../redux/reducers/users-reducer\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {SearchUsers} from \"./SearchUsers/SearchUsers\";\r\nimport styles from './users.module.css'\r\nimport {Pagination} from \"antd\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport * as queryString from \"querystring\";\r\n\r\ntype MapStatePropsType = {\r\n    totalUsersCount: number\r\n    users: Array<UserType>\r\n    followingInProgress: Array<number>\r\n    isFetching: boolean\r\n    currentAuthUserId: null | number\r\n    theme: 'Dark' | null\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    follow: (user: UserType) => void\r\n    unfollow: (user: UserType) => void\r\n    getUsers: (currentPage: number, pageSize: number, friend?: boolean, term?: string) => void\r\n}\r\n\r\ntype QueryType = {\r\n    term?: string\r\n    page?: string | number\r\n    pageSize?: string | number\r\n    friend?: string\r\n}\r\n\r\nexport type SearchOptionsType = {\r\n    term: string\r\n    pageSize: number\r\n    page: number\r\n}\r\n\r\ntype PropsType = MapDispatchPropsType & MapStatePropsType;\r\n\r\nconst UsersContainer: React.FC<PropsType> = (props) => {\r\n\r\n    const [searchOptions, setSearchOptions] = useState({term:'', pageSize: 16, page: 1});\r\n    const history = useHistory();\r\n\r\n    useEffect(()=> {\r\n        const parsedQuery: QueryType = queryString.parse(history.location.search.substr(1));\r\n\r\n        if (parsedQuery.page) parsedQuery.page = +parsedQuery.page;\r\n        if (parsedQuery.pageSize) parsedQuery.pageSize = +parsedQuery.pageSize;\r\n\r\n        setSearchOptions({...searchOptions, ...parsedQuery as SearchOptionsType});\r\n\r\n    },[history.location.search]);\r\n\r\n    useEffect(() => {\r\n        const querySearch: QueryType = {};\r\n        if (!!searchOptions.term) {querySearch.term = searchOptions.term}\r\n        if (searchOptions.page !== 1) querySearch.page = String(searchOptions.page);\r\n        if (searchOptions.pageSize !== 16) querySearch.pageSize = String(searchOptions.pageSize);\r\n\r\n        history.push({\r\n            pathname: '/users',\r\n            search: queryString.stringify(querySearch)\r\n        });\r\n\r\n        props.getUsers(searchOptions.page,searchOptions.pageSize, false, searchOptions.term);\r\n    }, [searchOptions]);\r\n\r\n    const onPageChange = (page: number, pageSize?: number) => {\r\n        page !== 0 && pageSize &&\r\n        setSearchOptions({...searchOptions, page: page, pageSize: pageSize});\r\n        window.scrollTo({top: 0, behavior: 'smooth'});\r\n    };\r\n\r\n    const onSizeChange = (currentPage: number, size: number) => {\r\n        setSearchOptions({...searchOptions, pageSize: size});\r\n    };\r\n\r\n    const setSearchOptionsCallback = useCallback((value) => setSearchOptions(value), [setSearchOptions]);\r\n\r\n    return (\r\n        <>\r\n            <SearchUsers isFetching={props.isFetching} searchOptions={searchOptions} setSearchOptions={setSearchOptionsCallback}/>\r\n\r\n            <Users users={props.users}\r\n                   theme={props.theme}\r\n                   follow={props.follow}\r\n                   unfollow={props.unfollow}\r\n                   followingInProgress={props.followingInProgress}\r\n                   currentAuthUserId={props.currentAuthUserId}/>\r\n\r\n            <div className={styles.paginator}>\r\n                <Pagination size=\"small\" total={props.totalUsersCount}\r\n                            current={searchOptions.page}\r\n                            onChange={onPageChange} pageSizeOptions={['16', '32', '64']}\r\n                            pageSize={searchOptions.pageSize}\r\n                            defaultCurrent={searchOptions.page}\r\n                            onShowSizeChange={onSizeChange}\r\n                            hideOnSinglePage showSizeChanger showQuickJumper/>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress,\r\n        currentAuthUserId: state.auth.id,\r\n        theme: state.app.theme,\r\n    }\r\n\r\n};\r\n\r\nconst mapDispatchToProps: MapDispatchPropsType = {\r\n    follow,\r\n    unfollow,\r\n    getUsers\r\n};\r\n\r\nexport default connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>(mapStateToProps,\r\n    mapDispatchToProps)(UsersContainer);","import React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport {ProfileAPI} from \"../../../API/ProfileAPI\";\r\nimport {Card} from \"antd\";\r\nimport styles from './Profile-Info.module.css'\r\n\r\ntype PropsType = {\r\n    status: string\r\n    theme: 'Dark' | null\r\n}\r\n\r\nconst Status: React.FC<PropsType> = (props) => {\r\n\r\n    const [status, setStatus] = useState(props.status);\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const enterToEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    const closeEditMode = () => {\r\n        setEditMode(false);\r\n        ProfileAPI.setStatus(status);\r\n    };\r\n\r\n    const statusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.target.value);\r\n    };\r\n\r\n\r\n    return (\r\n        <Card bodyStyle={{padding: '3px'}} className={props.theme ? `dark ${styles.bordered}` : ''} hoverable>\r\n            {editMode ?\r\n                <input className={props.theme ? 'dark' : ''} autoFocus={ true } onBlur={ closeEditMode } onChange={ statusChange } value={ status }/> :\r\n                <span onDoubleClick={ enterToEditMode }> {status ? status : 'Here can be your status (double click)'} </span>}\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default Status;","import React from 'react';\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport styles from './DescriptionForm.module.css';\r\nimport {CustomInput, CustomTextarea} from \"../../common/customElements/Inputs\";\r\nimport {required} from \"../../../utils/validators\";\r\nimport {ProfileContactsType} from \"../../../redux/reducers/auth-reducer\";\r\n\r\nexport type DescriptionFormDataType = {\r\n    fullName: string\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    aboutMe: string\r\n    contacts: ProfileContactsType\r\n}\r\n\r\nconst DescriptionForm: React.FC<InjectedFormProps<DescriptionFormDataType,{}>> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={styles.form}>\r\n            <div>\r\n                <Field name={'fullName'} component={CustomInput} validate={[required]} placeholder={'Full name'}/>\r\n            </div>\r\n            <div>\r\n                Looking for a job <Field name={'lookingForAJob'} component={'input'} type={'checkbox'}/>\r\n            </div>\r\n            <div>\r\n                <Field name={'lookingForAJobDescription'} component={CustomTextarea} validate={[required]} placeholder={'My skills'}/>\r\n            </div>\r\n            <div>\r\n                <Field name={'aboutMe'} component={CustomTextarea} validate={[required]} placeholder={'about me'}/>\r\n            </div>\r\n            <div>\r\n                <Field name={'contacts.facebook'} component={CustomInput} placeholder={'facebook'}/>\r\n            </div>\r\n            <div>\r\n                <Field name={'contacts.vk'} component={CustomInput} placeholder={'vk'}/>\r\n            </div>\r\n            <div>\r\n                <Field name={'contacts.instagram'} component={CustomInput} placeholder={'instagram'}/>\r\n            </div>\r\n            <div>\r\n                <Field name={'contacts.github'} component={CustomInput} placeholder={'github'}/>\r\n            </div>\r\n            <div>\r\n                <Field name={'contacts.website'} component={CustomInput} placeholder={'website'}/>\r\n            </div>\r\n            <div>\r\n                <Field name={'contacts.twitter'} component={CustomInput} placeholder={'twitter'}/>\r\n            </div>\r\n            <div>\r\n                <Field name={'contacts.youtube'} component={CustomInput} placeholder={'youtube'}/>\r\n            </div>\r\n            <div>\r\n                <Field name={'contacts.mainLink'} component={CustomInput} placeholder={'link'}/>\r\n            </div>\r\n            <div>\r\n                <button>save</button>\r\n            </div>\r\n            <div className={styles.error}>\r\n            {props.error}\r\n            </div>\r\n        </form>\r\n\r\n    );\r\n};\r\n\r\nexport default reduxForm<DescriptionFormDataType, {}>({form: 'description'})(DescriptionForm);","import styles from \"./Profile-Info.module.css\";\r\nimport React from \"react\";\r\nimport {ProfileType} from \"../../../redux/reducers/auth-reducer\";\r\n\r\ntype PropsType = {\r\n    profile: ProfileType\r\n}\r\n\r\nconst Description: React.FC<PropsType> = (props) => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <h2>{props.profile.fullName}</h2>\r\n            </div>\r\n            <div className={styles.about}>\r\n                <div>\r\n                    <b>Looking for a job:</b> {props.profile.lookingForAJob ? 'yes' : 'no'}\r\n                </div>\r\n                <div>\r\n                    <b>My skills:</b> {props.profile.lookingForAJobDescription}\r\n                </div>\r\n                <div>\r\n                    <b>About me:</b> {props.profile.aboutMe}\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <hr/>\r\n                <b>CONTACTS:</b>\r\n            </div>\r\n            <div className={styles.contacts}>\r\n                {!!props.profile.contacts && Object.keys(props.profile.contacts).map(key => <Contacts title={key}\r\n                                                                          value={props.profile.contacts[key]}\r\n                                                                          key={key}/>)}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\ntype ContactsPropsType = {\r\n    title: string\r\n    value: string\r\n}\r\n\r\nconst Contacts: React.FC<ContactsPropsType> = (props) => {\r\n    return (\r\n        <div><b>{props.title}</b> : {props.value}</div>\r\n    );\r\n};\r\n\r\nexport default Description;","import React, {useState} from 'react';\r\nimport styles from './Profile-Info.module.css';\r\nimport Status from \"./Status\";\r\nimport userLogo from '../../../Images/scalable-vector-graphics-avatar-learning-icon-customer-login-avatar.jpg'\r\nimport DescriptionForm, {DescriptionFormDataType} from \"./DescriptionForm\";\r\nimport Description from \"./Description\";\r\nimport {ProfileType} from \"../../../redux/reducers/auth-reducer\";\r\nimport {Button, Card, Col, Row, Upload} from \"antd\";\r\nimport {UploadOutlined} from '@ant-design/icons';\r\n\r\ntype PropsType = {\r\n    savePhoto: (file: any) => void\r\n    saveProfile: (profile: DescriptionFormDataType) => void\r\n    profile: ProfileType\r\n    isMyProfile: boolean\r\n    status: string\r\n    theme: 'Dark' | null\r\n}\r\n\r\nconst ProfileInfo: React.FC<PropsType> = (props) => {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    const enterEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    const uploadPhoto = (file: File) => {\r\n        props.savePhoto(file);\r\n        return false;\r\n    };\r\n\r\n    const onSubmit = (data: DescriptionFormDataType) => {\r\n        props.saveProfile(data);\r\n    };\r\n\r\n\r\n    return (\r\n        <Row justify='center'>\r\n            <Col span={6}>\r\n                <div className={styles.Avatar}>\r\n                    <img src={props.profile.photos.large || userLogo} alt={''}/>\r\n\r\n                    {props.isMyProfile &&\r\n                    <div style={{width:'200px', textAlign: 'center'}} >\r\n                        <Upload showUploadList={false} beforeUpload={ uploadPhoto }>\r\n                            <Button icon={<UploadOutlined/>}>Click to Upload</Button>\r\n                        </Upload>\r\n                    </div>}\r\n\r\n                    <div className={styles.status}>\r\n                        <Status status={props.status} theme={props.theme}/>\r\n                    </div>\r\n                </div>\r\n            </Col>\r\n\r\n            <Col span={16}>\r\n                <Card hoverable className={props.theme ? `${styles.bordered} dark` : ''}>\r\n                    {props.isMyProfile && !editMode &&\r\n                    <Button className={styles.editButton} onClick={enterEditMode}>Edit</Button>}\r\n                    {editMode ? <DescriptionForm onSubmit={onSubmit} initialValues={props.profile}/> :\r\n                        <Description profile={props.profile}/>}\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport styles from './Post.module.css';\r\nimport userLogo from '../../../../Images/scalable-vector-graphics-avatar-learning-icon-customer-login-avatar.jpg'\r\nimport like from '../../../../Images/like.png'\r\n\r\n\r\ntype PropsType = {\r\n    message: string\r\n    likesCount: number\r\n    avatar: string|null\r\n    theme: 'Dark' | null\r\n}\r\n\r\nconst Post: React.FC<PropsType> = (props) => {\r\n    return (\r\n        <div className={`${styles.Post} ${props.theme ? 'dark' : ''}`}>\r\n            <div className={styles.avatar}>\r\n                <img src={props.avatar || userLogo} alt={''}/>\r\n            </div>\r\n            <div className={styles.Message}>\r\n                {props.message}\r\n            </div>\r\n            <div className={styles.Like}>\r\n                <img src={like} alt={''} className={styles.heart}/> {props.likesCount}\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default Post;","import React, {ChangeEvent, useState} from 'react';\r\nimport {Button, Input} from 'antd';\r\nimport styles from './AddPost.module.css'\r\nimport addPostBack from '../../../../Images/addPostBack.png'\r\n\r\nconst { TextArea } = Input;\r\n\r\ntype PropsType = {\r\n    addPost: (post: string) => void\r\n    theme: 'Dark' | null\r\n}\r\n\r\nconst AddPost: React.FC<PropsType> = (props) => {\r\n\r\n    const [newPost, setNewPost] = useState('');\r\n\r\n    const onPostChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        setNewPost(e.target.value);\r\n    };\r\n\r\n    const onAddPost = () => {\r\n        if (newPost === '') return;\r\n        props.addPost(newPost);\r\n        setNewPost('');\r\n    };\r\n\r\n    return (\r\n        <div className={styles.addPostContainer}>\r\n            <img src={addPostBack} alt={''} className={styles.addPostBack}/>\r\n        <TextArea\r\n            className={props.theme ? 'dark' : ''}\r\n            value={newPost}\r\n            onChange={ onPostChange }\r\n            placeholder=\"Share something with your friends...\"\r\n            autoSize={{ minRows: 3, maxRows: 5 }}\r\n        />\r\n            <Button onClick={ onAddPost }>Add post</Button>\r\n            </div>\r\n\r\n    );\r\n};\r\n\r\nexport default AddPost;","import React from 'react';\r\nimport styles from './Posts.module.css';\r\nimport Post from './Post/Post'\r\nimport AddPost from \"./AddPost/AddPost\";\r\nimport {PostType} from \"../../../redux/reducers/profile-reducer\";\r\n\r\ntype PropsType = {\r\n    addPost: (post: string) => void\r\n    postData: Array<PostType>\r\n    isMyProfile: boolean\r\n    profileFullName: string\r\n    avatar: string|null\r\n    theme: 'Dark' | null\r\n}\r\n\r\nconst Posts: React.FC<PropsType> = (props) => {\r\n\r\n    const postElements = props.postData.map(post => <Post theme={props.theme} avatar={props.avatar} message={post.post} likesCount={post.likesCount}\r\n                                                          key={post.id}/>);\r\n\r\n    return (\r\n        <div className={styles.Posts}>\r\n            {props.isMyProfile && <AddPost theme={props.theme} addPost={props.addPost}/>}\r\n            <div>\r\n                <div className={`${styles.title} ${props.theme ? 'dark' : ''}`}>\r\n                    {props.isMyProfile? <b>My posts</b> : <b>{props.profileFullName}'s posts</b>}\r\n                    </div>\r\n                {postElements}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Posts;","import React, {useCallback} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Posts from \"./Posts\";\r\nimport {addPostActionCreator, PostType} from \"../../../redux/reducers/profile-reducer\";\r\nimport {AppStateType} from \"../../../redux/redux-store\";\r\n\r\ntype PropsType = {\r\n    isMyProfile: boolean\r\n    profileFullName: string\r\n    theme: 'Dark' | null\r\n}\r\n\r\nconst PostsContainer: React.FC<PropsType> = (props) => {\r\n\r\n    const postData: Array<PostType> = useSelector((state: AppStateType) => state.profilePage.postData);\r\n    const avatar = useSelector((state: AppStateType) => state.profilePage.profile && state.profilePage.profile.photos.small);\r\n    const dispatch = useDispatch();\r\n    const addPost = useCallback((post) => dispatch(addPostActionCreator(post)), [dispatch]);\r\n\r\n    return (\r\n        <Posts avatar={avatar} theme={props.theme} isMyProfile={props.isMyProfile} addPost={addPost}\r\n               postData={postData} profileFullName={props.profileFullName}/>\r\n    )\r\n};\r\n\r\nexport default PostsContainer;\r\n","import preloader from \"../../../Images/91.svg\";\r\nimport styles from './Preloader.module.css';\r\nimport React from \"react\";\r\n\r\ntype PropsType = {\r\n    className?: string\r\n}\r\n\r\nconst Preloader: React.FC<PropsType> = (props) => {\r\n    return (\r\n        <div><img src={preloader} alt={'Loading...'} className={props.className && styles[props.className]}/></div>\r\n    );\r\n};\r\n\r\nexport default Preloader;","import React from 'react';\r\nimport styles from './Profile.module.css';\r\nimport ProfileInfo from \"./Profile-info/Profile-info\";\r\nimport PostsContainer from \"./Posts/PostsContainer\";\r\nimport {ProfileType} from \"../../redux/reducers/auth-reducer\";\r\nimport {DescriptionFormDataType} from \"./Profile-info/DescriptionForm\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\ntype PropsType = {\r\n    profile: ProfileType\r\n    status: string\r\n    isMyProfile: boolean\r\n    savePhoto: (file: any) => void\r\n    saveProfile: (profile: DescriptionFormDataType) => void\r\n    isFetching: boolean\r\n    theme: 'Dark' | null\r\n}\r\n\r\nconst Profile: React.FC<PropsType> = (props) => {\r\n    return (\r\n        <div className={`${styles.Profile} ${props.theme ? 'dark' : ''}`}>\r\n            {props.isFetching ? <Preloader/> :\r\n                <>\r\n                <ProfileInfo profile={props.profile}\r\n                             status={props.status}\r\n                             isMyProfile={props.isMyProfile}\r\n                             theme={props.theme}\r\n                             savePhoto={props.savePhoto}\r\n                             saveProfile={props.saveProfile}/>\r\n            <PostsContainer theme={props.theme} isMyProfile={props.isMyProfile} profileFullName={props.profile.fullName}/>\r\n          </>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import React, {useEffect} from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect, useSelector} from \"react-redux\";\r\nimport {\r\n    clearProfile,\r\n    getMyProfile,\r\n    getUserProfile,\r\n    getUserStatus,\r\n    savePhoto, saveProfile\r\n} from \"../../redux/reducers/profile-reducer\";\r\nimport {NavLink, RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {ProfileType} from \"../../redux/reducers/auth-reducer\";\r\nimport {DescriptionFormDataType} from \"./Profile-info/DescriptionForm\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport Lottie from 'react-lottie';\r\nimport userAvatar from '../../lotties/userAvatar.json'\r\nimport {Col, Row} from \"antd\";\r\nimport styles from './Profile.module.css'\r\n\r\ntype MapstatePropsType = {\r\n    profile: ProfileType | null\r\n    status: string\r\n    isProfileFetching: boolean\r\n    isFetching: boolean\r\n    id: number | null\r\n}\r\ntype MapDispatchPropsType = {\r\n    getUserProfile: (id: number) => void\r\n    getMyProfile: () => void\r\n    getUserStatus: (id: number) => void\r\n    clearProfile: () => void\r\n    savePhoto: (file: any) => void\r\n    saveProfile: (profile: DescriptionFormDataType) => void\r\n}\r\ntype UrlParamsType = {\r\n    userId: string | undefined\r\n}\r\ntype PropsType = MapstatePropsType & MapDispatchPropsType & RouteComponentProps<UrlParamsType>;\r\n\r\n\r\nconst ProfileContainer: React.FC<PropsType> = (props) => {\r\n\r\n    const theme = useSelector((state: AppStateType) => state.app.theme);\r\n\r\n    const lottieOptions = {\r\n        autoplay: true,\r\n        animationData: userAvatar\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!props.match.params.userId) {\r\n            !props.id && props.clearProfile();\r\n            props.getMyProfile();\r\n        } else {\r\n            let userId = props.match.params.userId;\r\n            props.getUserProfile(Number(userId));\r\n        }\r\n    }, [props.match.params.userId]);\r\n\r\n    if (!props.id && !props.match.params.userId) {\r\n        return (\r\n            <>\r\n                {props.isProfileFetching || props.isFetching ? <Preloader/> :\r\n                    <Row justify='center' align={'middle'} style={{height: '100%'}}>\r\n                        <Col span={16}>\r\n                            <div className={`${styles.container} ${theme ? 'dark' : ''}`}>\r\n                                <h1>Please <NavLink to='/login'><b>Log In</b></NavLink></h1>\r\n                                    <Lottie options={lottieOptions} width={300} height={300}></Lottie>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                }\r\n            </>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {props.profile && !props.isProfileFetching ? <Profile profile={props.profile} status={props.status}\r\n                     isFetching={props.isProfileFetching} isMyProfile={!props.match.params.userId}\r\n                     savePhoto={props.savePhoto} theme={theme}\r\n                     saveProfile={props.saveProfile}/> : <Preloader/>}\r\n        </>\r\n    );\r\n\r\n};\r\n\r\n\r\nlet mapStateToProps = (state: AppStateType): MapstatePropsType => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        isProfileFetching: state.profilePage.isProfileFetching,\r\n        isFetching: state.auth.isFetching,\r\n        id: state.auth.id\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps: MapDispatchPropsType = {\r\n    getUserProfile,\r\n    getMyProfile,\r\n    getUserStatus,\r\n    clearProfile,\r\n    savePhoto,\r\n    saveProfile\r\n};\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect<MapstatePropsType, MapDispatchPropsType, {}, AppStateType>(mapStateToProps, mapDispatchToProps),\r\n    withRouter\r\n)(ProfileContainer);","import {authMe, SET_USER_AUTH_DATA, SetUserAuthDataType} from './auth-reducer';\nimport {AnyAction} from \"redux\";\nimport {ThunkAction} from \"redux-thunk\";\nimport {AppStateType} from \"../redux-store\";\n\nconst SWITCH_THEME = 'app_reducer/SWITCH_THEME';\n\ntype InitialSatateType = {\n    initialized: boolean\n    theme: null | 'Dark'\n}\n\nconst initialState: InitialSatateType = {\n  initialized : false,\n  theme: null\n};\n\n\nconst appReducer = (state = initialState, action: actionsType):InitialSatateType => {\n\n    switch (action.type) {\n        case SET_USER_AUTH_DATA:\n            return {...state, initialized: true};\n        case SWITCH_THEME:\n            return {...state, theme: action.theme};\n        default:\n            return state;\n    }\n};\n\ntype actionsType = SwitchThemeType | SetUserAuthDataType;\n\ntype SwitchThemeType = {\n    type: typeof SWITCH_THEME,\n    theme: null | 'Dark'\n}\n\nexport const switchTheme = (theme: null | 'Dark'):SwitchThemeType => {\n    return {\n        type: SWITCH_THEME,\n        theme\n    }\n};\n\nexport const initializeApp = (): ThunkAction< void, AppStateType, unknown, AnyAction> => dispatch => {\n    dispatch(authMe());\n};\n\n\nexport default appReducer;","import React, {useEffect} from 'react';\nimport styles from './Head.module.css';\nimport Preloader from \"../common/Preloader/Preloader\";\nimport {NavLink} from \"react-router-dom\";\nimport avatar from '../../Images/scalable-vector-graphics-avatar-learning-icon-customer-login-avatar.jpg';\nimport {InitialAuthStateType, ProfileType} from \"../../redux/reducers/auth-reducer\";\nimport {Button, Col, Row} from \"antd\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport light from '../../Images/Light.png';\nimport dark from '../../Images/Dark.png';\nimport {switchTheme} from \"../../redux/reducers/app-reducer\";\nimport star from '../../Images/starOfDeath.png';\n\ntype PropsType = {\n    auth: InitialAuthStateType\n    logout: () => void\n    setUserProfile: (profile: ProfileType | null) => void\n}\n\nconst Header: React.FC<PropsType> = (props) => {\n\n    const theme = useSelector((state: AppStateType) => state.app.theme);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if (!!theme) {\n            const logo = document.getElementById('logo');\n            logo && (logo.style.opacity = '0');\n            const starOfDeath = document.getElementById('star');\n            starOfDeath && (starOfDeath.style.opacity = '1');\n        }\n    }, [theme]);\n\n    const selectLightMode = () => {\n        dispatch(switchTheme(null));\n        const starOfDeath = document.getElementById('star');\n        starOfDeath && (starOfDeath.style.opacity = '0');\n        const logo = document.getElementById('logo');\n        logo && (logo.style.opacity = '1');\n    };\n\n    const selectDarkMode = () => {\n        dispatch(switchTheme('Dark'));\n        const logo = document.getElementById('logo');\n        logo && (logo.style.opacity = '0');\n        const starOfDeath = document.getElementById('star');\n        starOfDeath && (starOfDeath.style.opacity = '1');\n    }\n\n    const logoutClick = () => {\n        props.logout();\n        props.setUserProfile(null);\n    };\n\n    return (\n        <header className={styles.header}>\n            <Row>\n                <Col span={3}>\n                    <img id={'logo'}\n                        src='https://upload.wikimedia.org/wikipedia/commons/7/7c/Tumblr_static_memrise_icon_tumblr%281%29.png'\n                        className={styles.logo} alt={''}/>\n                    <img id={'star'} src={star} className={styles.star} alt={''}/>\n                </Col>\n                <Col span={17}>\n                    <div className={`${styles.theme} ${theme ? styles.themeOpacityDark : ''}`}>\n                        <img src={dark} onClick={selectDarkMode}/>\n                        <img src={light} onClick={selectLightMode}/>\n                        <span style={theme ? {color: 'indianred'} : {}}>CHOOSE YOUR SIDE</span>\n                    </div>\n                </Col>\n                <Col span={4}>\n                    <div className={styles.auth}>\n                        {props.auth.isFetching ? <Preloader className={'preloader'}/> : props.auth.id ?\n                            <div className={styles.loginBlock}>\n                                <div className={styles.avatar}>\n                                    <img src={props.auth.logoSrc ? props.auth.logoSrc : avatar} alt={''}/>\n                                </div>\n                                <div>\n                                    <Button type={'link'} onClick={logoutClick}><b>Log out</b></Button>\n                                </div>\n                                <b style={theme ? {color: 'white'} : {}}>\n                                    {props.auth.login}\n                                </b>\n                            </div>\n                            :\n                            <NavLink to={'/login'}>\n                                <b>Log In</b>\n                            </NavLink>}\n                    </div>\n                </Col>\n            </Row>\n        </header>\n    );\n};\n\nexport default Header;","import React from 'react';\r\nimport Header from \"./Head\";\r\nimport {connect} from \"react-redux\";\r\nimport {InitialAuthStateType, logout, ProfileType} from \"../../redux/reducers/auth-reducer\";\r\nimport {setUserProfile} from \"../../redux/reducers/profile-reducer\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\n\r\ntype MapStatePropsType = {\r\n    auth: InitialAuthStateType\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    logout: () => void\r\n    setUserProfile: (profile: ProfileType|null) => void\r\n}\r\n\r\ntype PropsType = MapStatePropsType & MapDispatchPropsType;\r\n\r\nconst HeaderContainer: React.FC<PropsType> = (props) => {\r\n        return (\r\n            <Header {...props}/>\r\n        );\r\n    };\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        auth: state.auth\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps: MapDispatchPropsType = {\r\n    logout,\r\n    setUserProfile\r\n};\r\n\r\nexport default connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>(mapStateToProps, mapDispatchToProps)(HeaderContainer);","import React from 'react';\r\nimport Preloader from \"../components/common/Preloader/Preloader\";\r\n\r\nexport const withSuspense = (Component: React.FC) => {\r\n    return (props: any) => {\r\n        return <React.Suspense fallback={<Preloader/>}><Component {...props}/></React.Suspense>\r\n    }\r\n};","import React from 'react';\r\nimport {Col, Row} from \"antd\";\r\nimport styles from './StartPage.module.css'\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\n\r\nconst StartPage = () => {\r\n\r\n    const theme = useSelector((state: AppStateType) => state.app.theme);\r\n\r\n    return (\r\n        <Row justify='center' align={'middle'} style={{height: '100%'}}>\r\n            <Col span={16}>\r\n                <div className={`${styles.container} ${theme ? 'dark' : ''}`}>\r\n                        <h1>Hi there!</h1>\r\n                    <p>This App is still in progress, and unfortunately you can't try\r\n                        all functionality because of authorisation, but if you are\r\n                    interested - you still can check the code!)\r\n                        Also make your choice at the top of the screen )</p>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default StartPage;","import React, {useEffect} from 'react';\nimport './App.css';\nimport NavBar from \"./components/NavBar/NavBar\";\nimport Music from './components/Music/Music';\nimport News from './components/News/News';\nimport CreateAvatar from './components/CreateAvatar/CreateAvatar';\nimport {BrowserRouter, HashRouter, Route, Switch} from \"react-router-dom\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeadContainer\";\nimport {connect} from \"react-redux\";\nimport {initializeApp} from \"./redux/reducers/app-reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport {withSuspense} from \"./HOC/withSuspense\";\nimport {AppStateType} from \"./redux/redux-store\";\nimport background from './Images/background.png'\nimport kosmos from './Images/kosmos.jpg';\nimport {Col, Row} from \"antd\";\nimport StartPage from \"./components/StartPage/StartPage\";\n\nconst Login = React.lazy(() => import(\"./components/Login/Login\"));\nconst Dialogs = React.lazy(() => import('./components/Dialogs/Dialogs'));\nconst NotFound = React.lazy(() => import ('./components/404/404'));\n\n\ntype MapStatePropsType = {\n    initialized: boolean,\n    theme: null | 'Dark'\n}\ntype MapDispatchPropsType = {\n    initializeApp: () => void\n}\ntype PropsType = MapStatePropsType & MapDispatchPropsType;\n\nconst App: React.FC<PropsType> = (props) => {\n\n    useEffect(() => {\n        props.initializeApp();\n    }, []);\n\n    if (!props.initialized) return <Preloader/>;\n    return (\n        <HashRouter>\n            <Row>\n                <Col span={24}>\n                    <div className={`backgroundContainer`}>\n                        <img src={background} alt={''} className={'background'}/>\n                    </div>\n                    {!!props.theme && <>\n                        <div className={'darkBack'}/>\n                        <img src={kosmos} alt={''} className={'kosmos'}/>\n                    </>}\n\n                    <Switch>\n                        <Route exact path='/login' render={withSuspense(Login)}/>\n                        <Route path='/' render={() => <div>\n                            <HeaderContainer/>\n                            <Row>\n                                <Col span={4} offset={1} style={{maxWidth: 200}}>\n                                    <NavBar/>\n                                </Col>\n                                <Col span={18} style={{marginLeft: 5}}>\n\n                                    <Switch>\n                                    <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\n                                    <Route path='/dialogs' render={withSuspense(Dialogs)}/>\n                                    <Route path='/music' render={() => <Music/>}/>\n                                    <Route path='/news' render={() => <News/>}/>\n                                    <Route path='/avatar' render={() => <CreateAvatar/>}/>\n                                    <Route path='/users' render={() => <UsersContainer/>}/>\n                                    <Route exact path='/' render={() => <StartPage/>}/>\n                                    <Route path={'*'} render={withSuspense(NotFound)}/>\n                                    </Switch>\n\n                                </Col>\n                            </Row>\n                        </div>}/>\n                    </Switch>\n                </Col>\n            </Row>\n        </HashRouter>\n    );\n};\n\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\n    return {\n        initialized: state.app.initialized,\n        theme: state.app.theme\n    }\n};\n\nconst mapDispatchToProps: MapDispatchPropsType = {\n    initializeApp\n};\n\nexport default connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>(mapStateToProps, mapDispatchToProps)(App);\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./reducers/profile-reducer\";\r\nimport dialogsReducer from \"./reducers/dialogs-reducer\";\r\nimport usersReducer from \"./reducers/users-reducer\";\r\nimport authReducer from \"./reducers/auth-reducer\";\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport appReducer from \"./reducers/app-reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n   profilePage : profileReducer,\r\n    dialogsPage : dialogsReducer,\r\n    usersPage : usersReducer,\r\n    auth : authReducer,\r\n    app : appReducer,\r\n    form : formReducer\r\n});\r\n\r\ntype RootReducerType = typeof rootReducer;\r\nexport type AppStateType = ReturnType<RootReducerType>\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\n\r\n","import React from 'react';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {store} from \"./redux/redux-store\";\nimport {Provider} from \"react-redux\";\nimport 'antd/dist/antd.css';\n\n\n    ReactDOM.render(\n            <Provider store={store}>\n            <App/>\n            </Provider>,\n        document.getElementById('root')\n    );\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/scalable-vector-graphics-avatar-learning-icon-customer-login-avatar.bea0c518.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Avatar\":\"Profile-Info_Avatar__2n7Cs\",\"bordered\":\"Profile-Info_bordered__2uFPa\",\"user\":\"Profile-Info_user__1FLN1\",\"status\":\"Profile-Info_status__28UlE\",\"description\":\"Profile-Info_description__1E1cC\",\"contacts\":\"Profile-Info_contacts__M3Tk-\",\"editButton\":\"Profile-Info_editButton__29dKY\",\"about\":\"Profile-Info_about__vUvJP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatarGenerator\":\"AvatarGenerator_avatarGenerator__3xEsB\",\"avatarPresentation\":\"AvatarGenerator_avatarPresentation__S5qPr\",\"avatarGeneration\":\"AvatarGenerator_avatarGeneration__3MZua\",\"avatarFull\":\"AvatarGenerator_avatarFull__22YT-\",\"avatarControl\":\"AvatarGenerator_avatarControl__3oJ_x\",\"avatarSelect\":\"AvatarGenerator_avatarSelect__3iWKo\",\"selected\":\"AvatarGenerator_selected__1G6QK\",\"avatarPlaceholder\":\"AvatarGenerator_avatarPlaceholder__2tAnV\",\"avatarCreate\":\"AvatarGenerator_avatarCreate__2fF5-\",\"avatarNamePlaceholder\":\"AvatarGenerator_avatarNamePlaceholder__7iVXx\",\"presentationCol\":\"AvatarGenerator_presentationCol__3gr7v\"};","import {PhotosType, ProfileType} from \"../redux/reducers/auth-reducer\";\r\nimport {DescriptionFormDataType} from \"../components/Profile/Profile-info/DescriptionForm\";\r\nimport {instance, RegularResponseType} from \"./API\";\r\n\r\ntype PhotosDataType = {\r\n    photos: PhotosType\r\n}\r\n\r\nexport const ProfileAPI = {\r\n\r\n    getProfile(id: number) {\r\n        return instance.get<ProfileType>(`profile/${id}`)\r\n            .then(response => response.data)\r\n    },\r\n\r\n    getStatus(id: number) {\r\n        return instance.get<string>(`profile/status/${id}`)\r\n            .then(response => response.data)\r\n    },\r\n\r\n    setStatus(status: string) {\r\n        return instance.put<RegularResponseType>('/profile/status', {status: status})\r\n    },\r\n\r\n    savePhoto(photo: File) {\r\n        const formData = new FormData();\r\n        formData.append('image', photo);\r\n        return instance.put<RegularResponseType<PhotosDataType>>('profile/photo', formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }).then(response => response.data)\r\n    },\r\n\r\n    saveProfile(data: DescriptionFormDataType) {\r\n        return instance.put<RegularResponseType>('profile', data)\r\n            .then(response => response.data)\r\n    }\r\n};","import {resultCodes} from \"../../API/API\";\r\nimport {PhotosType} from \"./auth-reducer\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {AppStateType} from \"../redux-store\";\r\nimport {UsersAPI} from \"../../API/UsersAPI\";\r\n\r\n\r\nexport const FOLLOW = 'users_reducer/FOLLOW';\r\nexport const UNFOLLOW = 'users_reducer/UNFOLLOW';\r\nconst SET_USERS = 'users_reducer/SET_USERS';\r\nconst SET_TOTAL_USERS_COUNT = 'users_reducer/SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_FETCHING = 'users_reducer/TOGGLE_FETCHING';\r\nconst TOGGLE_FOLLOWING_IN_PROGRESS = 'users_reducer/TOGGLE_FOLLOWING_IN_PROGRESS';\r\n\r\nexport type UserType = {\r\n    id: number\r\n    name: string\r\n    status: string\r\n    photos: PhotosType\r\n    followed: boolean\r\n}\r\n\r\ntype InitialUsersState = {\r\n    users: Array<UserType>\r\n    totalUsersCount: number\r\n    isFetching: boolean\r\n    followingInProgress: Array<number>\r\n}\r\n\r\nconst initialState: InitialUsersState = {\r\n    users: [],\r\n    totalUsersCount: 0,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n};\r\n\r\n\r\nconst usersReducer = (state = initialState, action: ActionsTypes) => {\r\n\r\n    switch (action.type) {\r\n        case SET_USERS:\r\n            return {...state, users: [...action.users]};\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {...state, totalUsersCount: action.usersCount};\r\n        case TOGGLE_FETCHING:\r\n            return {...state, isFetching: action.isFetching};\r\n        case TOGGLE_FOLLOWING_IN_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.inProgress ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            };\r\n        default:\r\n            return state;\r\n\r\n    }\r\n};\r\n\r\ntype ActionsTypes = ToggleFollowingInProgressType | ToggleFetchingType |\r\n    SetTotalUsersCountType | FollowActionType |\r\n    UnfollowActionType | SetUsersType;\r\n\r\ntype ToggleFollowingInProgressType = {\r\n    type: typeof TOGGLE_FOLLOWING_IN_PROGRESS\r\n    inProgress: boolean\r\n    userId: number\r\n}\r\n\r\nexport const toggleFollowingInProgress = (inProgress: boolean, userId: number): ToggleFollowingInProgressType => {\r\n    return {\r\n        type: TOGGLE_FOLLOWING_IN_PROGRESS,\r\n        inProgress,\r\n        userId\r\n    }\r\n};\r\n\r\ntype ToggleFetchingType = {\r\n    type: typeof TOGGLE_FETCHING\r\n    isFetching: boolean\r\n}\r\n\r\nexport const toggleFetching = (isFetching: boolean): ToggleFetchingType => {\r\n    return {\r\n        type: TOGGLE_FETCHING,\r\n        isFetching: isFetching\r\n    }\r\n};\r\n\r\ntype SetTotalUsersCountType = {\r\n    type: typeof SET_TOTAL_USERS_COUNT\r\n    usersCount: number\r\n}\r\n\r\nexport const setTotalUsersCount = (usersCount: number): SetTotalUsersCountType => {\r\n    return {\r\n        type: SET_TOTAL_USERS_COUNT,\r\n        usersCount\r\n    }\r\n};\r\n\r\n\r\nexport type FollowActionType = {\r\n    type: typeof FOLLOW\r\n    user: UserType\r\n}\r\n\r\nexport const followAction = (user: UserType): FollowActionType => {\r\n    return {\r\n        type: FOLLOW,\r\n        user\r\n    }\r\n};\r\n\r\nexport type UnfollowActionType = {\r\n    type: typeof UNFOLLOW\r\n    user: UserType\r\n}\r\n\r\n\r\nexport const unfollowAction = (user: UserType): UnfollowActionType => {\r\n    return {\r\n        type: UNFOLLOW,\r\n        user\r\n    }\r\n};\r\n\r\ntype SetUsersType = {\r\n    type: typeof SET_USERS\r\n    users: Array<UserType>\r\n}\r\n\r\nexport const setUsers = (users: Array<UserType>): SetUsersType => {\r\n    return {\r\n        type: SET_USERS,\r\n        users\r\n    }\r\n};\r\n\r\n\r\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionsTypes>;\r\n\r\nexport const getUsers = (currentPage: number, pageSize: number,friend?: boolean, term?: string): ThunkType => async dispatch => {\r\n    dispatch(toggleFetching(true));\r\n    try {\r\n        const data = await UsersAPI.getUsers(currentPage, pageSize, friend, term);\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    } catch (e) {\r\n        console.error(e)\r\n    } finally {\r\n        dispatch(toggleFetching(false));\r\n    }\r\n};\r\n\r\nexport const follow = (user: UserType): ThunkType => async dispatch => {\r\n    dispatch(toggleFollowingInProgress(true, user.id));\r\n    try {\r\n        const data = await UsersAPI.followUser(user.id);\r\n        if (data.resultCode === resultCodes.Success) {\r\n            user.followed = true;\r\n            dispatch(followAction(user));\r\n        }\r\n    } catch (e) {\r\n        console.error(e)\r\n    } finally {\r\n        dispatch(toggleFollowingInProgress(false, user.id))\r\n    }\r\n};\r\n\r\nexport const unfollow = (user: UserType): ThunkType => async dispatch => {\r\n    dispatch(toggleFollowingInProgress(true, user.id));\r\n    try {\r\n        const data = await UsersAPI.unfollowUser(user.id);\r\n        if (data.resultCode === resultCodes.Success) {\r\n            user.followed = false;\r\n            dispatch(unfollowAction(user))\r\n        }\r\n    } catch (e) {\r\n        console.error(e)\r\n    } finally {\r\n        dispatch(toggleFollowingInProgress(false, user.id))\r\n    }\r\n};\r\n\r\n\r\nexport default usersReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Head_header__33fVD\",\"logo\":\"Head_logo__206Vv\",\"star\":\"Head_star__3rSa0\",\"theme\":\"Head_theme__1OnH0\",\"themeOpacityDark\":\"Head_themeOpacityDark__ME_4Q\",\"auth\":\"Head_auth__6Bcwn\",\"avatar\":\"Head_avatar__3lh03\",\"loginBlock\":\"Head_loginBlock__3XiWN\"};"],"sourceRoot":""}