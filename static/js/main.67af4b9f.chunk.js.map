{"version":3,"sources":["components/Profile/Profile-info/Profile-Info.module.css","API/AuthAPI.tsx","API/UsersAPI.tsx","components/Profile/Posts/Post/Post.module.css","components/common/customElements/Inputs.module.css","components/Header/Head.module.css","components/Wallpaper/Wallpaper.tsx","components/Users/users.module.css","components/Profile/Profile.module.css","utils/validators.tsx","components/NavBar/sideBar/sideBar.module.css","components/Users/User/User.module.css","components/NavBar/sideBar/friend/friend.module.css","components/Wallpaper/Wallpaper.module.css","components/Users/SearchUsers/SearchUsers.module.css","components/Profile/Profile-info/DescriptionForm.module.css","components/Profile/Posts/Posts.module.css","components/Profile/Posts/AddPost/AddPost.module.css","API/API.tsx","redux/reducers/dialogs-reducer.ts","Images/like.png","Images/addPostBack.png","Images/91.svg","components/common/Preloader/Preloader.module.css","Images/background.png","components/StartPage/StartPage.module.css","redux/reducers/profile-reducer.ts","components/NavBar/NavBar.module.css","components/common/customElements/Inputs.tsx","serviceWorker.js","components/NavBar/sideBar/friend/friend.tsx","components/NavBar/sideBar/sideBar.tsx","components/NavBar/sideBar/sideBarContainer.tsx","components/NavBar/NavBar.tsx","components/Music/Music.tsx","components/News/News.tsx","components/common/AvatarGenerator/AvatarGenerator.tsx","components/CreateAvatar/CreateAvatar.tsx","components/Users/User/User.tsx","components/Users/Users.tsx","components/Users/SearchUsers/SearchUsers.tsx","components/Users/UsersContainer.tsx","components/Profile/Profile-info/Status.tsx","components/Profile/Profile-info/DescriptionForm.tsx","components/Profile/Profile-info/Description.tsx","components/Profile/Profile-info/Profile-info.tsx","components/Profile/Posts/Post/Post.tsx","components/Profile/Posts/AddPost/AddPost.tsx","components/Profile/Posts/Posts.tsx","components/Profile/Posts/PostsContainer.tsx","components/common/Preloader/Preloader.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","components/Header/Head.tsx","components/Header/HeadContainer.tsx","redux/reducers/app-reducer.ts","HOC/withSuspense.tsx","components/StartPage/StartPage.tsx","App.tsx","redux/redux-store.ts","index.tsx","Images/scalable-vector-graphics-avatar-learning-icon-customer-login-avatar.jpg","components/common/AvatarGenerator/AvatarGenerator.module.css","API/ProfileAPI.tsx","redux/reducers/users-reducer.ts","API/SequrityAPI.tsx","redux/reducers/auth-reducer.ts"],"names":["module","exports","AuthAPI","AuthMe","instance","get","then","response","data","AuthLogin","post","AuthLogout","delete","UsersAPI","getUsers","currentPage","pageSize","friend","term","unfollowUser","id","followUser","Wallpaper","className","styles","box","img","src","alt","required","value","maxLengthCreator","max","length","resultCodes","axios","create","withCredentials","baseURL","headers","initialState","MessagesData","message","DialogsData","name","logoSrc","sendMessageActionCreator","type","dialogsReducer","state","action","messageId","newMessage","SET_PHOTO","CLEAR_PROFILE","ADD_POST","SET_USER_PROFILE","SET_STATUS","TOGGLE_FETCHING","SET_USER_FRIENDS","postData","likesCount","profile","userFriends","status","isProfileFetching","setUserFriends","friends","toggleFetching","setUserProfile","addPostActionCreator","clearProfile","getUserProfile","userId","dispatch","a","ProfileAPI","getProfile","getUserStatus","console","error","getMyProfile","resultCode","Success","getStatus","savePhoto","file","photos","saveProfile","res","messages","stopSubmit","_error","profileReducer","postId","newPost","FOLLOW","user","UNFOLLOW","index","findIndex","slice","CustomTextarea","input","meta","props","hasError","touched","formControl","CustomInput","Boolean","window","location","hostname","match","Friend","to","userLogo","friendName","SideBar","useState","shuffled","setShuffled","useEffect","interval","setInterval","sort","Math","random","clearInterval","sideBar","title","friendsList","map","key","small","connect","profilePage","NavBar","hoverable","bordered","Item","activeClassName","active","Music","News","TabPane","Tabs","AvatarGenerator","avatarRef","useRef","selectedStyle","setSelectedStyle","loading","setLoading","selectedIndex","setSelectedIndex","useDispatch","optionsContext","OptionContext","allOptions","tabNames","tabs","Array","from","current","options","option","label","currentAvatar","avatarStyle","accessoriesType","topType","hairColor","facialHairType","clotheType","clotheColor","eyeType","eyebrowType","mouthType","skinColor","avatarStyles","hatColor","facialHairColor","graphicType","hairColorDisabled","includes","hatColorDisabled","facialHairDisabled","facialHairColorDisabled","accessoriesDisabled","clothesColorDisabled","graphicDisabled","gutter","justify","style","height","avatarGenerator","presentationCol","xs","sm","md","avatarPresentation","avatarFull","ref","width","avatarControl","disabled","Object","keys","onClick","svgString","XMLSerializer","serializeToString","ReactDOM","svg","Blob","File","htmlType","avatarGeneration","tabBarGutter","defaultActiveKey","animated","tab","disabledTabs","autoHeight","autoHeightMax","renderTrackHorizontal","display","renderThumbHorizontal","hideTracksWhenNotNeeded","OptionKey","selectFromKeys","item","lg","property","selectItem","avatarSelect","selected","join","CreateAvatar","useSelector","auth","User","bodyStyle","logo","large","align","userName","currentAuthUserId","followButtonContainer","followingInProgress","some","followed","Users","users","usersContainer","follow","unfollow","SearchUsers","searchOptions","inputValue","setInputValue","debounced","useDebouncedCallback","setSearchOptions","page","searchInputContainer","isFetching","spiner","indicator","LoadingOutlined","fontSize","spin","placeholder","onChange","e","target","callback","mapDispatchToProps","usersPage","totalUsersCount","history","useHistory","parsedQuery","queryString","search","substr","querySearch","String","push","pathname","setSearchOptionsCallback","useCallback","paginator","size","total","scrollTo","top","behavior","pageSizeOptions","defaultCurrent","onShowSizeChange","hideOnSinglePage","showSizeChanger","showQuickJumper","Status","setStatus","editMode","setEditMode","padding","autoFocus","onBlur","onDoubleClick","reduxForm","form","onSubmit","handleSubmit","Field","component","validate","Contacts","Description","fullName","about","lookingForAJob","lookingForAJobDescription","aboutMe","contacts","ProfileInfo","span","Avatar","isMyProfile","textAlign","showUploadList","beforeUpload","icon","UploadOutlined","editButton","initialValues","Post","avatar","Message","Like","like","heart","TextArea","Input","AddPost","setNewPost","addPostContainer","addPostBack","autoSize","minRows","maxRows","addPost","Posts","postElements","profileFullName","PostsContainer","Preloader","preloader","Profile","compose","withRouter","lottieOptions","autoplay","animationData","userAvatar","params","Number","container","Header","loginBlock","logout","login","Head","initialized","appReducer","SET_USER_AUTH_DATA","withSuspense","Component","Suspense","fallback","StartPage","Login","React","lazy","Dialogs","NotFound","initializeApp","authMe","app","background","exact","path","render","offset","maxWidth","marginLeft","rootReducer","combineReducers","dialogsPage","usersReducer","authReducer","formReducer","store","createStore","applyMiddleware","thunkMiddleware","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","put","photo","formData","FormData","append","SET_USERS","toggleFollowingInProgress","inProgress","followAction","unfollowAction","items","usersCount","totalCount","filter","SequrityAPI","SET_LOGO_SRC","SET_CAPTCHA","email","captchaUrl","loginError","setLoginErrorMessage","loginErrorMessage","setCaptchaUrl","url","setUserAuthData","CaptchaIsRequired","getCaptcha","captcha"],"mappings":"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","file":"static/js/main.67af4b9f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Avatar\":\"Profile-Info_Avatar__2n7Cs\",\"user\":\"Profile-Info_user__1FLN1\",\"status\":\"Profile-Info_status__28UlE\",\"description\":\"Profile-Info_description__1E1cC\",\"contacts\":\"Profile-Info_contacts__M3Tk-\",\"editButton\":\"Profile-Info_editButton__29dKY\",\"about\":\"Profile-Info_about__vUvJP\"};","import {instance, RegularResponseType} from \"./API\";\r\n\r\ntype LoginResponseBodyType = {\r\n    data: { userId: number }\r\n}\r\n\r\ntype AuthMeResponseBodyType = {\r\n    id: number\r\n    email: string\r\n    login: string\r\n}\r\n\r\nexport type LoginRequestType = {\r\n    email: string,\r\n    password: string,\r\n    rememberMe: boolean,\r\n    captcha?: string\r\n}\r\n\r\n\r\nexport const AuthAPI = {\r\n\r\n    AuthMe() {\r\n        return instance.get<RegularResponseType<AuthMeResponseBodyType>>(`auth/me`)\r\n            .then(response => response.data)\r\n    },\r\n\r\n    AuthLogin(data: LoginRequestType) {\r\n        return instance.post<RegularResponseType<LoginResponseBodyType>>('auth/login', data)\r\n            .then(response => response.data)\r\n    },\r\n\r\n    AuthLogout() {\r\n        return instance.delete<RegularResponseType>('auth/login')\r\n    }\r\n\r\n};","import {instance, RegularResponseType} from \"./API\";\r\nimport {UserType} from \"../redux/reducers/users-reducer\";\r\n\r\nexport type GetUsersResponseType = {\r\n    items: Array<UserType>\r\n    totalCount: number\r\n    error: string | null\r\n}\r\n\r\nexport const UsersAPI = {\r\n\r\n    getUsers(currentPage: number, pageSize: number, friend?: boolean, term?: string) {\r\n        return instance.get<GetUsersResponseType>(`users?page=${currentPage}&count=${pageSize}` + (friend ? `&friend=true`:'') +(term ? `&term=${term}`:''))\r\n            .then(response => response.data)\r\n    },\r\n\r\n    unfollowUser(id: number) {\r\n        return instance.delete<RegularResponseType>(`follow/${id}`)\r\n            .then(response => response.data)\r\n    },\r\n\r\n    followUser(id: number) {\r\n        return instance.post<RegularResponseType>(`follow/${id}`, {})\r\n            .then(response => response.data)\r\n    }\r\n\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Post\":\"Post_Post__cRRaa\",\"avatar\":\"Post_avatar__3abDU\",\"Like\":\"Post_Like__1Ou17\",\"heart\":\"Post_heart__az2u0\",\"Message\":\"Post_Message__xfMhO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"Inputs_formControl__2rsW4\",\"error\":\"Inputs_error__2RxS6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Head_Header__1zKkD\",\"auth\":\"Head_auth__6Bcwn\",\"avatar\":\"Head_avatar__3lh03\",\"loginBlock\":\"Head_loginBlock__3XiWN\"};","import React from 'react';\r\nimport styles from './Wallpaper.module.css';\r\n\r\nconst Wallpaper = () => {\r\n    return(\r\n        <div className={styles.box}>\r\n            <img className={styles.img} src='https://wonderkids.club/wp-content/uploads/2019/09/casteism-india_peopleandthoughts.png' alt={''}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Wallpaper;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersContainer\":\"users_usersContainer__2EFDU\",\"paginator\":\"users_paginator__13mwc\",\"searchBack\":\"users_searchBack__2NpMm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Profile\":\"Profile_Profile__2ENRy\",\"container\":\"Profile_container__29t-S\"};","\r\nexport const required = (value: string) => {\r\n    if (value) return undefined;\r\n    return 'required field';\r\n};\r\n\r\nexport const maxLengthCreator = (max: number) => (value: string) => {\r\n  if (value.length > max) return `max length is ${max} symbols`;\r\n  return undefined;\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sideBar\":\"sideBar_sideBar__1PBEh\",\"title\":\"sideBar_title__DnGe1\",\"friendsList\":\"sideBar_friendsList__3-Dud\",\"show\":\"sideBar_show__btw_E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"User_logo__2Ttrl\",\"followButtonContainer\":\"User_followButtonContainer__3Mjhr\",\"userName\":\"User_userName__2NiP_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend\":\"friend_friend__2X0g2\",\"friendName\":\"friend_friendName__3b_9P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"Wallpaper_img__1T4kh\",\"box\":\"Wallpaper_box__BIgZy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInputContainer\":\"SearchUsers_searchInputContainer__OpCI9\",\"spiner\":\"SearchUsers_spiner__3Pzzq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"DescriptionForm_form__3-tkH\",\"error\":\"DescriptionForm_error__3GLX7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Posts\":\"Posts_Posts__3akOg\",\"title\":\"Posts_title__3Bxxu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addPostContainer\":\"AddPost_addPostContainer__1SUwa\",\"addPostBack\":\"AddPost_addPostBack__3AonL\"};","import axios from \"axios\";\r\n\r\nexport const instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    headers: {\r\n        'API-KEY': '8db7e860-79e2-4316-a7a6-e54ca669f748'\r\n    }\r\n});\r\n\r\nexport enum resultCodes {\r\n    Success = 0,\r\n    Error = 1,\r\n    CaptchaIsRequired = 10\r\n}\r\n\r\nexport type RegularResponseType<D = {}> = {\r\n    resultCode: resultCodes\r\n    messages: Array<string>\r\n    data: D\r\n}\r\n\r\n\r\n\r\n\r\n","const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nexport type MessageType = {\r\n    id: number\r\n    message: string\r\n}\r\nexport type DialogType = {\r\n    id: number\r\n    name: string\r\n    logoSrc: string\r\n}\r\n\r\nexport type InitialStateType = typeof initialState;\r\n\r\nconst initialState = {\r\n    MessagesData: [\r\n        {id: 1, message: 'Hi!'},\r\n        {id: 2, message: 'How are u?'},\r\n        {id: 3, message: 'Fine'},\r\n    ] as Array<MessageType>,\r\n    DialogsData: [\r\n        {\r\n            id: 1,\r\n            name: 'Dima',\r\n            logoSrc: 'https://i.pinimg.com/280x280_RS/91/a3/2c/91a32c5d5d8fd2a5c81c6874a65a4fb4.jpg'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Alex',\r\n            logoSrc: 'https://www.autoalloys.com/content/images/thumbs/0003760_19-ava-memphis-hyper-silver-alloy-wheels_550.png'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Vanya',\r\n            logoSrc: 'https://whatsism.com/uploads/posts/2018-07/1530546770_rmk_vdjbx10.jpg'\r\n        },\r\n        {id: 4, name: 'Viktor', logoSrc: 'https://archilab.online/images/1/123.jpg'},\r\n        {id: 5, name: 'Andrew', logoSrc: 'https://cs16planet.ru/steam-avatars/images/avatar2700.jpg'}\r\n    ] as Array<DialogType>\r\n};\r\n\r\n\r\nconst dialogsReducer = (state = initialState, action: SendMessageType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case SEND_MESSAGE: {\r\n            const messageId = state.MessagesData.length + 1;\r\n            const newMessage = {\r\n                id: messageId,\r\n                message: action.message\r\n            };\r\n            return {...state, MessagesData: [...state.MessagesData, newMessage]};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n\r\ntype SendMessageType = {\r\n    type: typeof SEND_MESSAGE\r\n    message: string\r\n}\r\n\r\nexport const sendMessageActionCreator = (message:string): SendMessageType => {\r\n    return {type: SEND_MESSAGE, message};\r\n};\r\n\r\nexport default dialogsReducer;","module.exports = __webpack_public_path__ + \"static/media/like.c2ba4745.png\";","module.exports = __webpack_public_path__ + \"static/media/addPostBack.d67502f3.png\";","module.exports = __webpack_public_path__ + \"static/media/91.32dab0f3.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__1E3-0\"};","module.exports = __webpack_public_path__ + \"static/media/background.e9b8b6bb.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"StartPage_container__3IkJg\"};","import {resultCodes} from \"../../API/API\";\nimport {stopSubmit} from \"redux-form\";\nimport {PhotosType, ProfileType} from \"./auth-reducer\";\nimport {ThunkAction} from \"redux-thunk\";\nimport {AppStateType} from \"../redux-store\";\nimport {DescriptionFormDataType} from \"../../components/Profile/Profile-info/DescriptionForm\";\nimport {ProfileAPI} from \"../../API/ProfileAPI\";\nimport {AuthAPI} from \"../../API/AuthAPI\";\nimport {FOLLOW, FollowActionType, UNFOLLOW, UnfollowActionType, UserType} from \"./users-reducer\";\n\nexport const SET_PHOTO = 'profile_reducer/SET_PHOTO';\nconst CLEAR_PROFILE = 'profile_reducer/CLEAR_PROFILE';\nconst ADD_POST = 'profile_reducer/ADD_POST';\nconst SET_USER_PROFILE = 'profile_reducer/SET_USER_PROFILE';\nconst SET_STATUS = 'profile_reducer/SET_STATUS';\nconst TOGGLE_FETCHING = 'profile_reducer/TOGGLE_FETCHING';\nconst SET_USER_FRIENDS = 'profile_reducer/SET_USER_FRIENDS';\n\nexport type PostType = {\n    id: number\n    post: string\n    likesCount: number\n}\n\ntype InitialProfileState = typeof initialState;\n\nconst initialState = {\n    postData: [\n        {id: 1, post: 'Hi, how are you?', likesCount: 9},\n        {id: 2, post: 'Working hard.', likesCount: 15}\n    ] as Array<PostType>,\n    profile: null as ProfileType|null,\n    userFriends: [] as Array<UserType>,\n    status: '',\n    isProfileFetching: false,\n};\n\nconst profileReducer = (state = initialState, action: ActionsTypes): InitialProfileState => {\n\n    switch (action.type) {\n        case ADD_POST: {\n            let postId = state.postData.length + 1;\n            let newPost = {\n                id: postId,\n                post: action.post,\n                likesCount: 0\n            };\n            return {...state, postData: [newPost, ...state.postData]};\n        }\n        case FOLLOW: {\n            return {...state, userFriends: [...state.userFriends, action.user]}\n        }\n        case UNFOLLOW: {\n            const index = state.userFriends.findIndex(user => user.id === action.user.id);\n            if ( index === -1 ) {return state}\n            return {...state, userFriends: [...state.userFriends.slice(0,index), ...state.userFriends.slice(index+1)]}\n        }\n        case TOGGLE_FETCHING: {\n            return {...state, isProfileFetching: action.isProfileFetching};\n        }\n        case SET_USER_PROFILE: {\n            return {...state, profile: action.profile}\n        }\n        case CLEAR_PROFILE: {\n            return {...state, profile: null}\n        }\n        case SET_STATUS: {\n            return {...state, status: action.status}\n        }\n        case SET_PHOTO: {\n            return {...state, profile: {...state.profile, photos: action.photos} as ProfileType}\n        }\n        case SET_USER_FRIENDS: {\n            return {...state, userFriends: action.friends}\n        }\n        default:\n            return state;\n    }\n\n};\n\ntype ActionsTypes = ToggleFetchingType | SetStatusActionType | SetUserProfileActionType |\n    AddPostActionType | ClearProfileActionType | SetPhotoActionType | SetUserFriends |\n    FollowActionType | UnfollowActionType;\n\ntype SetUserFriends = {\n    type: typeof SET_USER_FRIENDS\n    friends: Array<UserType>\n}\n\nexport const setUserFriends = (friends: Array<UserType>):SetUserFriends => {\n    return {\n        type: SET_USER_FRIENDS,\n        friends\n    }\n};\n\ntype ToggleFetchingType = {\n    type: typeof TOGGLE_FETCHING\n    isProfileFetching: boolean\n}\n\nexport const toggleFetching = (isProfileFetching: boolean): ToggleFetchingType => {\n    return {\n        type: TOGGLE_FETCHING,\n        isProfileFetching: isProfileFetching\n    }\n};\n\ntype SetStatusActionType = {\n    type: typeof SET_STATUS\n    status: string\n}\n\nexport const setStatusAC = (status: string): SetStatusActionType => {\n    return {type: SET_STATUS, status}\n};\n\ntype SetUserProfileActionType = {\n    type: typeof SET_USER_PROFILE\n    profile: ProfileType|null\n}\n\nexport const setUserProfile = (profile: ProfileType|null): SetUserProfileActionType => {\n    return {type: SET_USER_PROFILE, profile}\n};\n\ntype AddPostActionType = {\n    type: typeof ADD_POST\n    post: string\n}\n\nexport const addPostActionCreator = (post: string): AddPostActionType => {\n    return {type: ADD_POST, post};\n};\n\ntype ClearProfileActionType = {\n    type: typeof CLEAR_PROFILE\n}\n\nexport const clearProfile = (): ClearProfileActionType => {\n    return {type: CLEAR_PROFILE};\n};\n\nexport type SetPhotoActionType = {\n    type: typeof SET_PHOTO\n    photos: PhotosType\n}\n\nexport const setPhoto = (photos: PhotosType): SetPhotoActionType => {\n    return {type: SET_PHOTO, photos}\n};\n\n\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionsTypes>\n\nexport const getUserProfile = (userId: number): ThunkType => async dispatch => {\n    dispatch(toggleFetching(true));\n    try {\n        const data: ProfileType = await ProfileAPI.getProfile(userId);\n        dispatch(setUserProfile(data));\n        dispatch(getUserStatus(userId));\n    } catch (e) {\n        console.error(e)\n    } finally {\n        dispatch(toggleFetching(false))\n    }\n};\n\nexport const getMyProfile = (): ThunkType => async dispatch => {\n    try {\n        dispatch(toggleFetching(true));\n        const data = await AuthAPI.AuthMe();\n        if (data.resultCode === resultCodes.Success) {\n            dispatch(getUserProfile(data.data.id));\n        } else dispatch(toggleFetching(false));\n    } catch (e) {\n        console.error(e)\n    }\n};\n\nexport const getUserStatus = (userId: number): ThunkType => async dispatch => {\n    try {\n        const data = await ProfileAPI.getStatus(userId);\n        dispatch(setStatusAC(data));\n    } catch (e) {\n        console.error(e)\n    }\n};\n\n\nexport const savePhoto = (file: File): ThunkType => async dispatch => {\n  try {\n     const data = await ProfileAPI.savePhoto(file);\n     dispatch(setPhoto(data.data.photos));\n  }  catch (e){\n      console.error(e)\n  }\n};\n\nexport const saveProfile = (data: DescriptionFormDataType): ThunkType => async dispatch => {\n    try{\n        const res = await ProfileAPI.saveProfile(data);\n        if (res.resultCode === resultCodes.Success)\n            return dispatch(getMyProfile());\n        const message = res.messages.length > 0 ? res.messages[0] : 'some error';\n        dispatch(stopSubmit('description', { _error: message }));\n    } catch (e) {\n        console.error(e)\n    }\n};\n\nexport default profileReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavBar\":\"NavBar_NavBar__3Uex_\",\"Item\":\"NavBar_Item__2SJE8\",\"active\":\"NavBar_active__3qbGS\"};","import React from 'react';\r\nimport styles from './Inputs.module.css';\r\nimport {WrappedFieldProps} from \"redux-form\";\r\n\r\nexport const CustomTextarea: React.FC<WrappedFieldProps> = ({input, meta, ...props}) => {\r\n\r\n    const hasError = meta.touched && meta.error;\r\n\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError? styles.error : '')}>\r\n            <div>\r\n                <textarea {...input} {...props}/>\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const CustomInput: React.FC<WrappedFieldProps>  = ({input, meta, ...props}) => {\r\n\r\n    const hasError = meta.touched && meta.error;\r\n\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError? styles.error : '')}>\r\n            <div>\r\n                <input {...input} {...props}/>\r\n            </div>\r\n            {hasError &&<span>{meta.error}</span>}\r\n        </div>\r\n    );\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport styles from './friend.module.css'\r\nimport userLogo from '../../../../Images/scalable-vector-graphics-avatar-learning-icon-customer-login-avatar.jpg'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\ntype PropsType = {\r\n    logoSrc: string | null\r\n    name: string\r\n    id: number\r\n}\r\n\r\nconst Friend: React.FC<PropsType> = (props) => {\r\n    return(\r\n        <div className={styles.friend}>\r\n            <NavLink to={`/profile/${props.id}`}>\r\n            <img src={props.logoSrc || userLogo} alt={''}/>\r\n            </NavLink>\r\n            <div className={styles.friendName}>{props.name}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Friend;","import React, {useEffect, useState} from 'react';\r\nimport styles from './sideBar.module.css';\r\nimport Friend from './friend/friend';\r\nimport {UserType} from \"../../../redux/reducers/users-reducer\";\r\nimport {Card} from \"antd\";\r\n\r\ntype PropsType = {\r\n    userFriends: Array<UserType>\r\n}\r\n\r\nconst SideBar: React.FC<PropsType> = (props) => {\r\n\r\n    const [shuffled, setShuffled] = useState(props.userFriends);\r\n\r\n    useEffect(()=>{\r\n\r\n        setShuffled(props.userFriends);\r\n\r\n        const interval = setInterval(()=> {\r\n            setShuffled([...props.userFriends].sort(() => 0.5 - Math.random()));\r\n        }, 20000);\r\n\r\n        return () => clearInterval(interval)\r\n\r\n    },[props.userFriends]);\r\n\r\n\r\n\r\n\r\n    return (<>\r\n            {!!shuffled.length &&\r\n            <div className={styles.sideBar}>\r\n                <Card>\r\n                <div className={styles.title}>Friends:</div>\r\n                <div className={styles.friendsList}>\r\n                    {shuffled.slice(0,5).map(friend => <Friend key={Math.random()} id={friend.id} name={friend.name}\r\n                                                         logoSrc={friend.photos.small}/>)}\r\n                </div>\r\n                </Card>\r\n            </div>}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SideBar;","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport SideBar from \"./sideBar\";\r\nimport {AppStateType} from \"../../../redux/redux-store\";\r\nimport {UserType} from \"../../../redux/reducers/users-reducer\";\r\n\r\n\r\ntype PropsType = MapStatePropsType;\r\ntype MapStatePropsType = {\r\n    userFriends: Array<UserType>\r\n}\r\n\r\nconst SideBarContainer: React.FC<PropsType> = (props) => {\r\n\r\n    return (\r\n        <SideBar userFriends={props.userFriends}/>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n   return {\r\n       userFriends : state.profilePage.userFriends\r\n   }\r\n};\r\n\r\nexport default connect<MapStatePropsType,{},{},AppStateType>(mapStateToProps)(SideBarContainer);\r\n\r\n","import React from 'react';\r\nimport styles from './NavBar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport SideBarContainer from \"./sideBar/sideBarContainer\";\r\nimport {Card} from \"antd\";\r\n\r\nconst NavBar = () => {\r\n    return (\r\n        <nav className={styles.NavBar}>\r\n            <Card hoverable bordered={false}>\r\n\r\n            <div className={styles.Item}>\r\n                <NavLink activeClassName={styles.active} to='/profile'>Profile</NavLink>\r\n            </div>\r\n            <div className={styles.Item}>\r\n                <NavLink activeClassName={styles.active} to='/dialogs'>Messages</NavLink>\r\n            </div>\r\n            <div className={styles.Item}>\r\n                <NavLink activeClassName={styles.active} to='/news'>News</NavLink>\r\n            </div>\r\n            <div className={styles.Item}>\r\n                <NavLink activeClassName={styles.active} to='/music'>Music</NavLink>\r\n            </div>\r\n            <div className={styles.Item}>\r\n                <NavLink activeClassName={styles.active} to='/avatar'>Avatar</NavLink>\r\n            </div>\r\n            <div className={styles.Item}>\r\n                <NavLink activeClassName={styles.active} to='/users'>Users</NavLink>\r\n            </div>\r\n\r\n            <SideBarContainer/>\r\n\r\n            </Card>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport styles from './Music.module.css';\r\nimport Wallpaper from \"../Wallpaper/Wallpaper\";\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>\r\n            <Wallpaper/>\r\n            <div>\r\n            Music\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Music;","import React from 'react';\r\nimport styles from './News.module.css';\r\nimport Wallpaper from \"../Wallpaper/Wallpaper\";\r\n\r\nconst News = () => {\r\n    return (\r\n        <div>\r\n            <Wallpaper/>\r\n            News\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default News;","import {Scrollbars} from 'react-custom-scrollbars';\r\nimport React, {useRef, useState} from \"react\"\r\nimport {Button, Col, Row, Tabs} from \"antd\"\r\nimport styles from \"./AvatarGenerator.module.css\"\r\nimport Avatar, {allOptions, OptionContext} from \"avataaars\"\r\nimport * as ReactDOM from \"react-dom\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {savePhoto} from \"../../../redux/reducers/profile-reducer\";\r\n\r\n\r\nconst {TabPane} = Tabs;\r\n\r\ntype PropsType = {\r\n    id: number | null\r\n}\r\n\r\nconst AvatarGenerator: React.FC<PropsType> = ({id}) => {\r\n    const avatarRef = useRef(null);\r\n    const [selectedStyle, setSelectedStyle] = useState({} as avatarType);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selectedIndex, setSelectedIndex] = useState(null);\r\n    const [avatarImageSrc, setAvatarImageSrc] = useState('');\r\n    const dispatch = useDispatch();\r\n    const optionsContext = useRef(new OptionContext(allOptions));\r\n    const tabNames = ['Hair', 'Accessories', 'Hat Color', 'Hair Color',\r\n        'Facial Hair', 'Facial Hair Color', 'Clothes', 'Clothes Color',\r\n        'Clothes Graphic', 'Eyes', 'Eyebrows', 'Mouth', 'Skin Color'];\r\n    const tabs = useRef(Array.from(optionsContext.current.options)\r\n        .map((option: any, index) => {\r\n            return {\r\n                key: option.key,\r\n                label: tabNames[index]\r\n            }\r\n        }));\r\n\r\n    type avatarType = {\r\n        avatarStyle?: string\r\n        topType?: string\r\n        accessoriesType?: string\r\n        hatColor?: string\r\n        hairColor?: string\r\n        facialHairType?: string\r\n        facialHairColor?: string\r\n        clotheType?: string\r\n        clotheColor?: string\r\n        eyeType?: string\r\n        eyebrowType?: string\r\n        mouthType?: string\r\n        skinColor?: string\r\n        graphicType?: string\r\n    }\r\n    const defaultAvatar = {\r\n        avatarStyle: 'Transparent',\r\n        accessoriesType: 'Blank',\r\n        topType: 'NoHair',\r\n        hairColor: 'Auburn',\r\n        facialHairType: 'Blank',\r\n        clotheType: 'ShirtScoopNeck',\r\n        clotheColor: 'Gray01',\r\n        eyeType: 'Default',\r\n        eyebrowType: 'Default',\r\n        mouthType: 'Default',\r\n        skinColor: 'Brown'\r\n    };\r\n\r\n    const currentAvatar = {...defaultAvatar, ...selectedStyle};\r\n\r\n    type avatarStylesType = typeof avatarStyles;\r\n    const avatarStyles = {\r\n        topType: [\r\n            \"NoHair\",\r\n            \"Eyepatch\",\r\n            \"Hat\",\r\n            \"Hijab\",\r\n            \"Turban\",\r\n            \"WinterHat1\",\r\n            \"WinterHat2\",\r\n            \"WinterHat3\",\r\n            \"WinterHat4\",\r\n            \"LongHairBigHair\",\r\n            \"LongHairBob\",\r\n            \"LongHairBun\",\r\n            \"LongHairCurly\",\r\n            \"LongHairCurvy\",\r\n            \"LongHairDreads\",\r\n            \"LongHairFrida\",\r\n            \"LongHairFro\",\r\n            \"LongHairFroBand\",\r\n            \"LongHairNotTooLong\",\r\n            \"LongHairShavedSides\",\r\n            \"LongHairMiaWallace\",\r\n            \"LongHairStraight\",\r\n            \"LongHairStraight2\",\r\n            \"LongHairStraightStrand\",\r\n            \"ShortHairDreads01\",\r\n            \"ShortHairDreads02\",\r\n            \"ShortHairFrizzle\",\r\n            \"ShortHairShaggyMullet\",\r\n            \"ShortHairShortCurly\",\r\n            \"ShortHairShortFlat\",\r\n            \"ShortHairShortRound\",\r\n            \"ShortHairShortWaved\",\r\n            \"ShortHairSides\",\r\n            \"ShortHairTheCaesar\",\r\n            \"ShortHairTheCaesarSidePart\"\r\n        ],\r\n        accessoriesType: [\r\n            \"Blank\",\r\n            \"Kurt\",\r\n            \"Prescription01\",\r\n            \"Prescription02\",\r\n            \"Round\",\r\n            \"Sunglasses\",\r\n            \"Wayfarers\"\r\n        ],\r\n        hatColor: [\r\n            \"Black\",\r\n            \"Blue01\",\r\n            \"Blue02\",\r\n            \"Blue03\",\r\n            \"Gray01\",\r\n            \"Gray02\",\r\n            \"Heather\",\r\n            \"PastelBlue\",\r\n            \"PastelGreen\",\r\n            \"PastelOrange\",\r\n            \"PastelRed\",\r\n            \"PastelYellow\",\r\n            \"Pink\",\r\n            \"Red\",\r\n            \"White\"\r\n        ],\r\n        hairColor: [\r\n            \"Auburn\",\r\n            \"Black\",\r\n            \"Blonde\",\r\n            \"BlondeGolden\",\r\n            \"Brown\",\r\n            \"BrownDark\",\r\n            \"PastelPink\",\r\n            \"Platinum\",\r\n            \"Red\",\r\n            \"SilverGray\"\r\n        ],\r\n        facialHairType: [\r\n            \"Blank\",\r\n            \"BeardMedium\",\r\n            \"BeardLight\",\r\n            \"BeardMajestic\",\r\n            \"MoustacheFancy\",\r\n            \"MoustacheMagnum\"\r\n        ],\r\n        facialHairColor: [\r\n            \"Auburn\",\r\n            \"Black\",\r\n            \"Blonde\",\r\n            \"BlondeGolden\",\r\n            \"Brown\",\r\n            \"BrownDark\",\r\n            \"Platinum\",\r\n            \"Red\"\r\n        ],\r\n        clotheType: [\r\n            \"BlazerShirt\",\r\n            \"BlazerSweater\",\r\n            \"CollarSweater\",\r\n            \"GraphicShirt\",\r\n            \"Hoodie\",\r\n            \"Overall\",\r\n            \"ShirtCrewNeck\",\r\n            \"ShirtScoopNeck\",\r\n            \"ShirtVNeck\"\r\n        ],\r\n        clotheColor: [\r\n            \"Black\",\r\n            \"Blue01\",\r\n            \"Blue02\",\r\n            \"Blue03\",\r\n            \"Gray01\",\r\n            \"Gray02\",\r\n            \"Heather\",\r\n            \"PastelBlue\",\r\n            \"PastelGreen\",\r\n            \"PastelOrange\",\r\n            \"PastelRed\",\r\n            \"PastelYellow\",\r\n            \"Pink\",\r\n            \"Red\",\r\n            \"White\"\r\n        ],\r\n        eyeType: [\r\n            \"Close\",\r\n            \"Cry\",\r\n            \"Default\",\r\n            \"Dizzy\",\r\n            \"EyeRoll\",\r\n            \"Happy\",\r\n            \"Hearts\",\r\n            \"Side\",\r\n            \"Squint\",\r\n            \"Surprised\",\r\n            \"Wink\",\r\n            \"WinkWacky\"\r\n        ],\r\n        eyebrowType: [\r\n            \"Angry\",\r\n            \"AngryNatural\",\r\n            \"Default\",\r\n            \"DefaultNatural\",\r\n            \"FlatNatural\",\r\n            \"RaisedExcited\",\r\n            \"RaisedExcitedNatural\",\r\n            \"SadConcerned\",\r\n            \"SadConcernedNatural\",\r\n            \"UnibrowNatural\",\r\n            \"UpDown\",\r\n            \"UpDownNatural\"\r\n        ],\r\n        mouthType: [\r\n            \"Concerned\",\r\n            \"Default\",\r\n            \"Disbelief\",\r\n            \"Eating\",\r\n            \"Grimace\",\r\n            \"Sad\",\r\n            \"ScreamOpen\",\r\n            \"Serious\",\r\n            \"Smile\",\r\n            \"Tongue\",\r\n            \"Twinkle\",\r\n            \"Vomit\"\r\n        ],\r\n        skinColor: [\r\n            \"Tanned\",\r\n            \"Yellow\",\r\n            \"Pale\",\r\n            \"Light\",\r\n            \"Brown\",\r\n            \"DarkBrown\",\r\n            \"Black\"\r\n        ],\r\n        graphicType: [\r\n            \"Bat\",\r\n            \"Cumbia\",\r\n            \"Deer\",\r\n            \"Diamond\",\r\n            \"Hola\",\r\n            \"Pizza\",\r\n            \"Resist\",\r\n            \"Selena\",\r\n            \"Bear\",\r\n            \"SkullOutline\",\r\n            \"Skull\"\r\n        ],\r\n    };\r\n\r\n\r\n    const selectFromKeys = (OptionKey: any) => {\r\n        for (let key in avatarStyles) {\r\n            if (OptionKey === key) {\r\n                // @ts-ignore\r\n                return avatarStyles[key];\r\n            }\r\n        }\r\n    };\r\n\r\n    // const dataURLtoFile = (dataurl: string, filename: string) => {\r\n    //\r\n    //     let arr = dataurl.split(',');\r\n    //     // @ts-ignore\r\n    //     let mime = arr[0].match(/:(.*?);/)[1],\r\n    //         bstr = atob(arr[1]),\r\n    //         n = bstr.length,\r\n    //         u8arr = new Uint8Array(n);\r\n    //\r\n    //     while(n--){\r\n    //         u8arr[n] = bstr.charCodeAt(n);\r\n    //     }\r\n    //\r\n    //     return new File([u8arr], filename, {type:mime});\r\n    // }\r\n\r\n    const avatarSaveHandler = () => {\r\n\r\n        if (!Object.keys(selectedStyle).length) return;\r\n\r\n        setLoading(true);\r\n\r\n        // @ts-ignore\r\n        const svgString = new XMLSerializer().serializeToString(ReactDOM.findDOMNode(avatarRef.current));\r\n        // const canvas = document.createElement(\"canvas\");\r\n        // // @ts-ignore\r\n        // canvas.height = Number(ReactDOM.findDOMNode(avatarRef.current).getAttribute('height').slice(0, -2));\r\n        // // @ts-ignore\r\n        // canvas.width = Number(ReactDOM.findDOMNode(avatarRef.current).getAttribute('width').slice(0, -2));\r\n        // const ctx = canvas.getContext(\"2d\");\r\n        // const DOMURL = window.URL || window.webkitURL || window;\r\n        // const img = new Image();\r\n        const svg = new Blob([svgString], {type: \"image/svg+xml;charset=utf-8\"});\r\n\r\n        const file = new File([svg], \"avatar.png\", {type: 'image/png'});\r\n        dispatch(savePhoto(file));\r\n\r\n        // const url = DOMURL.createObjectURL(svg);\r\n        // img.onload = function () {\r\n        //     ctx?.drawImage(img, 0, 0);\r\n        //     let png = canvas.toDataURL(\"image/jpeg\");\r\n        //     // const file = new File([png], 'avatar.png');\r\n        //     // debugger\r\n        //     // dispatch(savePhoto(file));\r\n        //     // const file = dataURLtoFile(png, 'avatar.png');\r\n        //     fetch(png)\r\n        //         .then(res => res.blob())\r\n        //         .then(blob => {\r\n        //             const file = new File([blob], \"avatar.jpeg\");\r\n        //             debugger\r\n        //             dispatch(savePhoto(file));\r\n        //         })\r\n        //\r\n        //     DOMURL.revokeObjectURL(png);\r\n        // };\r\n        // img.src = url;\r\n\r\n        setLoading(false);\r\n    };\r\n\r\n    const selectItem = (index: any, property: any) => {\r\n        setSelectedIndex(index);\r\n        setSelectedStyle({...selectedStyle, ...property});\r\n    }\r\n\r\n    const removeAvatar = () => {\r\n        setSelectedIndex(null);\r\n        setSelectedStyle({});\r\n    }\r\n\r\n    // @ts-ignore\r\n    const hairColorDisabled = selectedStyle.topType && ['Hat', \"LongHairFrida\", \"LongHairShavedSides\", 'WinterHat1', 'WinterHat2', 'WinterHat3',\r\n        'WinterHat4', 'NoHair', 'Eyepatch', 'Turban', 'Hijab'].includes(selectedStyle.topType);\r\n    const hatColorDisabled = !selectedStyle.topType || !(['WinterHat1', 'WinterHat2', 'WinterHat3', 'WinterHat4', 'Turban', 'Hijab'].includes(selectedStyle.topType));\r\n    const facialHairDisabled = 'Hijab' === selectedStyle.topType;\r\n    const facialHairColorDisabled = facialHairDisabled || !selectedStyle.facialHairType || !([\"BeardMedium\", \"BeardLight\", \"BeardMajestic\",\r\n        \"MoustacheFancy\", \"MoustacheMagnum\"].includes(selectedStyle.facialHairType));\r\n    const accessoriesDisabled = 'Eyepatch' === selectedStyle.topType;\r\n    const clothesColorDisabled = selectedStyle.clotheType && [\"BlazerShirt\", \"BlazerSweater\"].includes(selectedStyle.clotheType);\r\n    const graphicDisabled = !(\"GraphicShirt\" === selectedStyle.clotheType);\r\n\r\n    return (\r\n        <Row gutter={10} justify=\"center\" style={{height: 765}} className={styles.avatarGenerator}>\r\n            <Col className={styles.presentationCol} xs={22} sm={18} md={8}>\r\n                <div className={styles.avatarPresentation}>\r\n                    <h2>Create your own Avatar</h2>\r\n                    <div className={styles.avatarFull}>\r\n                        <Avatar ref={avatarRef} {...currentAvatar} avatarStyle={'Circle'}\r\n                                style={{width: '305px', height: '324px'}}/>\r\n                    </div>\r\n\r\n                    <div className={styles.avatarControl}>\r\n                        <Button\r\n                            disabled={!Boolean(id && Object.keys(selectedStyle).length)}\r\n                            loading={loading}\r\n                            onClick={avatarSaveHandler}\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\">\r\n                            Set as profile picture!\r\n                        </Button>\r\n                        <Button type=\"primary\" onClick={removeAvatar}>\r\n                            Remove Avatar\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </Col>\r\n            <Col className=\"gutter-row\" xs={22} sm={16} md={16}>\r\n                <div className={styles.avatarGeneration}>\r\n                    <Tabs tabBarGutter={0} className={styles.tabs} defaultActiveKey=\"topType\" style={{height: '100%'}}\r\n                          animated={true} >\r\n                        {tabs.current.map(tab => {\r\n\r\n                            const disabledTabs = (graphicDisabled && tab.key === 'graphicType') ||\r\n                                (clothesColorDisabled && tab.key === 'clotheColor') || (accessoriesDisabled && tab.key === 'accessoriesType') ||\r\n                                (facialHairColorDisabled && tab.key === 'facialHairColor') || (hairColorDisabled && tab.key === 'hairColor') ||\r\n                                (hatColorDisabled && tab.key === 'hatColor') || (facialHairDisabled && tab.key === 'facialHairType');\r\n\r\n                            return (\r\n\r\n                                <TabPane disabled={disabledTabs} tab={tab.label} key={tab.key}>\r\n                                    <Scrollbars\r\n                                        autoHeight\r\n                                        autoHeightMax={640}\r\n                                        className=\"scrollbar\"\r\n                                        renderTrackHorizontal={(props :any) => <div {...props} className=\"track-horizontal\"\r\n                                                                             style={{display: \"none\"}}/>}\r\n                                        renderThumbHorizontal={(props :any) => <div {...props} className=\"thumb-horizontal\"\r\n                                                                             style={{display: \"none\"}}/>}\r\n                                        hideTracksWhenNotNeeded={true}>\r\n                                        <Row style={{height: \"100%\"}}>\r\n                                            {\r\n                                                selectFromKeys(tab.key).map((item:any, index:any) => (\r\n                                                    <Col xs={24}\r\n                                                         sm={12}\r\n                                                         md={8}\r\n                                                         lg={6} style={{height: '30%'}} key={index}>\r\n                                                        <div onClick={() => selectItem(index, {[tab.key]: item})}\r\n                                                             className={[styles.avatarSelect, index === selectedIndex ? styles.selected : ''].join(' ')}>\r\n                                                            <Avatar {...{...currentAvatar, [tab.key]: item}}\r\n                                                                    style={{height: '100%'}}/>\r\n                                                        </div>\r\n                                                    </Col>\r\n                                                ))}\r\n                                        </Row>\r\n                                    </Scrollbars>\r\n                                </TabPane>\r\n                            )\r\n                        })}\r\n\r\n                    </Tabs>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default AvatarGenerator","import * as React from 'react';\r\nimport AvatarGenerator from \"../common/AvatarGenerator/AvatarGenerator\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\n\r\n\r\nconst CreateAvatar = () => {\r\n\r\n    const id = useSelector((state: AppStateType) => state.auth.id);\r\n\r\n    return (\r\n        <>\r\n           <AvatarGenerator id={id}/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CreateAvatar;","import React from 'react';\r\nimport styles from './User.module.css';\r\nimport userLogo from '../../../Images/scalable-vector-graphics-avatar-learning-icon-customer-login-avatar.jpg'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Button, Card, Row} from \"antd\";\r\nimport {UserType} from \"../../../redux/reducers/users-reducer\";\r\n\r\n\r\ntype PropsType = {\r\n    followingInProgress: Array<number>\r\n    follow: (user: UserType) => void\r\n    unfollow: (user: UserType) => void\r\n    currentAuthUserId: null|number\r\n    user: UserType\r\n}\r\n\r\nconst User: React.FC<PropsType> = (props) => {\r\n    return (\r\n\r\n        <Card bodyStyle={{height: '280px'}} bordered={false} hoverable>\r\n            <Row style={{height: '180px'}}>\r\n            <div className={styles.logo}>\r\n                <NavLink to={`/profile/${props.user.id}`}>\r\n                  <img src={props.user.photos.large || userLogo} alt={''}/>\r\n                 </NavLink>\r\n                 </div>\r\n            </Row>\r\n            <Row justify='center' align='middle'>\r\n                <div className={styles.userName}>\r\n                    <b>{props.user.name}</b>\r\n             </div>\r\n            </Row>\r\n             {props.currentAuthUserId &&\r\n            <div className={styles.followButtonContainer}>\r\n              <Button disabled={props.followingInProgress.some(id => id === props.user.id)}\r\n                       onClick={() => {\r\n                          props[props.user.followed ? 'unfollow' : 'follow'](props.user)\r\n                       }}>{props.user.followed ? 'Unfollow' : 'Follow'}</Button>\r\n              </div>}\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default User;","import React from 'react';\r\nimport {UserType} from '../../redux/reducers/users-reducer';\r\nimport User from \"./User/User\";\r\nimport styles from './users.module.css';\r\n\r\n\r\ntype PropsType = {\r\n    users: Array<UserType>\r\n    follow: (user: UserType) => void\r\n    unfollow: (user: UserType) => void\r\n    followingInProgress: Array<number>\r\n    currentAuthUserId: null | number\r\n}\r\n\r\nconst Users: React.FC<PropsType> = (props) => {\r\n\r\n    return (\r\n        <>\r\n            {!!props.users.length &&\r\n            <div className={styles.usersContainer}>\r\n                {props.users.map(user => (\r\n                    <User key={user.id}\r\n                          follow={props.follow}\r\n                          unfollow={props.unfollow}\r\n                          user={user}\r\n                          followingInProgress={props.followingInProgress}\r\n                          currentAuthUserId={props.currentAuthUserId}/>))}\r\n            </div>}\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default Users;","import {Button, Input} from \"antd\";\r\nimport React, {ChangeEvent, useEffect, useState} from \"react\";\r\nimport styles from './SearchUsers.module.css'\r\nimport useDebouncedCallback from \"use-debounce/lib/useDebouncedCallback\";\r\nimport {Spin} from 'antd';\r\nimport {LoadingOutlined} from '@ant-design/icons';\r\nimport {SearchOptionsType} from \"../UsersContainer\";\r\n\r\ntype PropsType = {\r\n    setSearchOptions: (value: SearchOptionsType) => void\r\n    searchOptions: SearchOptionsType\r\n    isFetching: boolean\r\n}\r\n\r\nexport const SearchUsers: React.FC<PropsType> = (props) => {\r\n\r\n    const [inputValue, setInputValue] = useState(props.searchOptions.term);\r\n\r\n    useEffect(() => {\r\n        setInputValue(props.searchOptions.term);\r\n    }, [props.searchOptions.term]);\r\n\r\n    const onSearch = () => {\r\n        props.setSearchOptions({...props.searchOptions, term: inputValue, page: 1});\r\n    };\r\n\r\n    const debounced = useDebouncedCallback(onSearch, 1000);\r\n\r\n    const onInputChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setInputValue(e.target.value);\r\n        debounced.callback();\r\n    };\r\n\r\n    const onSearchAll = () => {\r\n        props.setSearchOptions({...props.searchOptions, term: '', page: 1});\r\n    };\r\n\r\n    const disabled = props.searchOptions.page === 1 && !inputValue;\r\n\r\n    return (\r\n        <>\r\n            <div className={styles.searchInputContainer} >\r\n\r\n                {props.isFetching && <div className={styles.spiner}>\r\n                    <Spin indicator={<LoadingOutlined style={{fontSize: 24}} spin/>}/>\r\n                </div>}\r\n\r\n                <Input placeholder='search users here...' value={inputValue}\r\n                       onChange={onInputChange}/>\r\n                <Button type='primary' disabled={disabled} onClick={onSearchAll}>Clear filters</Button>\r\n            </div>\r\n        </>\r\n    );\r\n};","import React, {useCallback, useEffect, useState} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Users from \"./Users\";\r\nimport {\r\n    follow, getUsers,\r\n    unfollow, UserType\r\n} from \"../../redux/reducers/users-reducer\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {SearchUsers} from \"./SearchUsers/SearchUsers\";\r\nimport styles from './users.module.css'\r\nimport {Pagination} from \"antd\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport * as queryString from \"querystring\";\r\n\r\ntype MapStatePropsType = {\r\n    totalUsersCount: number\r\n    users: Array<UserType>\r\n    followingInProgress: Array<number>\r\n    isFetching: boolean\r\n    currentAuthUserId: null | number\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    follow: (user: UserType) => void\r\n    unfollow: (user: UserType) => void\r\n    getUsers: (currentPage: number, pageSize: number, friend?: boolean, term?: string) => void\r\n}\r\n\r\ntype QueryType = {\r\n    term?: string\r\n    page?: string | number\r\n    pageSize?: string | number\r\n    friend?: string\r\n}\r\n\r\nexport type SearchOptionsType = {\r\n    term: string\r\n    pageSize: number\r\n    page: number\r\n}\r\n\r\ntype PropsType = MapDispatchPropsType & MapStatePropsType;\r\n\r\nconst UsersContainer: React.FC<PropsType> = (props) => {\r\n\r\n    const [searchOptions, setSearchOptions] = useState({term:'', pageSize: 16, page: 1});\r\n    const history = useHistory();\r\n\r\n    useEffect(()=> {\r\n        const parsedQuery: QueryType = queryString.parse(history.location.search.substr(1));\r\n\r\n        if (parsedQuery.page) parsedQuery.page = +parsedQuery.page;\r\n        if (parsedQuery.pageSize) parsedQuery.pageSize = +parsedQuery.pageSize;\r\n\r\n        setSearchOptions({...searchOptions, ...parsedQuery as SearchOptionsType});\r\n\r\n    },[history.location.search]);\r\n\r\n    useEffect(() => {\r\n        const querySearch: QueryType = {};\r\n        if (!!searchOptions.term) {querySearch.term = searchOptions.term}\r\n        if (searchOptions.page !== 1) querySearch.page = String(searchOptions.page);\r\n        if (searchOptions.pageSize !== 16) querySearch.pageSize = String(searchOptions.pageSize);\r\n\r\n        history.push({\r\n            pathname: '/users',\r\n            search: queryString.stringify(querySearch)\r\n        });\r\n\r\n        props.getUsers(searchOptions.page,searchOptions.pageSize, false, searchOptions.term);\r\n    }, [searchOptions]);\r\n\r\n    const onPageChange = (page: number, pageSize?: number) => {\r\n        page !== 0 && pageSize &&\r\n        setSearchOptions({...searchOptions, page: page, pageSize: pageSize});\r\n        window.scrollTo({top: 0, behavior: 'smooth'});\r\n    };\r\n\r\n    const onSizeChange = (currentPage: number, size: number) => {\r\n        setSearchOptions({...searchOptions, pageSize: size});\r\n    };\r\n\r\n    const setSearchOptionsCallback = useCallback((value) => setSearchOptions(value), [setSearchOptions]);\r\n\r\n    return (\r\n        <>\r\n            <SearchUsers isFetching={props.isFetching} searchOptions={searchOptions} setSearchOptions={setSearchOptionsCallback}/>\r\n\r\n            <Users users={props.users}\r\n                   follow={props.follow}\r\n                   unfollow={props.unfollow}\r\n                   followingInProgress={props.followingInProgress}\r\n                   currentAuthUserId={props.currentAuthUserId}/>\r\n\r\n            <div className={styles.paginator}>\r\n                <Pagination size=\"small\" total={props.totalUsersCount}\r\n                            current={searchOptions.page}\r\n                            onChange={onPageChange} pageSizeOptions={['16', '32', '64']}\r\n                            pageSize={searchOptions.pageSize}\r\n                            defaultCurrent={searchOptions.page}\r\n                            onShowSizeChange={onSizeChange}\r\n                            hideOnSinglePage showSizeChanger showQuickJumper/>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress,\r\n        currentAuthUserId: state.auth.id\r\n    }\r\n\r\n};\r\n\r\nconst mapDispatchToProps: MapDispatchPropsType = {\r\n    follow,\r\n    unfollow,\r\n    getUsers\r\n};\r\n\r\nexport default connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>(mapStateToProps,\r\n    mapDispatchToProps)(UsersContainer);","import React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport {ProfileAPI} from \"../../../API/ProfileAPI\";\r\nimport {Card} from \"antd\";\r\n\r\ntype PropsType = {\r\n    status: string\r\n}\r\n\r\nconst Status: React.FC<PropsType> = (props) => {\r\n\r\n    const [status, setStatus] = useState(props.status);\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const enterToEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    const closeEditMode = () => {\r\n        setEditMode(false);\r\n        ProfileAPI.setStatus(status);\r\n    };\r\n\r\n    const statusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.target.value);\r\n    };\r\n\r\n\r\n    return (\r\n        <Card bodyStyle={{padding: '3px'}} hoverable>\r\n            {editMode ?\r\n                <input autoFocus={ true } onBlur={ closeEditMode } onChange={ statusChange } value={ status }/> :\r\n                <span onDoubleClick={ enterToEditMode }> {status ? status : 'Here can be your status (double click)'} </span>}\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default Status;","import React from 'react';\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport styles from './DescriptionForm.module.css';\r\nimport {CustomInput, CustomTextarea} from \"../../common/customElements/Inputs\";\r\nimport {required} from \"../../../utils/validators\";\r\nimport {ProfileContactsType} from \"../../../redux/reducers/auth-reducer\";\r\n\r\nexport type DescriptionFormDataType = {\r\n    fullName: string\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    aboutMe: string\r\n    contacts: ProfileContactsType\r\n}\r\n\r\nconst DescriptionForm: React.FC<InjectedFormProps<DescriptionFormDataType,{}>> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={styles.form}>\r\n            <div>\r\n                <Field name={'fullName'} component={CustomInput} validate={[required]} placeholder={'Full name'}/>\r\n            </div>\r\n            <div>\r\n                Looking for a job <Field name={'lookingForAJob'} component={'input'} type={'checkbox'}/>\r\n            </div>\r\n            <div>\r\n                <Field name={'lookingForAJobDescription'} component={CustomTextarea} validate={[required]} placeholder={'My skills'}/>\r\n            </div>\r\n            <div>\r\n                <Field name={'aboutMe'} component={CustomTextarea} validate={[required]} placeholder={'about me'}/>\r\n            </div>\r\n            <div>\r\n                <Field name={'contacts.facebook'} component={CustomInput} placeholder={'facebook'}/>\r\n            </div>\r\n            <div>\r\n                <Field name={'contacts.vk'} component={CustomInput} placeholder={'vk'}/>\r\n            </div>\r\n            <div>\r\n                <Field name={'contacts.instagram'} component={CustomInput} placeholder={'instagram'}/>\r\n            </div>\r\n            <div>\r\n                <Field name={'contacts.github'} component={CustomInput} placeholder={'github'}/>\r\n            </div>\r\n            <div>\r\n                <Field name={'contacts.website'} component={CustomInput} placeholder={'website'}/>\r\n            </div>\r\n            <div>\r\n                <Field name={'contacts.twitter'} component={CustomInput} placeholder={'twitter'}/>\r\n            </div>\r\n            <div>\r\n                <Field name={'contacts.youtube'} component={CustomInput} placeholder={'youtube'}/>\r\n            </div>\r\n            <div>\r\n                <Field name={'contacts.mainLink'} component={CustomInput} placeholder={'link'}/>\r\n            </div>\r\n            <div>\r\n                <button>save</button>\r\n            </div>\r\n            <div className={styles.error}>\r\n            {props.error}\r\n            </div>\r\n        </form>\r\n\r\n    );\r\n};\r\n\r\nexport default reduxForm<DescriptionFormDataType, {}>({form: 'description'})(DescriptionForm);","import styles from \"./Profile-Info.module.css\";\r\nimport React from \"react\";\r\nimport {ProfileType} from \"../../../redux/reducers/auth-reducer\";\r\n\r\ntype PropsType = {\r\n    profile: ProfileType\r\n}\r\n\r\nconst Description: React.FC<PropsType> = (props) => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <h2>{props.profile.fullName}</h2>\r\n            </div>\r\n            <div className={styles.about}>\r\n                <div>\r\n                    <b>Looking for a job:</b> {props.profile.lookingForAJob ? 'yes' : 'no'}\r\n                </div>\r\n                <div>\r\n                    <b>My skills:</b> {props.profile.lookingForAJobDescription}\r\n                </div>\r\n                <div>\r\n                    <b>About me:</b> {props.profile.aboutMe}\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <hr/>\r\n                <b>CONTACTS:</b>\r\n            </div>\r\n            <div className={styles.contacts}>\r\n                {!!props.profile.contacts && Object.keys(props.profile.contacts).map(key => <Contacts title={key}\r\n                                                                          value={props.profile.contacts[key]}\r\n                                                                          key={key}/>)}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\ntype ContactsPropsType = {\r\n    title: string\r\n    value: string\r\n}\r\n\r\nconst Contacts: React.FC<ContactsPropsType> = (props) => {\r\n    return (\r\n        <div><b>{props.title}</b> : {props.value}</div>\r\n    );\r\n};\r\n\r\nexport default Description;","import React, {useState} from 'react';\r\nimport styles from './Profile-Info.module.css';\r\nimport Status from \"./Status\";\r\nimport userLogo from '../../../Images/scalable-vector-graphics-avatar-learning-icon-customer-login-avatar.jpg'\r\nimport DescriptionForm, {DescriptionFormDataType} from \"./DescriptionForm\";\r\nimport Description from \"./Description\";\r\nimport {ProfileType} from \"../../../redux/reducers/auth-reducer\";\r\nimport {Button, Card, Col, Row, Upload} from \"antd\";\r\nimport {UploadOutlined} from '@ant-design/icons';\r\n\r\ntype PropsType = {\r\n    savePhoto: (file: any) => void\r\n    saveProfile: (profile: DescriptionFormDataType) => void\r\n    profile: ProfileType\r\n    isMyProfile: boolean\r\n    status: string\r\n}\r\n\r\nconst ProfileInfo: React.FC<PropsType> = (props) => {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    const enterEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    const uploadPhoto = (file: File) => {\r\n        props.savePhoto(file);\r\n        return false;\r\n    };\r\n\r\n    const onSubmit = (data: DescriptionFormDataType) => {\r\n        props.saveProfile(data);\r\n    };\r\n\r\n\r\n    return (\r\n        <Row justify='center'>\r\n            <Col span={6}>\r\n                <div className={styles.Avatar}>\r\n                    <img src={props.profile.photos.large || userLogo} alt={''}/>\r\n\r\n                    {props.isMyProfile &&\r\n                    <div style={{width:'200px', textAlign: 'center'}} >\r\n                        <Upload showUploadList={false} beforeUpload={ uploadPhoto }>\r\n                            <Button icon={<UploadOutlined/>}>Click to Upload</Button>\r\n                        </Upload>\r\n                    </div>}\r\n\r\n                    <div className={styles.status}>\r\n                        <Status status={props.status}/>\r\n                    </div>\r\n                </div>\r\n            </Col>\r\n\r\n            <Col span={16}>\r\n                <Card hoverable>\r\n                    {props.isMyProfile && !editMode &&\r\n                    <Button className={styles.editButton} onClick={enterEditMode}>Edit</Button>}\r\n                    {editMode ? <DescriptionForm onSubmit={onSubmit} initialValues={props.profile}/> :\r\n                        <Description profile={props.profile}/>}\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport styles from './Post.module.css';\r\nimport userLogo from '../../../../Images/scalable-vector-graphics-avatar-learning-icon-customer-login-avatar.jpg'\r\nimport like from '../../../../Images/like.png'\r\n\r\n\r\ntype PropsType = {\r\n    message: string\r\n    likesCount: number\r\n    avatar: string|null\r\n}\r\n\r\nconst Post: React.FC<PropsType> = (props) => {\r\n    return (\r\n        <div className={styles.Post}>\r\n            <div className={styles.avatar}>\r\n                <img src={props.avatar || userLogo} alt={''}/>\r\n            </div>\r\n            <div className={styles.Message}>\r\n                {props.message}\r\n            </div>\r\n            <div className={styles.Like}>\r\n                <img src={like} alt={''} className={styles.heart}/> {props.likesCount}\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default Post;","import React, {ChangeEvent, useState} from 'react';\r\nimport {Button, Input} from 'antd';\r\nimport styles from './AddPost.module.css'\r\nimport addPostBack from '../../../../Images/addPostBack.png'\r\n\r\nconst { TextArea } = Input;\r\n\r\ntype PropsType = {\r\n    addPost: (post: string) => void\r\n}\r\n\r\nconst AddPost: React.FC<PropsType> = (props) => {\r\n\r\n    const [newPost, setNewPost] = useState('');\r\n\r\n    const onPostChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        setNewPost(e.target.value);\r\n    };\r\n\r\n    const onAddPost = () => {\r\n        if (newPost === '') return;\r\n        props.addPost(newPost);\r\n        setNewPost('');\r\n    };\r\n\r\n    return (\r\n        <div className={styles.addPostContainer}>\r\n            <img src={addPostBack} alt={''} className={styles.addPostBack}/>\r\n        <TextArea\r\n            value={newPost}\r\n            onChange={ onPostChange }\r\n            placeholder=\"Share something with your friends...\"\r\n            autoSize={{ minRows: 3, maxRows: 5 }}\r\n        />\r\n            <Button onClick={ onAddPost }>Add post</Button>\r\n            </div>\r\n\r\n    );\r\n};\r\n\r\nexport default AddPost;","import React from 'react';\r\nimport styles from './Posts.module.css';\r\nimport Post from './Post/Post'\r\nimport AddPost from \"./AddPost/AddPost\";\r\nimport {PostType} from \"../../../redux/reducers/profile-reducer\";\r\n\r\ntype PropsType = {\r\n    addPost: (post: string) => void\r\n    postData: Array<PostType>\r\n    isMyProfile: boolean\r\n    profileFullName: string\r\n    avatar: string|null\r\n}\r\n\r\nconst Posts: React.FC<PropsType> = (props) => {\r\n\r\n    const postElements = props.postData.map(post => <Post avatar={props.avatar} message={post.post} likesCount={post.likesCount}\r\n                                                          key={post.id}/>);\r\n\r\n    return (\r\n        <div className={styles.Posts}>\r\n            {props.isMyProfile && <AddPost addPost={props.addPost}/>}\r\n            <div>\r\n                <div className={styles.title}>\r\n                    {props.isMyProfile? <b>My posts</b> : <b>{props.profileFullName}'s posts</b>}\r\n                    </div>\r\n                {postElements}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Posts;","import React, {useCallback} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Posts from \"./Posts\";\r\nimport {addPostActionCreator, PostType} from \"../../../redux/reducers/profile-reducer\";\r\nimport {AppStateType} from \"../../../redux/redux-store\";\r\n\r\ntype PropsType = {\r\n    isMyProfile: boolean\r\n    profileFullName: string\r\n}\r\n\r\nconst PostsContainer: React.FC<PropsType> = (props) => {\r\n\r\n    const postData: Array<PostType> = useSelector((state: AppStateType) => state.profilePage.postData);\r\n    const avatar = useSelector((state: AppStateType) => state.profilePage.profile && state.profilePage.profile.photos.small);\r\n    const dispatch = useDispatch();\r\n    const addPost = useCallback((post) => dispatch(addPostActionCreator(post)), [dispatch]);\r\n\r\n    return (\r\n        <Posts avatar={avatar} isMyProfile={props.isMyProfile} addPost={addPost}\r\n               postData={postData} profileFullName={props.profileFullName}/>\r\n    )\r\n};\r\n\r\nexport default PostsContainer;\r\n","import preloader from \"../../../Images/91.svg\";\r\nimport styles from './Preloader.module.css';\r\nimport React from \"react\";\r\n\r\ntype PropsType = {\r\n    className?: string\r\n}\r\n\r\nconst Preloader: React.FC<PropsType> = (props) => {\r\n    return (\r\n        <div><img src={preloader} alt={'Loading...'} className={props.className && styles[props.className]}/></div>\r\n    );\r\n};\r\n\r\nexport default Preloader;","import React from 'react';\r\nimport styles from './Profile.module.css';\r\nimport ProfileInfo from \"./Profile-info/Profile-info\";\r\nimport PostsContainer from \"./Posts/PostsContainer\";\r\nimport {ProfileType} from \"../../redux/reducers/auth-reducer\";\r\nimport {DescriptionFormDataType} from \"./Profile-info/DescriptionForm\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\ntype PropsType = {\r\n    profile: ProfileType\r\n    status: string\r\n    isMyProfile: boolean\r\n    savePhoto: (file: any) => void\r\n    saveProfile: (profile: DescriptionFormDataType) => void\r\n    isFetching: boolean\r\n}\r\n\r\nconst Profile: React.FC<PropsType> = (props) => {\r\n    return (\r\n        <div className={styles.Profile}>\r\n            {props.isFetching ? <Preloader/> :\r\n                <>\r\n                <ProfileInfo profile={props.profile}\r\n                             status={props.status}\r\n                             isMyProfile={props.isMyProfile}\r\n                             savePhoto={props.savePhoto}\r\n                             saveProfile={props.saveProfile}/>\r\n            <PostsContainer isMyProfile={props.isMyProfile} profileFullName={props.profile.fullName}/>\r\n          </>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import React, {useEffect} from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    clearProfile,\r\n    getMyProfile,\r\n    getUserProfile,\r\n    getUserStatus,\r\n    savePhoto, saveProfile\r\n} from \"../../redux/reducers/profile-reducer\";\r\nimport {NavLink, RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {ProfileType} from \"../../redux/reducers/auth-reducer\";\r\nimport {DescriptionFormDataType} from \"./Profile-info/DescriptionForm\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport Lottie from 'react-lottie';\r\nimport userAvatar from '../../lotties/userAvatar.json'\r\nimport {Col, Row} from \"antd\";\r\nimport styles from './Profile.module.css'\r\n\r\ntype MapstatePropsType = {\r\n    profile: ProfileType | null\r\n    status: string\r\n    isProfileFetching: boolean\r\n    isFetching: boolean\r\n    id: number | null\r\n}\r\ntype MapDispatchPropsType = {\r\n    getUserProfile: (id: number) => void\r\n    getMyProfile: () => void\r\n    getUserStatus: (id: number) => void\r\n    clearProfile: () => void\r\n    savePhoto: (file: any) => void\r\n    saveProfile: (profile: DescriptionFormDataType) => void\r\n}\r\ntype UrlParamsType = {\r\n    userId: string | undefined\r\n}\r\ntype PropsType = MapstatePropsType & MapDispatchPropsType & RouteComponentProps<UrlParamsType>;\r\n\r\n\r\nconst ProfileContainer: React.FC<PropsType> = (props) => {\r\n\r\n    const lottieOptions = {\r\n        autoplay: true,\r\n        animationData: userAvatar\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!props.match.params.userId) {\r\n            !props.id && props.clearProfile();\r\n            props.getMyProfile();\r\n        } else {\r\n            let userId = props.match.params.userId;\r\n            props.getUserProfile(Number(userId));\r\n        }\r\n    }, [props.match.params.userId]);\r\n\r\n    if (!props.id && !props.match.params.userId) {\r\n        return (\r\n            <>\r\n                {props.isProfileFetching || props.isFetching ? <Preloader/> :\r\n                    <Row justify='center' align={'middle'} style={{height: '100%'}}>\r\n                        <Col span={16}>\r\n                            <div className={styles.container}>\r\n                                <h1>Please <NavLink to='/login'><b>Log In</b></NavLink></h1>\r\n                                    <Lottie options={lottieOptions} width={300} height={300}></Lottie>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                }\r\n            </>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {props.profile && !props.isProfileFetching ? <Profile profile={props.profile} status={props.status}\r\n                     isFetching={props.isProfileFetching} isMyProfile={!props.match.params.userId}\r\n                     savePhoto={props.savePhoto}\r\n                     saveProfile={props.saveProfile}/> : <Preloader/>}\r\n        </>\r\n    );\r\n\r\n};\r\n\r\n\r\nlet mapStateToProps = (state: AppStateType): MapstatePropsType => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        isProfileFetching: state.profilePage.isProfileFetching,\r\n        isFetching: state.auth.isFetching,\r\n        id: state.auth.id\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps: MapDispatchPropsType = {\r\n    getUserProfile,\r\n    getMyProfile,\r\n    getUserStatus,\r\n    clearProfile,\r\n    savePhoto,\r\n    saveProfile\r\n};\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect<MapstatePropsType, MapDispatchPropsType, {}, AppStateType>(mapStateToProps, mapDispatchToProps),\r\n    withRouter\r\n)(ProfileContainer);","import React from 'react';\nimport styles from './Head.module.css';\nimport Preloader from \"../common/Preloader/Preloader\";\nimport {NavLink} from \"react-router-dom\";\nimport avatar from '../../Images/scalable-vector-graphics-avatar-learning-icon-customer-login-avatar.jpg';\nimport {InitialAuthStateType, ProfileType} from \"../../redux/reducers/auth-reducer\";\nimport {Button} from \"antd\";\n\ntype PropsType = {\n    auth: InitialAuthStateType\n    logout: () => void\n    setUserProfile: (profile: ProfileType|null) => void\n}\n\nconst Header: React.FC<PropsType> = (props) => {\n\n    const logoutClick = () => {\n       props.logout();\n       props.setUserProfile(null);\n    };\n\n    return (\n        <header className={styles.Header}>\n            <img src='https://assets.awwwards.com/awards/images/2011/12/typeandlogo-11.jpg' alt={''}/>\n            <div className={styles.auth}>\n                {props.auth.isFetching ? <Preloader className={'preloader'}/> : props.auth.id ?\n                    <div className={styles.loginBlock}>\n                        <div className={styles.avatar}>\n                            <img src={props.auth.logoSrc ? props.auth.logoSrc : avatar} alt={''}/>\n                        </div>\n                        <div>\n                            <Button type={'link'} onClick={ logoutClick }><b>Log out</b></Button>\n                        </div>\n                        <b>\n                            {props.auth.login}\n                        </b>\n                    </div>\n                    :\n                    <NavLink to={'/login'}>\n                        <b>Log In</b>\n                    </NavLink>}\n            </div>\n        </header>\n    );\n};\n\nexport default Header;","import React from 'react';\r\nimport Header from \"./Head\";\r\nimport {connect} from \"react-redux\";\r\nimport {InitialAuthStateType, logout, ProfileType} from \"../../redux/reducers/auth-reducer\";\r\nimport {setUserProfile} from \"../../redux/reducers/profile-reducer\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\n\r\ntype MapStatePropsType = {\r\n    auth: InitialAuthStateType\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    logout: () => void\r\n    setUserProfile: (profile: ProfileType|null) => void\r\n}\r\n\r\ntype PropsType = MapStatePropsType & MapDispatchPropsType;\r\n\r\nconst HeaderContainer: React.FC<PropsType> = (props) => {\r\n        return (\r\n            <Header {...props}/>\r\n        );\r\n    };\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        auth: state.auth\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps: MapDispatchPropsType = {\r\n    logout,\r\n    setUserProfile\r\n};\r\n\r\nexport default connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>(mapStateToProps, mapDispatchToProps)(HeaderContainer);","import {authMe, SET_USER_AUTH_DATA, SetUserAuthDataType} from './auth-reducer';\nimport {AnyAction} from \"redux\";\nimport {ThunkAction} from \"redux-thunk\";\nimport {AppStateType} from \"../redux-store\";\n\n\ntype InitialSatateType = {\n    initialized: boolean\n}\n\nconst initialState = {\n  initialized : false\n};\n\n\nconst appReducer = (state = initialState, action: SetUserAuthDataType):InitialSatateType => {\n\n    switch (action.type) {\n        case SET_USER_AUTH_DATA:\n            return {...state, initialized: true};\n        default:\n            return state;\n    }\n};\n\n\nexport const initializeApp = (): ThunkAction< void, AppStateType, unknown, AnyAction> => dispatch => {\n    dispatch(authMe());\n};\n\n\nexport default appReducer;","import React from 'react';\r\nimport Preloader from \"../components/common/Preloader/Preloader\";\r\n\r\nexport const withSuspense = (Component: React.FC) => {\r\n    return (props: any) => {\r\n        return <React.Suspense fallback={<Preloader/>}><Component {...props}/></React.Suspense>\r\n    }\r\n};","import React from 'react';\r\nimport {Col, Row} from \"antd\";\r\nimport styles from './StartPage.module.css'\r\n\r\nconst StartPage = () => {\r\n    return (\r\n        <Row justify='center' align={'middle'} style={{height: '100%'}}>\r\n            <Col span={16}>\r\n                <div className={styles.container}>\r\n                        <h1>Hi there!</h1>\r\n                    <p>This App is still in progress, and unfortunately you can't try\r\n                        all functionality because of authorisation, but if you are\r\n                    interested - you still can check the code !)</p>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default StartPage;","import React, {useEffect} from 'react';\nimport './App.css';\nimport NavBar from \"./components/NavBar/NavBar\";\nimport Music from './components/Music/Music';\nimport News from './components/News/News';\nimport CreateAvatar from './components/CreateAvatar/CreateAvatar';\nimport {BrowserRouter, HashRouter, Route, Switch} from \"react-router-dom\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeadContainer\";\nimport {connect} from \"react-redux\";\nimport {initializeApp} from \"./redux/reducers/app-reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport {withSuspense} from \"./HOC/withSuspense\";\nimport {AppStateType} from \"./redux/redux-store\";\nimport background from './Images/background.png'\nimport {Col, Row} from \"antd\";\nimport StartPage from \"./components/StartPage/StartPage\";\n\nconst Login = React.lazy(() => import(\"./components/Login/Login\"));\nconst Dialogs = React.lazy(() => import('./components/Dialogs/Dialogs'));\nconst NotFound = React.lazy(() => import ('./components/404/404'));\n\n\ntype MapStatePropsType = {\n    initialized: boolean\n}\ntype MapDispatchPropsType = {\n    initializeApp: () => void\n}\ntype PropsType = MapStatePropsType & MapDispatchPropsType;\n\nconst App: React.FC<PropsType> = (props) => {\n\n    useEffect(() => {\n        props.initializeApp();\n    }, []);\n\n    if (!props.initialized) return <Preloader/>;\n    return (\n        <HashRouter>\n            <Row>\n                <Col span={24}>\n                    <div className={'backgroundContainer'}>\n                        <img src={background} alt={''} className={'background'}/>\n                    </div>\n                    <Switch>\n                        <Route exact path='/login' render={withSuspense(Login)}/>\n                        <Route path='/' render={() => <div>\n                            <HeaderContainer/>\n                            <Row>\n                                <Col span={4} offset={1} style={{maxWidth: 200}}>\n                                    <NavBar/>\n                                </Col>\n                                <Col span={18} style={{marginLeft: 5}}>\n\n                                    <Switch>\n                                    <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\n                                    <Route path='/dialogs' render={withSuspense(Dialogs)}/>\n                                    <Route path='/music' render={() => <Music/>}/>\n                                    <Route path='/news' render={() => <News/>}/>\n                                    <Route path='/avatar' render={() => <CreateAvatar/>}/>\n                                    <Route path='/users' render={() => <UsersContainer/>}/>\n                                    <Route path='/' render={() => <StartPage/>}/>\n                                    <Route path={'*'} render={withSuspense(NotFound)}/>\n                                    </Switch>\n\n                                </Col>\n                            </Row>\n                        </div>}/>\n                    </Switch>\n                </Col>\n            </Row>\n        </HashRouter>\n    );\n};\n\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\n    return {\n        initialized: state.app.initialized\n    }\n};\n\nconst mapDispatchToProps: MapDispatchPropsType = {\n    initializeApp\n};\n\nexport default connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>(mapStateToProps, mapDispatchToProps)(App);\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./reducers/profile-reducer\";\r\nimport dialogsReducer from \"./reducers/dialogs-reducer\";\r\nimport usersReducer from \"./reducers/users-reducer\";\r\nimport authReducer from \"./reducers/auth-reducer\";\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport appReducer from \"./reducers/app-reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n   profilePage : profileReducer,\r\n    dialogsPage : dialogsReducer,\r\n    usersPage : usersReducer,\r\n    auth : authReducer,\r\n    app : appReducer,\r\n    form : formReducer\r\n});\r\n\r\ntype RootReducerType = typeof rootReducer;\r\nexport type AppStateType = ReturnType<RootReducerType>\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\n\r\n","import React from 'react';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {store} from \"./redux/redux-store\";\nimport {Provider} from \"react-redux\";\nimport 'antd/dist/antd.css';\n\n\n    ReactDOM.render(\n            <Provider store={store}>\n            <App/>\n            </Provider>,\n        document.getElementById('root')\n    );\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/scalable-vector-graphics-avatar-learning-icon-customer-login-avatar.bea0c518.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatarGenerator\":\"AvatarGenerator_avatarGenerator__3xEsB\",\"avatarPresentation\":\"AvatarGenerator_avatarPresentation__S5qPr\",\"avatarGeneration\":\"AvatarGenerator_avatarGeneration__3MZua\",\"avatarFull\":\"AvatarGenerator_avatarFull__22YT-\",\"avatarControl\":\"AvatarGenerator_avatarControl__3oJ_x\",\"avatarSelect\":\"AvatarGenerator_avatarSelect__3iWKo\",\"selected\":\"AvatarGenerator_selected__1G6QK\",\"avatarPlaceholder\":\"AvatarGenerator_avatarPlaceholder__2tAnV\",\"avatarCreate\":\"AvatarGenerator_avatarCreate__2fF5-\",\"avatarNamePlaceholder\":\"AvatarGenerator_avatarNamePlaceholder__7iVXx\",\"presentationCol\":\"AvatarGenerator_presentationCol__3gr7v\"};","import {PhotosType, ProfileType} from \"../redux/reducers/auth-reducer\";\r\nimport {DescriptionFormDataType} from \"../components/Profile/Profile-info/DescriptionForm\";\r\nimport {instance, RegularResponseType} from \"./API\";\r\n\r\ntype PhotosDataType = {\r\n    photos: PhotosType\r\n}\r\n\r\nexport const ProfileAPI = {\r\n\r\n    getProfile(id: number) {\r\n        return instance.get<ProfileType>(`profile/${id}`)\r\n            .then(response => response.data)\r\n    },\r\n\r\n    getStatus(id: number) {\r\n        return instance.get<string>(`profile/status/${id}`)\r\n            .then(response => response.data)\r\n    },\r\n\r\n    setStatus(status: string) {\r\n        return instance.put<RegularResponseType>('/profile/status', {status: status})\r\n    },\r\n\r\n    savePhoto(photo: File) {\r\n        const formData = new FormData();\r\n        formData.append('image', photo);\r\n        return instance.put<RegularResponseType<PhotosDataType>>('profile/photo', formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }).then(response => response.data)\r\n    },\r\n\r\n    saveProfile(data: DescriptionFormDataType) {\r\n        return instance.put<RegularResponseType>('profile', data)\r\n            .then(response => response.data)\r\n    }\r\n};","import {resultCodes} from \"../../API/API\";\r\nimport {PhotosType} from \"./auth-reducer\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {AppStateType} from \"../redux-store\";\r\nimport {UsersAPI} from \"../../API/UsersAPI\";\r\n\r\n\r\nexport const FOLLOW = 'users_reducer/FOLLOW';\r\nexport const UNFOLLOW = 'users_reducer/UNFOLLOW';\r\nconst SET_USERS = 'users_reducer/SET_USERS';\r\nconst SET_TOTAL_USERS_COUNT = 'users_reducer/SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_FETCHING = 'users_reducer/TOGGLE_FETCHING';\r\nconst TOGGLE_FOLLOWING_IN_PROGRESS = 'users_reducer/TOGGLE_FOLLOWING_IN_PROGRESS';\r\n\r\nexport type UserType = {\r\n    id: number\r\n    name: string\r\n    status: string\r\n    photos: PhotosType\r\n    followed: boolean\r\n}\r\n\r\ntype InitialUsersState = {\r\n    users: Array<UserType>\r\n    totalUsersCount: number\r\n    isFetching: boolean\r\n    followingInProgress: Array<number>\r\n}\r\n\r\nconst initialState: InitialUsersState = {\r\n    users: [],\r\n    totalUsersCount: 0,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n};\r\n\r\n\r\nconst usersReducer = (state = initialState, action: ActionsTypes) => {\r\n\r\n    switch (action.type) {\r\n        case SET_USERS:\r\n            return {...state, users: [...action.users]};\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {...state, totalUsersCount: action.usersCount};\r\n        case TOGGLE_FETCHING:\r\n            return {...state, isFetching: action.isFetching};\r\n        case TOGGLE_FOLLOWING_IN_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.inProgress ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            };\r\n        default:\r\n            return state;\r\n\r\n    }\r\n};\r\n\r\ntype ActionsTypes = ToggleFollowingInProgressType | ToggleFetchingType |\r\n    SetTotalUsersCountType | FollowActionType |\r\n    UnfollowActionType | SetUsersType;\r\n\r\ntype ToggleFollowingInProgressType = {\r\n    type: typeof TOGGLE_FOLLOWING_IN_PROGRESS\r\n    inProgress: boolean\r\n    userId: number\r\n}\r\n\r\nexport const toggleFollowingInProgress = (inProgress: boolean, userId: number): ToggleFollowingInProgressType => {\r\n    return {\r\n        type: TOGGLE_FOLLOWING_IN_PROGRESS,\r\n        inProgress,\r\n        userId\r\n    }\r\n};\r\n\r\ntype ToggleFetchingType = {\r\n    type: typeof TOGGLE_FETCHING\r\n    isFetching: boolean\r\n}\r\n\r\nexport const toggleFetching = (isFetching: boolean): ToggleFetchingType => {\r\n    return {\r\n        type: TOGGLE_FETCHING,\r\n        isFetching: isFetching\r\n    }\r\n};\r\n\r\ntype SetTotalUsersCountType = {\r\n    type: typeof SET_TOTAL_USERS_COUNT\r\n    usersCount: number\r\n}\r\n\r\nexport const setTotalUsersCount = (usersCount: number): SetTotalUsersCountType => {\r\n    return {\r\n        type: SET_TOTAL_USERS_COUNT,\r\n        usersCount\r\n    }\r\n};\r\n\r\n\r\nexport type FollowActionType = {\r\n    type: typeof FOLLOW\r\n    user: UserType\r\n}\r\n\r\nexport const followAction = (user: UserType): FollowActionType => {\r\n    return {\r\n        type: FOLLOW,\r\n        user\r\n    }\r\n};\r\n\r\nexport type UnfollowActionType = {\r\n    type: typeof UNFOLLOW\r\n    user: UserType\r\n}\r\n\r\n\r\nexport const unfollowAction = (user: UserType): UnfollowActionType => {\r\n    return {\r\n        type: UNFOLLOW,\r\n        user\r\n    }\r\n};\r\n\r\ntype SetUsersType = {\r\n    type: typeof SET_USERS\r\n    users: Array<UserType>\r\n}\r\n\r\nexport const setUsers = (users: Array<UserType>): SetUsersType => {\r\n    return {\r\n        type: SET_USERS,\r\n        users\r\n    }\r\n};\r\n\r\n\r\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionsTypes>;\r\n\r\nexport const getUsers = (currentPage: number, pageSize: number,friend?: boolean, term?: string): ThunkType => async dispatch => {\r\n    dispatch(toggleFetching(true));\r\n    try {\r\n        const data = await UsersAPI.getUsers(currentPage, pageSize, friend, term);\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    } catch (e) {\r\n        console.error(e)\r\n    } finally {\r\n        dispatch(toggleFetching(false));\r\n    }\r\n};\r\n\r\nexport const follow = (user: UserType): ThunkType => async dispatch => {\r\n    dispatch(toggleFollowingInProgress(true, user.id));\r\n    try {\r\n        const data = await UsersAPI.followUser(user.id);\r\n        if (data.resultCode === resultCodes.Success) {\r\n            user.followed = true;\r\n            dispatch(followAction(user));\r\n        }\r\n    } catch (e) {\r\n        console.error(e)\r\n    } finally {\r\n        dispatch(toggleFollowingInProgress(false, user.id))\r\n    }\r\n};\r\n\r\nexport const unfollow = (user: UserType): ThunkType => async dispatch => {\r\n    dispatch(toggleFollowingInProgress(true, user.id));\r\n    try {\r\n        const data = await UsersAPI.unfollowUser(user.id);\r\n        if (data.resultCode === resultCodes.Success) {\r\n            user.followed = false;\r\n            dispatch(unfollowAction(user))\r\n        }\r\n    } catch (e) {\r\n        console.error(e)\r\n    } finally {\r\n        dispatch(toggleFollowingInProgress(false, user.id))\r\n    }\r\n};\r\n\r\n\r\nexport default usersReducer;","import {instance} from \"./API\";\r\n\r\n\r\ntype GetCaptchaResponseType = {\r\n    url: string\r\n}\r\n\r\nexport const SequrityAPI = {\r\n\r\n    getCaptcha() {\r\n        return instance.get<GetCaptchaResponseType>('security/get-captcha-url')\r\n            .then(response => response.data)\r\n    }\r\n};","import {resultCodes} from '../../API/API';\nimport {FormAction} from 'redux-form';\nimport {SetPhotoActionType, SET_PHOTO, setUserFriends} from \"./profile-reducer\";\nimport {ThunkAction} from \"redux-thunk\";\nimport {AppStateType} from \"../redux-store\";\nimport {ProfileAPI} from \"../../API/ProfileAPI\";\nimport {AuthAPI, LoginRequestType} from \"../../API/AuthAPI\";\nimport {SequrityAPI} from \"../../API/SequrityAPI\";\nimport {UsersAPI} from \"../../API/UsersAPI\";\n\n\nexport const SET_USER_AUTH_DATA = 'auth_reducer/SET_USER_AUTH_DATA';\nconst TOGGLE_FETCHING_AUTH = 'auth_reducer/TOGGLE_FETCHING_AUTH';\nconst SET_LOGO_SRC = 'auth_reducer/SET_LOGO_SRC';\nconst SET_CAPTCHA = 'auth_reducer/SET_CAPTCHA';\nconst SET_LOGIN_ERROR_MESSAGE = 'auth_reducer/SET_LOGIN_ERROR_MESSAGE';\n\n\nexport type InitialAuthStateType = {\n    id: number | null,\n    login: string | null,\n    email: string | null,\n    isFetching: boolean,\n    logoSrc: string | null,\n    captchaUrl: string\n    loginError: loginErrorType\n};\n\nconst initialState: InitialAuthStateType = {\n    id: null,\n    login: null,\n    email: null,\n    isFetching: false,\n    logoSrc: null,\n    captchaUrl: '',\n    loginError: {type:'error', message: ''}\n};\n\nconst authReducer = (state = initialState, action: ActionsTypes): InitialAuthStateType => {\n\n    switch (action.type) {\n        case SET_USER_AUTH_DATA:\n            return {...state, ...action.data};\n        case TOGGLE_FETCHING_AUTH:\n            return {...state, isFetching: action.isFetching};\n        case SET_LOGO_SRC:\n            return {...state, logoSrc: action.logoSrc};\n        case SET_PHOTO:\n            return {...state, logoSrc: action.photos.small};\n        case SET_CAPTCHA:\n            return {...state, captchaUrl: action.url};\n        case SET_LOGIN_ERROR_MESSAGE:\n            return {...state, loginError: action.loginError};\n        default:\n            return state;\n    }\n\n};\n\ntype ActionsTypes = SetLogoSrcType | ToggleFetchingType |\n                    SetCaptchaUrlType | SetUserAuthDataType |\n                    SetPhotoActionType | SetLoginErrorMessageType;\n\ntype SetLoginErrorMessageType = {\n    type: typeof SET_LOGIN_ERROR_MESSAGE\n    loginError: loginErrorType\n}\n\nexport type loginErrorType = {\n    type: 'error'\n    message: string\n}\n\nexport const setLoginErrorMessage = (loginErrorMessage: string): SetLoginErrorMessageType => {\n    return {\n        type: SET_LOGIN_ERROR_MESSAGE,\n        loginError: {type: 'error', message: loginErrorMessage}\n    }\n};\n\ntype SetLogoSrcType = {\n    type: typeof SET_LOGO_SRC,\n    logoSrc: string | null\n}\n\nexport const setLogoSrc = (logoSrc: string | null): SetLogoSrcType => {\n    return {type: SET_LOGO_SRC, logoSrc};\n};\n\ntype ToggleFetchingType = {\n    type: typeof TOGGLE_FETCHING_AUTH,\n    isFetching: boolean\n}\n\nexport const toggleFetching = (isFetching: boolean): ToggleFetchingType => {\n    return {\n        type: TOGGLE_FETCHING_AUTH,\n        isFetching: isFetching,\n    };\n};\n\ntype SetCaptchaUrlType = {\n    type: typeof SET_CAPTCHA,\n    url: string\n}\n\nexport const setCaptchaUrl = (url: string): SetCaptchaUrlType => {\n    return {type: SET_CAPTCHA, url}\n};\n\ntype AuthDataType = {\n    id: number | null\n    login: string | null\n    email: string | null\n}\nexport type SetUserAuthDataType = {\n    type: typeof SET_USER_AUTH_DATA,\n    data: AuthDataType\n}\n\nexport const setUserAuthData = (id: number | null, login: string | null, email: string | null): SetUserAuthDataType => {\n    return {type: SET_USER_AUTH_DATA, data: {id, login, email}};\n};\n\nexport type ProfileContactsType = {\n    [key : string] : string\n    github: string\n    vk: string\n    facebook: string\n    instagram: string\n    twitter: string\n    website: string\n    youtube: string\n    mainLink: string\n}\nexport type PhotosType = {\n    small: string | null\n    large: string | null\n}\nexport type ProfileType = {\n    userId: number\n    lookingForAJob: boolean\n    lookingForAJobDescription: string\n    fullName: string\n    photos: PhotosType\n    aboutMe: string\n    contacts: ProfileContactsType\n}\n\n\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionsTypes | FormAction>;\n\nexport const authMe = (): ThunkType => async dispatch => {\n    try {\n        dispatch(toggleFetching(true));\n        const data = await AuthAPI.AuthMe();\n\n        const {id, login, email} = data.data;\n        dispatch(setUserAuthData(id, login, email));\n\n        const profile = id && await ProfileAPI.getProfile(id);\n        profile && dispatch(setLogoSrc(profile.photos.small));\n        const friends = await UsersAPI.getUsers(1,5,true);\n        friends && dispatch(setUserFriends(friends.items));\n    } catch (e) {\n        console.error(e);\n    } finally {\n        dispatch(toggleFetching(false));\n    }\n};\n\n\nexport const login = (data: LoginRequestType): ThunkType => async dispatch => {\n    const res = await AuthAPI.AuthLogin(data);\n    if (res.resultCode === resultCodes.Success) {\n        dispatch(setCaptchaUrl(''));\n        dispatch(setLoginErrorMessage(''));\n        return dispatch(authMe());\n    } else {\n        if (res.resultCode === resultCodes.CaptchaIsRequired) {\n            await dispatch(getCaptcha());\n        }\n        const message = res.messages && res.messages.length > 0 ? res.messages[0] : 'some error';\n        dispatch(setLoginErrorMessage(message));\n    }\n};\n\nexport const logout = (): ThunkType => async dispatch => {\n    await AuthAPI.AuthLogout();\n    dispatch(setUserAuthData(null, null, null));\n    dispatch(setUserFriends([]));\n};\n\n\nexport const getCaptcha = (): ThunkType => async dispatch => {\n    try {\n        const captcha = await SequrityAPI.getCaptcha();\n        dispatch(setCaptchaUrl(captcha.url))\n    } catch (e) {\n        console.error(e)\n    }\n};\n\nexport default authReducer;"],"sourceRoot":""}