{"version":3,"sources":["redux/reducers/dialogs-reducer.js","API/API.js","components/Users/User/User.module.css","Images/91.svg","components/Profile/Profile.module.css","components/Profile/Posts/AddPost/AddPost.module.css","components/NavBar/NavBar.module.css","components/Wallpaper/Wallpaper.js","serviceWorker.js","components/NavBar/sideBar/friend/friend.js","components/NavBar/sideBar/sideBar.js","components/NavBar/sideBar/sideBarContainer.js","components/NavBar/NavBar.js","components/Music/Music.js","components/News/News.js","components/Settings/Settings.tsx","components/Users/User/User.js","components/Users/Users.js","redux/reducers/users-reducer.js","components/common/Preloader/Preloader.js","components/Users/UsersContainer.js","components/Profile/Profile-info/Status.js","components/Profile/Profile-info/Profile-info.js","components/Profile/Posts/Post/Post.js","components/Profile/Posts/AddPost/AddPostForm.js","components/Profile/Posts/Posts.js","redux/reducers/profile-reducer.js","components/Profile/Posts/PostsContainer.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js","components/Header/Head.js","components/Header/HeadContainer.js","redux/reducers/app-reducer.js","HOC/withSuspense.js","App.js","redux/redux-store.js","index.js","redux/reducers/auth-reducer.js","Images/scalable-vector-graphics-avatar-learning-icon-customer-login-avatar.jpg","components/Header/Head.module.css","components/Users/users.module.css","components/Profile/Profile-info/Profile-Info.module.css","components/Profile/Posts/Post/Post.module.css","components/common/customElements/Inputs.module.css","components/NavBar/sideBar/sideBar.module.css","utils/validators.js","components/NavBar/sideBar/friend/friend.module.css","components/Wallpaper/Wallpaper.module.css","components/Profile/Posts/Posts.module.css","components/common/customElements/Inputs.js"],"names":["initialState","MessagesData","id","message","DialogsData","name","logoSrc","sendMessageActionCreator","type","dialogsReducer","state","action","messageId","length","newMessage","instance","axios","withCredentials","baseURL","headers","UsersAPI","getUsers","currentPage","pageSize","get","then","response","data","unfollowUser","delete","followUser","post","ProfileAPI","getProfile","getStatus","setStatus","status","put","AuthAPI","AuthMe","AuthLogin","AuthLogout","module","exports","Wallpaper","props","className","styles","box","img","src","Boolean","window","location","hostname","match","Friend","friend","friendName","SideBar","sideBar","title","friendsList","someUsers","map","connect","dialogsPage","NavBar","Item","activeClassName","active","to","Music","News","Settings","User","logo","userLogo","disabled","followingInProgress","some","onClick","followed","Users","pagesCount","Math","ceil","totalUsersCount","pages","i","push","usersContainer","users","user","photos","small","follow","unfollow","p","paginator","onPageChange","isFetching","toggleFollowingInProgress","inProgress","userId","toggleFetching","setTotalUsersCount","usersCount","setUsers","usersReducer","page","filter","Preloader","preloader","mapDispatchToProps","dispatch","a","resultCode","console","error","items","totalCount","pageChange","usersPage","useEffect","Status","useState","editMode","setEditMode","autoFocus","onBlur","onChange","e","target","value","onDoubleClick","ProfileInfo","profile","contactInfo","key","contacts","Avatar","large","description","fullName","aboutMe","Post","avatar","Message","Like","likesCount","maxLength30","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","Posts","postElements","postData","addPostActionCreator","postMessage","setUserProfile","getUserProfile","getUserStatus","profileReducer","postId","newPost","PostsContainer","profilePage","Profile","getMyProfile","clearProfile","compose","auth","withRouter","params","Header","loginBlock","logout","login","Head","initialized","appReducer","SET_USER_AUTH_DATA","withSuspense","Component","Suspense","fallback","Login","React","lazy","Dialogs","initializeApp","authMe","app","path","render","reducers","combineReducers","authReducer","formReducer","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","email","setUserAuthData","res","messages","stopSubmit","_error","max","input","meta","hasError","touched","formControl","Input"],"mappings":"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","file":"static/js/main.da35b777.chunk.js","sourcesContent":["const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    MessagesData: [\r\n        {id: '1', message: 'Hi!'},\r\n        {id: '2', message: 'How are u?'},\r\n        {id: '3', message: 'Fine'},\r\n    ],\r\n    DialogsData: [\r\n        {\r\n            id: '1',\r\n            name: 'Dima',\r\n            logoSrc: 'https://i.pinimg.com/280x280_RS/91/a3/2c/91a32c5d5d8fd2a5c81c6874a65a4fb4.jpg'\r\n        },\r\n        {\r\n            id: '2',\r\n            name: 'Alex',\r\n            logoSrc: 'https://www.autoalloys.com/content/images/thumbs/0003760_19-ava-memphis-hyper-silver-alloy-wheels_550.png'\r\n        },\r\n        {\r\n            id: '3',\r\n            name: 'Vanya',\r\n            logoSrc: 'https://whatsism.com/uploads/posts/2018-07/1530546770_rmk_vdjbx10.jpg'\r\n        },\r\n        {id: '4', name: 'Viktor', logoSrc: 'https://archilab.online/images/1/123.jpg'},\r\n        {id: '5', name: 'Andrew', logoSrc: 'https://cs16planet.ru/steam-avatars/images/avatar2700.jpg'}\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SEND_MESSAGE: {\r\n            let messageId = state.MessagesData.length + 1;\r\n            let newMessage = {\r\n                id: messageId,\r\n                message: action.message\r\n            };\r\n            return {...state, MessagesData: [...state.MessagesData, newMessage]};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n\r\nexport const sendMessageActionCreator = (message) => {\r\n    return {type: SEND_MESSAGE, message};\r\n};\r\n\r\nexport default dialogsReducer;","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    headers: {\r\n        'API-KEY' : '8db7e860-79e2-4316-a7a6-e54ca669f748'\r\n    }\r\n});\r\n\r\nexport const UsersAPI = {\r\n\r\n    getUsers(currentPage, pageSize){\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data)\r\n    },\r\n\r\n    unfollowUser(id){\r\n       return instance.delete(`follow/${id}`)\r\n            .then( response => response.data)\r\n    },\r\n\r\n    followUser(id){\r\n       return instance.post(`follow/${id}`, {})\r\n           .then(response => response.data)\r\n    }\r\n\r\n};\r\n\r\nexport const ProfileAPI = {\r\n\r\n    getProfile (id) {\r\n        return instance.get(`profile/${id}`)\r\n            .then( response => response.data)\r\n    },\r\n\r\n    getStatus (id) {\r\n        return instance.get(`profile/status/${id}`)\r\n    },\r\n\r\n    setStatus (status) {\r\n        return instance.put('/profile/status', {status: status})\r\n    }\r\n\r\n};\r\n\r\nexport const AuthAPI = {\r\n\r\n    AuthMe(){\r\n        return instance.get(`auth/me`)\r\n            .then(response => response.data)\r\n    },\r\n\r\n    AuthLogin(data){\r\n        return instance.post('auth/login', data)\r\n    },\r\n\r\n    AuthLogout(){\r\n        return instance.delete('auth/login')\r\n    },\r\n\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"User_logo__2Ttrl\"};","module.exports = __webpack_public_path__ + \"static/media/91.32dab0f3.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Profile\":\"Profile_Profile__2ENRy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"AddPost_form__k_WGJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavBar\":\"NavBar_NavBar__3Uex_\",\"Item\":\"NavBar_Item__2SJE8\",\"active\":\"NavBar_active__3qbGS\"};","import React from 'react';\r\nimport styles from './Wallpaper.module.css';\r\n\r\nconst Wallpaper = (props) => {\r\n    return(\r\n        <div className={styles.box}>\r\n            <img className={styles.img} src='https://wonderkids.club/wp-content/uploads/2019/09/casteism-india_peopleandthoughts.png'/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Wallpaper;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport styles from './friend.module.css'\r\n\r\nconst Friend = (props) => {\r\n    return(\r\n        <div className={styles.friend}>\r\n            <img src={props.logoSrc}/>\r\n            <div className={styles.friendName}>{props.name}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Friend;","import React from 'react';\r\nimport styles from './sideBar.module.css';\r\nimport Friend from './friend/friend';\r\n\r\nconst SideBar = (props) => {\r\n\r\n    return(\r\n        <div className={styles.sideBar}>\r\n            <div className={styles.title}>Friends:</div>\r\n            <div className={styles.friendsList}>\r\n            {props.someUsers.map(friend => <Friend name={friend.name} logoSrc={friend.logoSrc}/>)}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SideBar;","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport SideBar from \"./sideBar\";\r\n\r\nconst SideBarContainer = (props) => {\r\n\r\n    return (\r\n        <SideBar someUsers={props.someUsers}/>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n       someUsers : state.dialogsPage.DialogsData\r\n   }\r\n};\r\n\r\nexport default connect(mapStateToProps)(SideBarContainer);\r\n\r\n","import React from 'react';\r\nimport styles from './NavBar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport SideBarContainer from \"./sideBar/sideBarContainer\";\r\n\r\nconst NavBar = () => {\r\n    return (\r\n        <nav className={styles.NavBar}>\r\n            <div className={styles.Item}>\r\n                <NavLink activeClassName={styles.active} to='/profile'>Profile</NavLink>\r\n            </div>\r\n            <div className={styles.Item}>\r\n                <NavLink activeClassName={styles.active} to='/dialogs'>Messages</NavLink>\r\n            </div>\r\n            <div className={styles.Item}>\r\n                <NavLink activeClassName={styles.active} to='/news'>News</NavLink>\r\n            </div>\r\n            <div className={styles.Item}>\r\n                <NavLink activeClassName={styles.active} to='/music'>Music</NavLink>\r\n            </div>\r\n            <div className={styles.Item}>\r\n                <NavLink activeClassName={styles.active} to='/settings'>Settings</NavLink>\r\n            </div>\r\n            <div className={styles.Item}>\r\n                <NavLink activeClassName={styles.active} to='/users'>Users</NavLink>\r\n            </div>\r\n\r\n            <SideBarContainer/>\r\n\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport styles from './Music.module.css';\r\nimport Wallpaper from \"../Wallpaper/Wallpaper\";\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>\r\n            <Wallpaper/>\r\n            Music\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Music;","import React from 'react';\r\nimport styles from './News.module.css';\r\nimport Wallpaper from \"../Wallpaper/Wallpaper\";\r\n\r\nconst News = () => {\r\n    return (\r\n        <div>\r\n            <Wallpaper/>\r\n            News\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default News;","import * as React from 'react';\r\nimport Wallpaper from \"../Wallpaper/Wallpaper\";\r\n\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n            <Wallpaper/>\r\n            Settings\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Settings;","import React from 'react';\r\nimport styles from './User.module.css';\r\nimport userLogo from '../../../Images/scalable-vector-graphics-avatar-learning-icon-customer-login-avatar.jpg'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst User = (props) => {\r\n    return (\r\n        <div>\r\n            <div className={styles.logo}>\r\n                <NavLink to={`/profile/${props.id}`}>\r\n                    <img src={props.logoSrc || userLogo}/>\r\n                </NavLink>\r\n            </div>\r\n            <div>\r\n                <button disabled={props.followingInProgress.some(id => id === props.id)}\r\n                        onClick={() => {\r\n                            props[props.followed ? 'unfollow' : 'follow'](props.id)\r\n                        }}>{props.followed ? 'Unfollow' : 'Follow'}</button>\r\n            </div>\r\n            <div>\r\n                {props.name}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default User;","import React from 'react';\r\nimport User from \"./User/User\";\r\nimport styles from './users.module.css';\r\n\r\nconst Users = (props) => {\r\n\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    let pages = [];\r\n\r\n    for (let i = 1; i <= pagesCount; i++){\r\n        pages.push(i);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles.usersContainer}>\r\n                {props.users.map(user => (\r\n                    <User id={user.id} logoSrc={user.photos.small} name={user.name} followed={user.followed} follow={props.follow}\r\n                          unfollow={props.unfollow} followingInProgress={props.followingInProgress}/>))}\r\n            </div>\r\n            <div className={styles.pages}>\r\n                {pages.map( p => { return <span className={styles.paginator +' ' + (props.currentPage === p && styles.active)} onClick={ () => props.onPageChange(p)}>{p}</span> })}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Users;","import {UsersAPI} from \"../../API/API\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst PAGE_CHANGE = 'PAGE_CHANGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_FETCHING = 'TOGGLE_FETCHING';\r\nconst TOGGLE_FOLLOWING_IN_PROGRESS = 'TOGGLE_FOLLOWING_IN_PROGRESS';\r\n\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 16,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n};\r\n\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state, users: state.users.map((user) => {\r\n                    if (user.id === action.userId) {\r\n                        return {...user, followed: true};\r\n                    }\r\n                    return user;\r\n                })\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state, users: state.users.map((user) => {\r\n                    if (user.id === action.userId) {\r\n                        return {...user, followed: false};\r\n                    }\r\n                    return user;\r\n                })\r\n            };\r\n        case SET_USERS:\r\n            return {...state, users: [...action.users]};\r\n        case PAGE_CHANGE:\r\n            return {...state, currentPage: action.page};\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {...state, totalUsersCount: action.usersCount};\r\n        case TOGGLE_FETCHING:\r\n            return {...state, isFetching: action.isFetching};\r\n        case TOGGLE_FOLLOWING_IN_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.inProgress ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            };\r\n        default:\r\n            return state;\r\n\r\n    }\r\n};\r\n\r\nexport const toggleFollowingInProgress = (inProgress, userId) => {\r\n    return {\r\n        type: TOGGLE_FOLLOWING_IN_PROGRESS,\r\n        inProgress,\r\n        userId\r\n    }\r\n};\r\n\r\nexport const toggleFetching = (isFetching) => {\r\n    return {\r\n        type: TOGGLE_FETCHING,\r\n        isFetching\r\n    }\r\n};\r\n\r\nexport const setTotalUsersCount = (usersCount) => {\r\n    return {\r\n        type: SET_TOTAL_USERS_COUNT,\r\n        usersCount\r\n    }\r\n};\r\n\r\nexport const changePage = (page) => {\r\n    return {\r\n        type: PAGE_CHANGE,\r\n        page\r\n    }\r\n};\r\n\r\nexport const followAction = (userId) => {\r\n    return {\r\n        type: FOLLOW,\r\n        userId\r\n    }\r\n};\r\n\r\nexport const unfollowAction = (userId) => {\r\n    return {\r\n        type: UNFOLLOW,\r\n        userId\r\n    }\r\n};\r\n\r\nexport const setUsers = (users) => {\r\n    return {\r\n        type: SET_USERS,\r\n        users\r\n    }\r\n};\r\n\r\nexport const getUsers = (currentPage, pageSize) => async dispatch => {\r\n    dispatch(toggleFetching(true));\r\n    try {\r\n        const data = await UsersAPI.getUsers(currentPage, pageSize);\r\n        dispatch(toggleFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    } catch (e) {\r\n        console.error(e)\r\n    }\r\n};\r\n\r\nexport const pageChange = (p, pageSize) => async dispatch => {\r\n    dispatch(toggleFetching(true));\r\n    dispatch(changePage(p));\r\n    try {\r\n        const data = await UsersAPI.getUsers(p, pageSize);\r\n        dispatch(setUsers(data.items));\r\n    } catch (e) {\r\n        console.error(e)\r\n    } finally {\r\n        dispatch(toggleFetching(false));\r\n    }\r\n};\r\n\r\nexport const follow = (id) => async dispatch => {\r\n    dispatch(toggleFollowingInProgress(true, id));\r\n    try {\r\n        const data = await UsersAPI.followUser(id);\r\n        if (data.resultCode === 0) {\r\n            dispatch(followAction(id));\r\n        }\r\n    } catch (e) {\r\n        console.error(e)\r\n    } finally {\r\n        dispatch(toggleFollowingInProgress(false, id))\r\n    }\r\n};\r\n\r\nexport const unfollow = (id) => async dispatch => {\r\n    dispatch(toggleFollowingInProgress(true, id));\r\n    try {\r\n        const data = await UsersAPI.unfollowUser(id);\r\n        if (data.resultCode === 0) {\r\n            dispatch(unfollowAction(id))\r\n        }\r\n    } catch (e) {\r\n        console.error(e)\r\n    } finally {\r\n        dispatch(toggleFollowingInProgress(false, id))\r\n    }\r\n};\r\n\r\n\r\nexport default usersReducer;","import preloader from \"../../../Images/91.svg\";\r\nimport React from \"react\";\r\n\r\nconst Preloader = (props) => {\r\n    return (\r\n        <div><img src={preloader} className={props.className ? props.className : ''}/></div>\r\n    );\r\n};\r\n\r\nexport default Preloader;","import React, {useEffect} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Users from \"./Users\";\r\nimport {\r\n    follow, getUsers, pageChange,\r\n    setTotalUsersCount, toggleFetching,\r\n    unfollow\r\n} from \"../../redux/reducers/users-reducer\";\r\nimport Wallpaper from \"../Wallpaper/Wallpaper\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\n\r\nconst UsersContainer = (props) => {\r\n\r\n    useEffect(() => {\r\n        props.getUsers(props.currentPage, props.pageSize);\r\n    }, [props.currentPage]);\r\n\r\n    const onPageChange = (p) => {\r\n        props.pageChange(p, props.pageSize);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Wallpaper/>\r\n            {props.isFetching ? <Preloader/> :\r\n                <Users totalUsersCount={props.totalUsersCount}\r\n                       pageSize={props.pageSize}\r\n                       users={props.users}\r\n                       follow={props.follow}\r\n                       unfollow={props.unfollow}\r\n                       currentPage={props.currentPage}\r\n                       onPageChange={onPageChange}\r\n                       followingInProgress={props.followingInProgress}\r\n                />}\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress\r\n    }\r\n\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    follow,\r\n    unfollow,\r\n    setTotalUsersCount,\r\n    toggleFetching,\r\n    getUsers, pageChange\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersContainer);\r\n","import React, {useEffect, useState} from 'react';\r\nimport {ProfileAPI} from \"../../../API/API\";\r\n\r\nconst Status = (props) => {\r\n\r\n    const [status, setStatus] = useState(props.status);\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const enterToEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    const closeEditMode = () => {\r\n        setEditMode(false);\r\n        ProfileAPI.setStatus(status);\r\n    };\r\n\r\n    const statusChange = (e) => {\r\n        setStatus(e.target.value);\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            {editMode ?\r\n                <input autoFocus={ true } onBlur={ closeEditMode } onChange={ statusChange } value={ status }/> :\r\n                <span onDoubleClick={ enterToEditMode }> {status ? status : 'Here can be your status (double click)'} </span>}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Status;","import React from 'react';\r\nimport styles from './Profile-Info.module.css';\r\nimport Status from \"./Status\";\r\nimport userLogo from '../../../Images/scalable-vector-graphics-avatar-learning-icon-customer-login-avatar.jpg'\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    if (!props.profile){\r\n        return <div>Please Log in</div>\r\n    }\r\n\r\n    let contactInfo = [];\r\n\r\n    for( let key in props.profile.contacts){\r\n        contactInfo.push(`${key} : ${props.profile.contacts[key]}  `)\r\n    }\r\n\r\n    return(\r\n        <div className={styles.user}>\r\n            <div className={styles.Avatar}>\r\n                <img src={props.profile.photos.large || userLogo}/>\r\n            </div>\r\n            <div className={styles.description}>\r\n                <div>\r\n                    <div>\r\n                    <b>{props.profile.fullName}</b>\r\n                    </div>\r\n                About me: {props.profile.aboutMe}\r\n                </div>\r\n                {contactInfo}\r\n            </div>\r\n\r\n            <div className={styles.status}>\r\n            <Status status={props.status}/>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport styles from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={styles.Post}>\r\n            <div className={styles.avatar}>\r\n                <img\r\n                    src='https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQqc0qwLkD2-SHZlWMr7z7lRvzHQfxaXk_TLw&usqp=CAU'/>\r\n            </div>\r\n            <div className={styles.Message}>\r\n                {props.message}\r\n            </div>\r\n            <div className={styles.Like}>\r\n                <span>Like!</span> {props.likesCount}\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default Post;","import React from 'react';\r\nimport styles from './AddPost.module.css';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../../common/customElements/Inputs\";\r\nimport {maxLengthCreator, required} from \"../../../../utils/validators\";\r\n\r\nconst maxLength30 = maxLengthCreator(30);\r\n\r\nconst AddPostForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={styles.form}>\r\n            <Field component={Textarea} name={'postMessage'}\r\n                   placeholder={'Enter your post'} validate={[required, maxLength30]}/>\r\n            <button>Add post</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default reduxForm({form : 'addPostForm'})(AddPostForm);","import React from 'react';\r\nimport styles from './Posts.module.css';\r\nimport Post from './Post/Post'\r\nimport AddPostForm from \"./AddPost/AddPostForm\";\r\n\r\nconst Posts = (props) => {\r\n\r\n    const onSubmit = (post) => {\r\n      props.addPostActionCreator(post.postMessage)\r\n    };\r\n\r\n    let postElements = props.postData.map( post => <Post message={post.post} likesCount={post.likesCount}/>);\r\n\r\n    return(\r\n        <div className={styles.Posts}>\r\n            <AddPostForm onSubmit={ onSubmit } />\r\n            <div>\r\n                <div className={styles.title}><b>My posts</b></div>\r\n                {postElements}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Posts;","import {AuthAPI, ProfileAPI} from \"../../API/API\";\n\nconst CLEAR_PROFILE = 'CLEAR_PROFILE';\nconst ADD_POST = 'ADD_POST';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst SET_STATUS = 'SET_STATUS';\nconst TOGGLE_FETCHING = 'TOGGLE_FETCHING';\n\n\nconst initialState = {\n    postData: [\n        {id: 1, post: 'Hi, how are you?', likesCount: '9'},\n        {id: 2, post: 'Working hard.', likesCount: '15'}\n    ],\n    profile: null,\n    status: '',\n    isFetching: false,\n};\n\nconst profileReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case ADD_POST: {\n            let postId = state.postData.length + 1;\n            let newPost = {\n                id: postId,\n                post: action.post,\n                likesCount: 0\n            };\n            return {...state, postData: [newPost, ...state.postData]};\n        }\n        case TOGGLE_FETCHING: {\n            return {...state, isFetching: action.isFetching};\n        }\n        case SET_USER_PROFILE: {\n            return {...state, profile: action.profile}\n        }\n        case CLEAR_PROFILE: {\n            return {...state, profile: null}\n        }\n        case SET_STATUS: {\n            return {...state, status: action.status}\n        }\n        default:\n            return state;\n    }\n\n};\n\nexport const toggleFetching = (isFetching) => {\n    return {\n        type: TOGGLE_FETCHING,\n        isFetching\n    }\n};\n\nexport const setStatusAC = (status) => {\n    return {type: SET_STATUS, status}\n};\n\nexport const setUserProfile = (profile) => {\n    return {type: SET_USER_PROFILE, profile}\n};\n\nexport const addPostActionCreator = (post) => {\n    return {type: ADD_POST, post};\n};\n\nexport const clearProfile = () => {\n    return {type: CLEAR_PROFILE};\n};\n\n\nexport const getUserProfile = (userId) => async dispatch => {\n    dispatch(toggleFetching(true));\n    try {\n        const data = await ProfileAPI.getProfile(userId);\n        dispatch(setUserProfile(data));\n        dispatch(getUserStatus(userId));\n    } catch (e) {\n        console.error(e)\n    } finally {\n        dispatch(toggleFetching(false))\n    }\n};\n\nexport const getMyProfile = () => async dispatch => {\n    try {\n        const data = await AuthAPI.AuthMe();\n        if (data.resultCode === 0) {\n            dispatch(getUserProfile(data.data.id));\n        }\n    } catch (e) {\n        console.error(e)\n    }\n};\n\nexport const getUserStatus = (userId) => async dispatch => {\n    try {\n        const data = await ProfileAPI.getStatus(userId);\n        dispatch(setStatusAC(data.data));\n    } catch (e) {\n        console.error(e)\n    }\n};\n\n\nexport default profileReducer;","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Posts from \"./Posts\";\r\nimport {addPostActionCreator} from \"../../../redux/reducers/profile-reducer\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        postData : state.profilePage.postData\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    addPostActionCreator\r\n};\r\n\r\nconst PostsContainer = connect(mapStateToProps, mapDispatchToProps)(Posts);\r\n\r\nexport default PostsContainer;","import React from 'react';\r\nimport styles from './Profile.module.css';\r\nimport ProfileInfo from \"./Profile-info/Profile-info\";\r\nimport Wallpaper from \"../Wallpaper/Wallpaper\";\r\nimport PostsContainer from \"./Posts/PostsContainer\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className={styles.Profile}>\r\n            <Wallpaper/>\r\n            {props.isFetching? <Preloader/> :\r\n            <ProfileInfo profile={props.profile} status={props.status}/>}\r\n            <PostsContainer/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import React, {useEffect} from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {clearProfile, getMyProfile, getUserProfile, getUserStatus} from \"../../redux/reducers/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nconst ProfileContainer = (props) => {\r\n\r\n    useEffect(() => {\r\n        if (!props.match.params.userId) {\r\n            !props.id && props.clearProfile();\r\n            props.getMyProfile();\r\n        } else {\r\n            let userId = props.match.params.userId;\r\n            props.getUserProfile(userId);\r\n        }\r\n    }, [props.match.params.userId]);\r\n\r\n\r\n    return (\r\n        <Profile profile={props.profile} status={props.status} isFetching={props.isFetching}/>\r\n    );\r\n\r\n};\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        isFetching: state.profilePage.isFetching,\r\n        id: state.auth.id\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = {\r\n    getUserProfile,\r\n    getMyProfile,\r\n    getUserStatus,\r\n    clearProfile\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withRouter\r\n)(ProfileContainer);","import React from 'react';\nimport styles from './Head.module.css';\nimport Preloader from \"../common/Preloader/Preloader\";\nimport {NavLink} from \"react-router-dom\";\nimport avatar from '../../Images/scalable-vector-graphics-avatar-learning-icon-customer-login-avatar.jpg';\n\n\nconst Header = (props) => {\n\n    const logoutClick = () => {\n       props.logout();\n       props.setUserProfile(null);\n    };\n\n    return (\n        <header className={styles.Header}>\n            <img src='https://assets.awwwards.com/awards/images/2011/12/typeandlogo-11.jpg'/>\n            <div className={styles.auth}>\n                {props.auth.isFetching ? <Preloader className={styles.preloader}/> : props.auth.id ?\n                    <div className={styles.loginBlock}>\n                        <div className={styles.avatar}>\n                            <img src={props.auth.logoSrc ? props.auth.logoSrc : avatar}/>\n                        </div>\n                        <div>\n                            <button onClick={ logoutClick }>Log out</button>\n                        </div>\n                        <b>\n                            {props.auth.login}\n                        </b>\n                    </div>\n                    :\n                    <NavLink to={'/login'}>\n                        <b>Login</b>\n                    </NavLink>}\n            </div>\n        </header>\n    );\n};\n\nexport default Header;","import React from 'react';\r\nimport Header from \"./Head\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/reducers/auth-reducer\";\r\nimport {setUserProfile} from \"../../redux/reducers/profile-reducer\";\r\n\r\n\r\n\r\nconst HeaderContainer = (props) => {\r\n        return (\r\n            <Header {...props}/>\r\n        );\r\n    };\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.auth\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = {\r\n    logout,\r\n    setUserProfile\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderContainer);","import { authMe, SET_USER_AUTH_DATA } from './auth-reducer';\n\n\nlet initialState = {\n  initialized : false\n};\n\n\nconst appReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case SET_USER_AUTH_DATA:\n            return {...state, initialized: true};\n        default:\n            return state;\n    }\n};\n\n\nexport const initializeApp = () =>  dispatch => {\n    dispatch(authMe());\n};\n\n\nexport default appReducer;","import React from 'react';\r\nimport Preloader from \"../components/common/Preloader/Preloader\";\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<Preloader/>}><Component {...props}/></React.Suspense>\r\n    }\r\n};","import React, {useEffect} from 'react';\nimport './App.css';\nimport NavBar from \"./components/NavBar/NavBar\";\nimport Music from './components/Music/Music';\nimport News from './components/News/News';\nimport Settings from './components/Settings/Settings.tsx';\nimport {BrowserRouter, Route} from \"react-router-dom\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeadContainer\";\nimport {connect} from \"react-redux\";\nimport {initializeApp} from \"./redux/reducers/app-reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport {withSuspense} from \"./HOC/withSuspense\";\nconst Login = React.lazy(()=> import(\"./components/Login/Login\"));\nconst Dialogs = React.lazy(()=>import('./components/Dialogs/Dialogs'));\n\n\nconst App = (props) => {\n\n    useEffect(()=>{\n      props.initializeApp();\n    },[]);\n\n        if (!props.initialized) return <Preloader/>;\n        return (\n            <BrowserRouter>\n                <div className={'Wrapper'}>\n                    <HeaderContainer/>\n                    <NavBar/>\n                    <div className={'Container'}>\n                        <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\n                        <Route path='/dialogs' render={withSuspense(Dialogs)}/>\n                        <Route path='/music' render={() => <Music/>}/>\n                        <Route path='/news' render={() => <News/>}/>\n                        <Route path='/settings' render={() => <Settings/>}/>\n                        <Route path='/users' render={() => <UsersContainer/>}/>\n                        <Route path='/login' render={withSuspense(Login)}/>\n                    </div>\n                </div>\n            </BrowserRouter>\n        );\n};\n\nconst mapStateToProps = state => {\n  return {\n      initialized : state.app.initialized\n  }\n};\n\nconst mapDispatchToProps = {\n    initializeApp\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./reducers/profile-reducer\";\r\nimport dialogsReducer from \"./reducers/dialogs-reducer\";\r\nimport usersReducer from \"./reducers/users-reducer\";\r\nimport authReducer from \"./reducers/auth-reducer\";\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport appReducer from \"./reducers/app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n   profilePage : profileReducer,\r\n    dialogsPage : dialogsReducer,\r\n    usersPage : usersReducer,\r\n    auth : authReducer,\r\n    app : appReducer,\r\n    form : formReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;\r\n","import React from 'react';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from \"./redux/redux-store\";\nimport {Provider} from \"react-redux\";\n\n\n    ReactDOM.render(\n            <Provider store={store}>\n            <App/>\n            </Provider>,\n        document.getElementById('root')\n    );\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { AuthAPI, ProfileAPI } from '../../API/API';\nimport { stopSubmit } from 'redux-form';\n\nexport const SET_USER_AUTH_DATA = 'SET_USER_AUTH_DATA';\nconst TOGGLE_FETCHING_AUTH = 'TOGGLE_FETCHING_AUTH';\nconst SET_LOGO_SRC = 'SET_LOGO_SRC';\n\n// social-network.samuraijs.com\n// Email: free@samuraijs.com\n// Password: free\n\n\nlet initialState = {\n\tid: null,\n\tlogin: null,\n\temail: null,\n\tisFetching: false,\n\tlogoSrc: null,\n};\n\nconst authReducer = (state = initialState, action) => {\n\n\tswitch ( action.type ) {\n\t\tcase SET_USER_AUTH_DATA:\n\t\t\treturn { ...state, ...action.data };\n\t\tcase TOGGLE_FETCHING_AUTH:\n\t\t\treturn { ...state, isFetching: action.isFetching };\n\t\tcase SET_LOGO_SRC:\n\t\t\treturn { ...state, logoSrc: action.logoSrc };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n\n};\n\nexport const setLogoSrc = (logoSrc) => {\n\treturn { type: SET_LOGO_SRC, logoSrc };\n};\n\nexport const toggleFetching = (isFetching) => {\n\treturn {\n\t\ttype: TOGGLE_FETCHING_AUTH,\n\t\tisFetching,\n\t};\n};\n\nexport const setUserAuthData = (id, login, email) => {\n\treturn { type: SET_USER_AUTH_DATA, data: { id, login, email} };\n};\n\nexport const authMe = () => async dispatch => {\n\ttry {\n\t\tdispatch(toggleFetching(true));\n\t\tconst data = await AuthAPI.AuthMe();\n\n\t\tconst { id, login, email } = data.data;\n\t\tdispatch(setUserAuthData(id, login, email));\n\n\t\tconst profile = id && await ProfileAPI.getProfile(id);\n\t\tdispatch(setLogoSrc(profile.photos.small));\n\t} catch ( e ) {\n\t\tconsole.error(e);\n\t} finally {\n\t\tdispatch(toggleFetching(false));\n\t}\n};\n\nexport const login = (data) => async dispatch => {\n\tconst res = await AuthAPI.AuthLogin(data);\n\tif ( res.data.resultCode === 0 ) {\n\t\treturn dispatch(authMe());\n\t}\n\t// _.isEmpty(res.data.messages)\n\t// _.size(res.data.messages)\n\tconst message = res.data.messages.length > 0 ? res.data.messages[0] : 'some error';\n\tdispatch(stopSubmit('login', { _error: message }));\n};\n\nexport const logout = () => async dispatch => {\n\tawait AuthAPI.AuthLogout();\n\tdispatch(setUserAuthData());\n};\n\n\nexport default authReducer;","module.exports = __webpack_public_path__ + \"static/media/scalable-vector-graphics-avatar-learning-icon-customer-login-avatar.bea0c518.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Head_Header__1zKkD\",\"auth\":\"Head_auth__6Bcwn\",\"preloader\":\"Head_preloader__3R-1J\",\"avatar\":\"Head_avatar__3lh03\",\"loginBlock\":\"Head_loginBlock__3XiWN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"active\":\"users_active__yYNTD\",\"pages\":\"users_pages__WzV7e\",\"paginator\":\"users_paginator__13mwc\",\"usersContainer\":\"users_usersContainer__2EFDU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Avatar\":\"Profile-Info_Avatar__2n7Cs\",\"user\":\"Profile-Info_user__1FLN1\",\"status\":\"Profile-Info_status__28UlE\",\"description\":\"Profile-Info_description__1E1cC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Post\":\"Post_Post__cRRaa\",\"Like\":\"Post_Like__1Ou17\",\"Message\":\"Post_Message__xfMhO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"Inputs_formControl__2rsW4\",\"error\":\"Inputs_error__2RxS6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sideBar\":\"sideBar_sideBar__1PBEh\",\"title\":\"sideBar_title__DnGe1\",\"friendsList\":\"sideBar_friendsList__3-Dud\"};","\r\nexport const required = (value) => {\r\n    if (value) return undefined;\r\n    return 'required field';\r\n};\r\n\r\nexport const maxLengthCreator = max => value => {\r\n  if (value.length > max) return `max length is ${max} symbols`;\r\n  return undefined;\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend\":\"friend_friend__2X0g2\",\"friendName\":\"friend_friendName__3b_9P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"Wallpaper_img__1T4kh\",\"box\":\"Wallpaper_box__BIgZy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Posts\":\"Posts_Posts__3akOg\",\"title\":\"Posts_title__3Bxxu\"};","import React from 'react';\r\nimport styles from './Inputs.module.css';\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n\r\n    const hasError = meta.touched && meta.error;\r\n\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError? styles.error : '')}>\r\n            <div>\r\n                <textarea {...input} {...props}/>\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n\r\n    const hasError = meta.touched && meta.error;\r\n\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError? styles.error : '')}>\r\n            <div>\r\n                <input {...input} {...props}/>\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    );\r\n};\r\n"],"sourceRoot":""}