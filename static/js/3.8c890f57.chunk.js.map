{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Wallpaper/Wallpaper.module.css","components/Dialogs/DialogsList/DialogList.module.css","components/Dialogs/DialogsList/DialogItem/DialogItem.module.css","components/Dialogs/Messages/Messages.module.css","components/Dialogs/Messages/Message/Message.module.css","components/Dialogs/Messages/SendMessage/SendMessage.module.css","HOC/withAuthRedirect.tsx","components/Wallpaper/Wallpaper.tsx","components/Dialogs/DialogsList/DialogItem/DialogItem.tsx","components/Dialogs/DialogsList/DialogList.tsx","components/Dialogs/DialogsList/DialogListContainer.tsx","components/Dialogs/Messages/Message/Message.tsx","components/Dialogs/Messages/SendMessage/SendMessageForm.tsx","components/Dialogs/Messages/Messages.tsx","components/Dialogs/Messages/MessagesContainer.tsx","components/Dialogs/Dialogs.tsx"],"names":["module","exports","Component","Wallpaper","className","styles","box","img","src","alt","DialogItem","props","dialog","logoSrc","userLogo","to","id","activeClassName","active","name","DialogList","DialogsElements","DialogsData","map","key","dialogList","DialogListContainer","useSelector","state","dialogsPage","Message","message","maxLength30","maxLengthCreator","reduxForm","form","sendMessage","onSubmit","handleSubmit","Field","component","CustomTextarea","placeholder","validate","required","Messages","MessagesElements","MessagesData","messages","formData","resetForm","getMessagesData","MessagesContainer","dispatch","useDispatch","useCallback","sendMessageActionCreator","reset","mapStateToPropsForRedirect","auth","withAuthRedirect","dialogs","connect"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,2B,oBCA5BD,EAAOC,QAAU,CAAC,IAAM,uBAAuB,IAAM,yB,oBCArDD,EAAOC,QAAU,CAAC,WAAa,iC,oBCA/BD,EAAOC,QAAU,CAAC,OAAS,2BAA2B,OAAS,6B,oBCA/DD,EAAOC,QAAU,CAAC,SAAW,6B,oBCA7BD,EAAOC,QAAU,CAAC,QAAU,2B,oBCA5BD,EAAOC,QAAU,CAAC,YAAc,mC,4CCcCC,E,oDCJlBC,EARG,WACd,OACI,yBAAKC,UAAWC,IAAOC,KACnB,yBAAKF,UAAWC,IAAOE,IAAKC,IAAI,0FAA0FC,IAAK,O,6DCc5HC,EATyB,SAACC,GACrC,OACI,yBAAKP,UAAWC,IAAOO,QACnB,yBAAKJ,IAAKG,EAAME,SAAWC,IAAUL,IAAK,KAC1C,kBAAC,IAAD,CAASM,GAAE,mBAAcJ,EAAMK,IAAMC,gBAAiBZ,IAAOa,QAA7D,IAAuEP,EAAMQ,KAA7E,OCKGC,EAXyB,SAACT,GAErC,IAAIU,EAAkBV,EAAMW,YAAYC,KAAK,SAAAX,GAAM,OAAI,kBAAC,EAAD,CAAYY,IAAKZ,EAAOI,GAAIA,GAAIJ,EAAOI,GAAIG,KAAMP,EAAOO,KAAMN,QAASD,EAAOC,aAErI,OACI,yBAAKT,UAAWC,IAAOoB,YAClBJ,I,QCAEK,EATa,WAExB,IAAMJ,EAAiCK,aAAY,SAACC,GAAD,OAAyBA,EAAMC,YAAYP,eAEhG,OACM,kBAAC,EAAD,CAAYA,YAAaA,K,oCCKlBQ,EARsB,SAACnB,GAClC,OACI,yBAAKP,UAAWC,IAAO0B,SAClBpB,EAAMoB,U,qDCLbC,EAAcC,YAAiB,IAiBtBC,cAA+B,CAACC,KAAO,mBAAvCD,EAX2D,SAACvB,GAEvE,OACI,0BAAMP,UAAWC,IAAO+B,YAAaC,SAAU1B,EAAM2B,cACjD,kBAACC,EAAA,EAAD,CAAOpB,KAAM,UAAWqB,UAAWC,IAC5BC,YAAa,qBAAsBC,SAAU,CAACC,IAAUZ,KAC/D,oDCWGa,EAjBuB,SAAClC,GAEnC,IAKMmC,EAAmBnC,EAAMoC,aAAaxB,KAAK,SAAAQ,GAAO,OAAI,kBAAC,EAAD,CAASA,QAASA,EAAQA,QAASf,GAAIe,EAAQf,GAAIQ,IAAKO,EAAQf,QAE5H,OACI,yBAAKZ,UAAWC,IAAO2C,UAClBF,EACD,kBAAC,EAAD,CAAiBT,SAVR,SAACY,GAChBtC,EAAMyB,YAAYa,EAASlB,SAC3BpB,EAAMuC,iB,kBCWNC,EAAkB,SAACvB,GACrB,OAAOA,EAAMC,YAAYkB,cAiBdK,EAdqB,WAEhC,IAAML,EAAepB,YAAYwB,GAC3BE,EAAWC,cAEXlB,EAAcmB,uBAAY,SAACxB,GAAD,OAAasB,EAASG,YAAyBzB,MAAW,CAACsB,IACrFH,EAAYK,uBAAY,kBAAMF,EAASI,YAAM,sBAAqB,CAACJ,IAEzE,OACI,kBAAC,EAAD,CAAUN,aAAcA,EACVX,YAAaA,EACbc,UAAWA,K,QRrC3BQ,EAA6B,SAAC9B,GAChC,MAAO,CACHZ,GAAIY,EAAM+B,KAAK3C,KSYR4C,WTJkB1D,ESRP,WACtB,OACI,6BACI,kBAAC,EAAD,MACA,yBAAKE,UAAWC,IAAOwD,SACnB,kBAAC,EAAD,MACA,kBAAC,EAAD,STYLC,YAAsCJ,EAAtCI,EARgD,SAACnD,GACpD,OAAMA,EAAMK,GAIL,kBAACd,EAAcS,GAHX,kBAAC,IAAD,CAAUI,GAAG","file":"static/js/3.8c890f57.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3z73c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"Wallpaper_img__1T4kh\",\"box\":\"Wallpaper_box__BIgZy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogList\":\"DialogList_dialogList__1B_1K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__o_9MG\",\"active\":\"DialogItem_active__3gxjB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Messages_messages__1Tn-w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__GOVCz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sendMessage\":\"SendMessage_sendMessage__3FUtc\"};","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../redux/redux-store\";\r\n\r\nconst mapStateToPropsForRedirect = (state:AppStateType): PropsType => {\r\n    return {\r\n        id: state.auth.id\r\n    }\r\n};\r\n\r\ntype PropsType = {\r\n    id: number | null\r\n}\r\n\r\nexport const withAuthRedirect = (Component: React.FC) => {\r\n\r\n    const withAuthRedirectContainer: React.FC<PropsType> = (props) => {\r\n        if ( !props.id ) {\r\n            return <Redirect to=\"/login\"/>\r\n        }else\r\n\r\n        return <Component {...props}/>\r\n    };\r\n\r\n    return connect<PropsType,{},{},AppStateType>(mapStateToPropsForRedirect)(withAuthRedirectContainer);\r\n\r\n};","import React from 'react';\r\nimport styles from './Wallpaper.module.css';\r\n\r\nconst Wallpaper = () => {\r\n    return(\r\n        <div className={styles.box}>\r\n            <img className={styles.img} src='https://wonderkids.club/wp-content/uploads/2019/09/casteism-india_peopleandthoughts.png' alt={''}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Wallpaper;","import React from 'react';\r\nimport styles from './DialogItem.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport userLogo from '../../../../Images/scalable-vector-graphics-avatar-learning-icon-customer-login-avatar.jpg'\r\n\r\ntype PropsType = {\r\n    logoSrc: string|null\r\n    id: number\r\n    name: string\r\n}\r\n\r\nconst DialogItem: React.FC<PropsType> = (props) => {\r\n    return(\r\n        <div className={styles.dialog}>\r\n            <img src={props.logoSrc || userLogo} alt={''}/>\r\n            <NavLink to={`/dialogs/${props.id}`} activeClassName={styles.active}> {props.name} </NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport styles from './DialogList.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport {DialogType} from \"../../../redux/reducers/dialogs-reducer\";\r\n\r\ntype PropsType = {\r\n    DialogsData: Array<DialogType>\r\n}\r\n\r\nconst DialogList: React.FC<PropsType> = (props) => {\r\n\r\n    let DialogsElements = props.DialogsData.map( dialog => <DialogItem key={dialog.id} id={dialog.id} name={dialog.name} logoSrc={dialog.logoSrc}/>);\r\n\r\n    return (\r\n        <div className={styles.dialogList}>\r\n            {DialogsElements}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DialogList;","import React from 'react';\r\nimport DialogList from \"./DialogList\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/redux-store\";\r\nimport {DialogType} from \"../../../redux/reducers/dialogs-reducer\";\r\n\r\nconst DialogListContainer = () => {\r\n\r\n    const DialogsData: Array<DialogType> = useSelector((state: AppStateType) => state.dialogsPage.DialogsData);\r\n\r\n  return (\r\n        <DialogList DialogsData={DialogsData}/>\r\n  );\r\n};\r\n\r\nexport default DialogListContainer;","import React from 'react';\r\nimport styles from \"./Message.module.css\";\r\n\r\ntype PropsType = {\r\n    id: number\r\n    message: string\r\n}\r\n\r\nconst Message: React.FC<PropsType> = (props) => {\r\n    return(\r\n        <div className={styles.message}>\r\n            {props.message}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Message;","import React from 'react';\r\nimport styles from './SendMessage.module.css';\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {CustomTextarea} from \"../../../common/customElements/Inputs\";\r\nimport {maxLengthCreator, required} from \"../../../../utils/validators\";\r\n\r\nconst maxLength30 = maxLengthCreator(30);\r\n\r\nexport type MessageFormDataType = {\r\n    message: string\r\n}\r\n\r\nconst SendMessageForm: React.FC<InjectedFormProps<MessageFormDataType>> = (props) => {\r\n\r\n    return (\r\n        <form className={styles.sendMessage} onSubmit={props.handleSubmit}>\r\n            <Field name={'message'} component={CustomTextarea}\r\n                   placeholder={'enter your message'} validate={[required, maxLength30]}/>\r\n            <button>Send message</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default reduxForm<MessageFormDataType>({form : 'sendMessageForm'})(SendMessageForm);","import React from 'react';\r\nimport styles from './Messages.module.css';\r\nimport Message from \"./Message/Message\";\r\nimport SendMessageForm, {MessageFormDataType} from './SendMessage/SendMessageForm'\r\nimport {MessageType} from \"../../../redux/reducers/dialogs-reducer\";\r\n\r\ntype PropsType = {\r\n    MessagesData: Array<MessageType>\r\n    sendMessage: (message: string)=>void\r\n    resetForm: ()=>void\r\n}\r\n\r\nconst Messages: React.FC<PropsType> = (props) => {\r\n\r\n    const onSubmit = (formData: MessageFormDataType) => {\r\n      props.sendMessage(formData.message);\r\n      props.resetForm();\r\n    };\r\n\r\n    const MessagesElements = props.MessagesData.map( message => <Message message={message.message} id={message.id} key={message.id}/>);\r\n\r\n    return(\r\n        <div className={styles.messages}>\r\n            {MessagesElements}\r\n            <SendMessageForm onSubmit={ onSubmit }/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Messages;","import React, {useCallback} from 'react';\r\nimport Messages from \"./Messages\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {sendMessageActionCreator} from \"../../../redux/reducers/dialogs-reducer\";\r\nimport {AppStateType} from \"../../../redux/redux-store\";\r\nimport {reset} from \"redux-form\";\r\n\r\n// type MapStatePropsType = {\r\n//     MessagesData: Array<MessageType>\r\n// }\r\n// type MapDispatchPropsType = {\r\n//     sendMessageActionCreator: (message:string)=>void\r\n// }\r\n\r\n// const mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n//   return {\r\n//       MessagesData : state.dialogsPage.MessagesData\r\n//   }\r\n// };\r\n//\r\n// const mapDispatchToProps: MapDispatchPropsType = {\r\n//   sendMessageActionCreator\r\n// };\r\n\r\n// const MessagesContainer = connect<MapStatePropsType,MapDispatchPropsType,{},AppStateType>(mapStateToProps, mapDispatchToProps)(Messages);\r\n\r\n\r\nconst getMessagesData = (state: AppStateType) => {\r\n    return state.dialogsPage.MessagesData\r\n};\r\n\r\nconst MessagesContainer: React.FC = () => {\r\n\r\n    const MessagesData = useSelector(getMessagesData);\r\n    const dispatch = useDispatch();\r\n\r\n    const sendMessage = useCallback((message) => dispatch(sendMessageActionCreator(message)), [dispatch]);\r\n    const resetForm = useCallback(() => dispatch(reset('sendMessageForm')), [dispatch]);\r\n\r\n    return (\r\n        <Messages MessagesData={MessagesData}\r\n                      sendMessage={sendMessage}\r\n                      resetForm={resetForm}/>)\r\n};\r\n\r\nexport default MessagesContainer;","import React from 'react';\r\nimport styles from './Dialogs.module.css';\r\nimport Wallpaper from \"../Wallpaper/Wallpaper\";\r\nimport DialogListContainer from \"./DialogsList/DialogListContainer\";\r\nimport MessagesContainer from \"./Messages/MessagesContainer\";\r\nimport {withAuthRedirect} from \"../../HOC/withAuthRedirect\";\r\n\r\nconst Dialogs: React.FC = () => {\r\n    return (\r\n        <div>\r\n            <Wallpaper/>\r\n            <div className={styles.dialogs}>\r\n                <DialogListContainer/>\r\n                <MessagesContainer/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withAuthRedirect(Dialogs);\r\n"],"sourceRoot":""}