{"version":3,"sources":["components/Login/Login.module.css","components/Login/LoginForm.tsx","components/Login/Login.tsx"],"names":["module","exports","LoginForm","props","useState","errorMessage","setErrorMessage","dispatch","useDispatch","useEffect","loginError","message","layout","name","initialValues","remember","onFieldsChange","onFinish","formData","login","Item","label","required","validateStatus","undefined","rules","type","help","Password","valuePropName","captchaUrl","src","alt","style","width","display","margin","htmlType","Login","id","useSelector","state","auth","theme","app","history","useHistory","to","justify","align","height","span","className","styles","container","title","goToUsersButton","onClick","push"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,UAAY,yBAAyB,MAAQ,qBAAqB,gBAAkB,iC,iICyFvFC,EAzEwB,SAACC,GAAW,IAAD,EAENC,mBAAS,IAFH,mBAEvCC,EAFuC,KAEzBC,EAFyB,KAIxCC,EAAWC,cAEjBC,qBAAU,WACTH,EAAgBH,EAAMO,WAAWC,WAC/B,CAACR,EAAMO,aAYV,OACI,kBAAC,IAAD,CACIE,OAAO,WACLC,KAAK,QACLC,cAAe,CAAEC,UAAU,GAC3BC,eAVa,WACnBV,EAAgB,KAUVW,SAhBO,SAAEC,GACfX,EAASY,YAAMD,MAiBX,kBAAC,IAAKE,KAAN,CACIC,MAAM,QACNC,UAAU,EACVT,KAAK,QACLU,eAAgBlB,EAAe,aAAUmB,EACzCC,MAAO,CAAC,CAAEH,UAAU,EAAMX,QAAS,2BAC/B,CAACe,KAAK,QAASf,QAAQ,wBAC3B,kBAAC,IAAD,OAGJ,kBAAC,IAAKS,KAAN,CACIC,MAAM,WACNC,UAAU,EACVT,KAAK,WACLU,eAAgBlB,EAAe,aAAUmB,EACzCG,KAAMtB,QAA8BmB,EACpCC,MAAO,CAAC,CAAEH,UAAU,EAAMX,QAAS,gCAEnC,kBAAC,IAAMiB,SAAP,OAGJ,kBAAC,IAAKR,KAAN,CAAYP,KAAK,aAAagB,cAAc,WACxC,kBAAC,IAAD,qBAGH1B,EAAM2B,YAAc,oCAAE,6BACnB,yBAAKC,IAAK5B,EAAM2B,WAAYE,IAAK,MAErC,kBAAC,IAAKZ,KAAN,CACIE,UAAU,EACVT,KAAK,UACLY,MAAO,CAAC,CAAEH,UAAU,EAAMX,QAAS,0BACnC,kBAAC,IAAD,QAGJ,kBAAC,IAAKS,KAAN,KACI,kBAAC,IAAD,CAAQa,MAAO,CAACC,MAAO,MAAOC,QAAS,QAASC,OAAQ,UAChDV,KAAK,UAAUW,SAAS,UADhC,a,mCC1CDC,UA9BS,WAEpB,IAAMC,EAAKC,aAAY,SAACC,GAAD,OAAyBA,EAAMC,KAAKH,MACrD7B,EAAa8B,aAAY,SAACC,GAAD,OAAyBA,EAAMC,KAAKhC,cAC7DoB,EAAaU,aAAY,SAACC,GAAD,OAAyBA,EAAMC,KAAKZ,cAC7Da,EAAQH,aAAY,SAACC,GAAD,OAAyBA,EAAMG,IAAID,SACvDE,EAAUC,cAEhB,OAAIP,EACO,kBAAC,IAAD,CAAUQ,GAAG,aAIpB,oCACI,kBAAC,IAAD,CAAKC,QAAQ,SAASC,MAAO,SAAUhB,MAAO,CAACiB,OAAQ,UACnD,kBAAC,IAAD,CAAKC,KAAM,IACP,yBAAKC,UAAS,UAAKC,IAAOC,UAAZ,YAAyBX,EAAQ,OAAS,KACpD,yBAAKS,UAAWC,IAAOE,OAC/B,uCAEA,kBAAC,EAAD,CAAWzB,WAAYA,EAAYpB,WAAYA,KAE3C,yBAAK0C,UAAWC,IAAOG,iBACnB,kBAAC,IAAD,CAAQ9B,KAAM,OAAQ+B,QAAU,kBAAMZ,EAAQa,KAAK,YAAW","file":"static/js/5.d75aecfb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Login_container__23Hu0\",\"title\":\"Login_title__9aU0W\",\"goToUsersButton\":\"Login_goToUsersButton__aydWo\"};","import React, {useEffect, useState} from \"react\";\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {login, loginErrorType} from \"../../redux/reducers/auth-reducer\";\r\n\r\n\r\nexport type LoginFormDataType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    captcha?: string\r\n}\r\ntype PropsType = {\r\n    captchaUrl: string\r\n    loginError: loginErrorType\r\n}\r\n\r\nconst LoginForm: React.FC<PropsType> = (props) => {\r\n\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n     setErrorMessage(props.loginError.message)\r\n    }, [props.loginError]);\r\n\r\n    const onFinish = ( formData: LoginFormDataType ) => {\r\n        dispatch(login(formData));\r\n    };\r\n\r\n\r\n    const onFieldsChange = () => {\r\n        setErrorMessage('');\r\n    };\r\n\r\n\r\n    return (\r\n        <Form\r\n            layout='vertical'\r\n              name=\"login\"\r\n              initialValues={{ remember: true }}\r\n              onFieldsChange={ onFieldsChange }\r\n              onFinish={onFinish}>\r\n\r\n            <Form.Item\r\n                label=\"Email\"\r\n                required={false}\r\n                name=\"email\"\r\n                validateStatus={errorMessage ? 'error' : undefined}\r\n                rules={[{ required: true, message: 'Please enter your email' },\r\n                    {type:'email', message:'Email is not valid'}]}>\r\n                <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                label=\"Password\"\r\n                required={false}\r\n                name=\"password\"\r\n                validateStatus={errorMessage ? 'error' : undefined}\r\n                help={errorMessage ? errorMessage : undefined}\r\n                rules={[{ required: true, message: 'Please enter your password' }]}\r\n            >\r\n                <Input.Password />\r\n            </Form.Item>\r\n\r\n            <Form.Item  name=\"rememberMe\" valuePropName=\"checked\">\r\n                <Checkbox>Remember me</Checkbox>\r\n            </Form.Item>\r\n\r\n            {props.captchaUrl && <><div>\r\n                <img src={props.captchaUrl} alt={''}/>\r\n                </div>\r\n            <Form.Item\r\n                required={false}\r\n                name=\"captcha\"\r\n                rules={[{ required: true, message: 'Captcha is required!' }]}>\r\n                <Input />\r\n            </Form.Item></>}\r\n\r\n            <Form.Item>\r\n                <Button style={{width: '30%', display: 'block', margin: '0 auto'}}\r\n                        type=\"primary\" htmlType=\"submit\">\r\n                    Log In\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React from 'react';\nimport {useSelector} from \"react-redux\";\nimport {Redirect, useHistory} from \"react-router-dom\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport LoginForm from \"./LoginForm\";\nimport styles from \"./Login.module.css\";\nimport {Button, Col, Row} from \"antd\";\n\n\nconst Login: React.FC = () => {\n\n    const id = useSelector((state: AppStateType) => state.auth.id);\n    const loginError = useSelector((state: AppStateType) => state.auth.loginError);\n    const captchaUrl = useSelector((state: AppStateType) => state.auth.captchaUrl);\n    const theme = useSelector((state: AppStateType) => state.app.theme);\n    const history = useHistory();\n\n    if (id) {\n        return <Redirect to='/profile'/>\n    }\n\n    return (\n        <>\n            <Row justify='center' align={'middle'} style={{height: '100vh'}}>\n                <Col span={10}>\n                    <div className={`${styles.container} ${theme ? 'dark' : ''}`}>\n                        <div className={styles.title}>\n                <h1>Log In</h1>\n                        </div>\n                <LoginForm captchaUrl={captchaUrl} loginError={loginError}/>\n                    </div>\n                    <div className={styles.goToUsersButton}>\n                        <Button type={'link'} onClick={ () => history.push('/users')}><b>Go to users</b></Button>\n                    </div>\n                </Col>\n            </Row>\n        </>\n    );\n};\nexport default Login;\n\n\n\n"],"sourceRoot":""}